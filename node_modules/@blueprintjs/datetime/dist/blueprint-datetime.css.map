{"version":3,"sources":["../src/blueprint-datetime.css"],"names":[],"mappings":"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","file":"blueprint-datetime.css","sourcesContent":["@charset \"UTF-8\";\n/*\n * Copyright 2015 Palantir Technologies, Inc. All rights reserved.\n * Licensed under the BSD-3 License as modified (the “License”); you may obtain a copy\n * of the license at https://github.com/palantir/blueprint/blob/master/LICENSE\n * and https://github.com/palantir/blueprint/blob/master/PATENTS\n */\n/*\nDate & time\n\n<div class=\"pt-callout pt-intent-primary pt-icon-info-sign\">\n  <h5>Separate package required</h5>\n  The date and time components do not ship with the `@blueprintjs/core` package,\n  and must be installed separately as `@blueprintjs/datetime`.\n</div>\n\nThis package provides several components for interacting with dates and times:\n\n- [`DatePicker`](#components.datetime.datepicker) for selecting a single date (day, month, year).\n\n- [`DateRangePicker`](#components.datetime.daterangepicker) for selecting date ranges.\n\n- [`TimePicker`](#components.datetime.timepicker) for selecting a time (hour, minute, second,\n  millisecond).\n\n- [`DateTimePicker`](#components.datetime.datetimepicker), which composes `DatePicker` and\n  `TimePicker` to select a date and time together.\n\n- [`DateInput`](#components.datetime.dateinput), which composes a text input with a `DatePicker` in\n  a `Popover`, for use in forms.\n\nThey are available in the __@blueprintjs/datetime__ package on\n[NPM](https://www.npmjs.com/package/@blueprintjs/datetime).\n\nMake sure to review the [general usage docs for JS components](#components.usage).\n\n```sh\nnpm install --save @blueprintjs/datetime\n```\n\nStyleguide components.datetime\n*/\n/*\nColors\n\nHex values for these colors can be accessed in JavaScript. The global version of the module exposes\nthe `Blueprint.Colors` object. In CommonJS, you may `import { Colors } from \"@blueprintjs/core\"`.\n\nStyleguide colors\n*/\n/*\nGray scale\n\nBlack, white and everything in between. The gray scale should be used for\nthe main UI frame: containers, headers, sections, boxes, etc.\nIf you need to call attention to a particular element (buttons, icons, tooltips, etc.),\nuse one of the [core colors](#colors.core).\n\n@react-docs GrayscalePalette\n\nWeight: -1\n\nStyleguide colors.grays\n*/\n/*\nCore colors\n\nCore colors are reserved for user interface design. Use these to help call\nattention to specific UI elements, such as buttons, callouts, icons, etc.\nEach core color is mapped to what we call a __visual intent__. We use intents\nto convey the status of UI elements:\n\n- _Blue_ (intent: primary) elevates elements from the typical gray scale UI frame.\n- _Green_ (intent: success) indicates successful operations.\n- _Orange_ (intent: warning) indicates warnings and intermediate states.\n- _Red_ (intent: danger) indicates errors and potentially destructive operations.\n\nCore colors are also designed to:\n\n- go well together and be used alongside each other in any application.\n- adhere to [WCAG 2.0](https://www.w3.org/TR/WCAG20/) standards, and therefore are\n  highly accessible to visually impaired and color blind users.\n\n@react-docs CoreColorsPalette\n\nStyleguide colors.core\n*/\n/*\nExtended colors\n\nExtended colors should typically be reserved for data visualizations: any time\nyou need to represent data of some sort, you can use these.\nThese colors are less strict on [WCAG 2.0](https://www.w3.org/TR/WCAG20/)\naccessibility standards and should therefore not be used for typical user\ninterface design — take a look at [core colors](#colors.core) instead.\n\n@react-docs ExtendedColorsPalette\n\nStyleguide colors.extended\n*/\n/*\nColor aliases\n\nThese variables are semantic aliases of our [colors](#colors). They are used throughout Blueprint\nitself to ensure consistent color usage across components.\n\n<table class=pt-table>\n  <thead>\n    <tr>\n      <th></th>\n      <th>Variable</th>\n      <th>Description</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-intent-primary\"></div></td>\n      <td><code>$pt-intent-primary</code></td>\n      <td>Primary intent color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-intent-success\"></div></td>\n      <td><code>$pt-intent-success</code></td>\n      <td>Success intent color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-intent-warning\"></div></td>\n      <td><code>$pt-intent-warning</code></td>\n      <td>Warning intent color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-intent-danger\"></div></td>\n      <td><code>$pt-intent-danger</code></td>\n      <td>Danger intent color</td>\n    </tr>\n\n    <tr>\n      <td><div class=\"docs-color-bubble alias-app-background-color\"></div></td>\n      <td><code>$pt-app-background-color</code></td>\n      <td>Application background color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-app-background-color\"></div></td>\n      <td><code>$pt-dark-app-background-color</code></td>\n      <td>Dark theme application background color</td>\n    </tr>\n\n    <tr>\n      <td><div class=\"docs-color-bubble alias-text-color\"></div></td>\n      <td><code>$pt-text-color</code></td>\n      <td>Default text color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-text-color-muted\"></div></td>\n      <td><code>$pt-text-color-muted</code></td>\n      <td>Muted text color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-text-color-disabled\"></div></td>\n      <td><code>$pt-text-color-disabled</code></td>\n      <td>Disabled text color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-heading-color\"></div></td>\n      <td><code>$pt-heading-color</code></td>\n      <td>Text color for headers</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-link-color\"></div></td>\n      <td><code>$pt-link-color</code></td>\n      <td>Text color for links</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-text-color\"></div></td>\n      <td><code>$pt-dark-text-color</code></td>\n      <td>Dark theme default text color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-text-color-muted\"></div></td>\n      <td><code>$pt-dark-text-color-muted</code></td>\n      <td>Dark theme muted text color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-text-color-disabled\"></div></td>\n      <td><code>$pt-dark-text-color-disabled</code></td>\n      <td>Dark theme disabled text color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-heading-color\"></div></td>\n      <td><code>$pt-dark-heading-color</code></td>\n      <td>Dark theme text color for headers</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-link-color\"></div></td>\n      <td><code>$pt-dark-link-color</code></td>\n      <td>Dark theme text color for links</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-text-selection-color\"></div></td>\n      <td><code>$pt-text-selection-color</code></td>\n      <td>Text selection color</td>\n    </tr>\n\n    <tr>\n      <td><div class=\"docs-color-bubble alias-icon-color\"></div></td>\n      <td><code>$pt-icon-color</code></td>\n      <td>Default icon color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-icon-color-hover\"></div></td>\n      <td><code>$pt-icon-color-hover</code></td>\n      <td>Hovered icon color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-icon-color-disabled\"></div></td>\n      <td><code>$pt-icon-color-disabled</code></td>\n      <td>Disabled icon color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-icon-color-selected\"></div></td>\n      <td><code>$pt-icon-color-selected</code></td>\n      <td>Selected icon color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-icon-color\"></div></td>\n      <td><code>$pt-dark-icon-color</code></td>\n      <td>Dark theme default icon color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-icon-color-hover\"></div></td>\n      <td><code>$pt-dark-icon-color-hover</code></td>\n      <td>Dark theme hovered icon color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-icon-color-disabled\"></div></td>\n      <td><code>$pt-dark-icon-color-disabled</code></td>\n      <td>Dark theme disabled icon color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-icon-color-selected\"></div></td>\n      <td><code>$pt-dark-icon-color-selected</code></td>\n      <td>Dark theme selected icon color</td>\n    </tr>\n\n    <tr>\n      <td><div class=\"docs-color-bubble alias-divider-black\"></div></td>\n      <td><code>$pt-divider-black</code></td>\n      <td>Black divider color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-divider-black\"></div></td>\n      <td><code>$pt-dark-divider-black</code></td>\n      <td>Dark theme black divider color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-divider-white\"></div></td>\n      <td><code>$pt-dark-divider-white</code></td>\n      <td>Dark theme white divider color</td>\n    </tr>\n\n    <tr>\n      <td><div class=\"docs-color-bubble alias-code-text-color\"></div></td>\n      <td><code>$pt-code-text-color</code></td>\n      <td>Code text color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-code-background-color\"></div></td>\n      <td><code>$pt-code-background-color</code></td>\n      <td>Code background color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-code-text-color\"></div></td>\n      <td><code>$pt-dark-code-text-color</code></td>\n      <td>Dark theme code text color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-code-background-color\"></div></td>\n      <td><code>$pt-dark-code-background-color</code></td>\n      <td>Dark theme code background color</td>\n    </tr>\n  </tbody>\n</table>\n\nStyleguide variables.colors\n*/\n/*\nColor schemes\n\nUse the following color scheme generators to produce color schemes for your data visualizations.\nFirst, choose the kind of scheme based on the type of your data, then customize the number of values\nusing the forms below. Finally, copy the colors array into your application and make it live!\n\nThe following schemes have been carefully crafted to be visually striking and easily understandable\nwhile remaining accessible to visually impaired and color blind users.\n\nStyleguide colors.schemes\n*/\n/*\nSequential color schemes\n\nSequential color schemes imply order and are best suited for representing data that\nranges from low-to-high values either on an ordinal or on a numerical scale.\n\nWeight: -1\n\n@react-docs SequentialSchemePalette\n\nStyleguide colors.schemes.sequential\n*/\n/*\nDiverging color schemes\n\nDiverging color schemes put equal emphasis on mid-range values and extremes\nat both ends of the data range.\n\n@react-docs DivergingSchemePalette\n\nStyleguide colors.schemes.diverging\n*/\n/*\nQualitative color schemes\n\nQualitative color schemes use a series of unrelated colors to create a\nscheme that does not imply order, merely difference in kind.\n\n@react-docs QualitativeSchemePalette\n\nStyleguide colors.schemes.qualitative\n*/\n/*\nColors\n\nHex values for these colors can be accessed in JavaScript. The global version of the module exposes\nthe `Blueprint.Colors` object. In CommonJS, you may `import { Colors } from \"@blueprintjs/core\"`.\n\nStyleguide colors\n*/\n/*\nGray scale\n\nBlack, white and everything in between. The gray scale should be used for\nthe main UI frame: containers, headers, sections, boxes, etc.\nIf you need to call attention to a particular element (buttons, icons, tooltips, etc.),\nuse one of the [core colors](#colors.core).\n\n@react-docs GrayscalePalette\n\nWeight: -1\n\nStyleguide colors.grays\n*/\n/*\nCore colors\n\nCore colors are reserved for user interface design. Use these to help call\nattention to specific UI elements, such as buttons, callouts, icons, etc.\nEach core color is mapped to what we call a __visual intent__. We use intents\nto convey the status of UI elements:\n\n- _Blue_ (intent: primary) elevates elements from the typical gray scale UI frame.\n- _Green_ (intent: success) indicates successful operations.\n- _Orange_ (intent: warning) indicates warnings and intermediate states.\n- _Red_ (intent: danger) indicates errors and potentially destructive operations.\n\nCore colors are also designed to:\n\n- go well together and be used alongside each other in any application.\n- adhere to [WCAG 2.0](https://www.w3.org/TR/WCAG20/) standards, and therefore are\n  highly accessible to visually impaired and color blind users.\n\n@react-docs CoreColorsPalette\n\nStyleguide colors.core\n*/\n/*\nExtended colors\n\nExtended colors should typically be reserved for data visualizations: any time\nyou need to represent data of some sort, you can use these.\nThese colors are less strict on [WCAG 2.0](https://www.w3.org/TR/WCAG20/)\naccessibility standards and should therefore not be used for typical user\ninterface design — take a look at [core colors](#colors.core) instead.\n\n@react-docs ExtendedColorsPalette\n\nStyleguide colors.extended\n*/\n/*\nColor aliases\n\nThese variables are semantic aliases of our [colors](#colors). They are used throughout Blueprint\nitself to ensure consistent color usage across components.\n\n<table class=pt-table>\n  <thead>\n    <tr>\n      <th></th>\n      <th>Variable</th>\n      <th>Description</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-intent-primary\"></div></td>\n      <td><code>$pt-intent-primary</code></td>\n      <td>Primary intent color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-intent-success\"></div></td>\n      <td><code>$pt-intent-success</code></td>\n      <td>Success intent color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-intent-warning\"></div></td>\n      <td><code>$pt-intent-warning</code></td>\n      <td>Warning intent color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-intent-danger\"></div></td>\n      <td><code>$pt-intent-danger</code></td>\n      <td>Danger intent color</td>\n    </tr>\n\n    <tr>\n      <td><div class=\"docs-color-bubble alias-app-background-color\"></div></td>\n      <td><code>$pt-app-background-color</code></td>\n      <td>Application background color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-app-background-color\"></div></td>\n      <td><code>$pt-dark-app-background-color</code></td>\n      <td>Dark theme application background color</td>\n    </tr>\n\n    <tr>\n      <td><div class=\"docs-color-bubble alias-text-color\"></div></td>\n      <td><code>$pt-text-color</code></td>\n      <td>Default text color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-text-color-muted\"></div></td>\n      <td><code>$pt-text-color-muted</code></td>\n      <td>Muted text color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-text-color-disabled\"></div></td>\n      <td><code>$pt-text-color-disabled</code></td>\n      <td>Disabled text color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-heading-color\"></div></td>\n      <td><code>$pt-heading-color</code></td>\n      <td>Text color for headers</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-link-color\"></div></td>\n      <td><code>$pt-link-color</code></td>\n      <td>Text color for links</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-text-color\"></div></td>\n      <td><code>$pt-dark-text-color</code></td>\n      <td>Dark theme default text color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-text-color-muted\"></div></td>\n      <td><code>$pt-dark-text-color-muted</code></td>\n      <td>Dark theme muted text color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-text-color-disabled\"></div></td>\n      <td><code>$pt-dark-text-color-disabled</code></td>\n      <td>Dark theme disabled text color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-heading-color\"></div></td>\n      <td><code>$pt-dark-heading-color</code></td>\n      <td>Dark theme text color for headers</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-link-color\"></div></td>\n      <td><code>$pt-dark-link-color</code></td>\n      <td>Dark theme text color for links</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-text-selection-color\"></div></td>\n      <td><code>$pt-text-selection-color</code></td>\n      <td>Text selection color</td>\n    </tr>\n\n    <tr>\n      <td><div class=\"docs-color-bubble alias-icon-color\"></div></td>\n      <td><code>$pt-icon-color</code></td>\n      <td>Default icon color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-icon-color-hover\"></div></td>\n      <td><code>$pt-icon-color-hover</code></td>\n      <td>Hovered icon color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-icon-color-disabled\"></div></td>\n      <td><code>$pt-icon-color-disabled</code></td>\n      <td>Disabled icon color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-icon-color-selected\"></div></td>\n      <td><code>$pt-icon-color-selected</code></td>\n      <td>Selected icon color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-icon-color\"></div></td>\n      <td><code>$pt-dark-icon-color</code></td>\n      <td>Dark theme default icon color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-icon-color-hover\"></div></td>\n      <td><code>$pt-dark-icon-color-hover</code></td>\n      <td>Dark theme hovered icon color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-icon-color-disabled\"></div></td>\n      <td><code>$pt-dark-icon-color-disabled</code></td>\n      <td>Dark theme disabled icon color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-icon-color-selected\"></div></td>\n      <td><code>$pt-dark-icon-color-selected</code></td>\n      <td>Dark theme selected icon color</td>\n    </tr>\n\n    <tr>\n      <td><div class=\"docs-color-bubble alias-divider-black\"></div></td>\n      <td><code>$pt-divider-black</code></td>\n      <td>Black divider color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-divider-black\"></div></td>\n      <td><code>$pt-dark-divider-black</code></td>\n      <td>Dark theme black divider color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-divider-white\"></div></td>\n      <td><code>$pt-dark-divider-white</code></td>\n      <td>Dark theme white divider color</td>\n    </tr>\n\n    <tr>\n      <td><div class=\"docs-color-bubble alias-code-text-color\"></div></td>\n      <td><code>$pt-code-text-color</code></td>\n      <td>Code text color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-code-background-color\"></div></td>\n      <td><code>$pt-code-background-color</code></td>\n      <td>Code background color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-code-text-color\"></div></td>\n      <td><code>$pt-dark-code-text-color</code></td>\n      <td>Dark theme code text color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-code-background-color\"></div></td>\n      <td><code>$pt-dark-code-background-color</code></td>\n      <td>Dark theme code background color</td>\n    </tr>\n  </tbody>\n</table>\n\nStyleguide variables.colors\n*/\n/*\nColor schemes\n\nUse the following color scheme generators to produce color schemes for your data visualizations.\nFirst, choose the kind of scheme based on the type of your data, then customize the number of values\nusing the forms below. Finally, copy the colors array into your application and make it live!\n\nThe following schemes have been carefully crafted to be visually striking and easily understandable\nwhile remaining accessible to visually impaired and color blind users.\n\nStyleguide colors.schemes\n*/\n/*\nSequential color schemes\n\nSequential color schemes imply order and are best suited for representing data that\nranges from low-to-high values either on an ordinal or on a numerical scale.\n\nWeight: -1\n\n@react-docs SequentialSchemePalette\n\nStyleguide colors.schemes.sequential\n*/\n/*\nDiverging color schemes\n\nDiverging color schemes put equal emphasis on mid-range values and extremes\nat both ends of the data range.\n\n@react-docs DivergingSchemePalette\n\nStyleguide colors.schemes.diverging\n*/\n/*\nQualitative color schemes\n\nQualitative color schemes use a series of unrelated colors to create a\nscheme that does not imply order, merely difference in kind.\n\n@react-docs QualitativeSchemePalette\n\nStyleguide colors.schemes.qualitative\n*/\n/*\nVariables\n\nAvailable for use with Sass and Less.\n\n```css.scss\n@import \"path/to/@blueprintjs/core/dist/variables\";\n```\n\nThe Sass `$` convention is used in this documentation for consistency with the original source code.\nEvery variable mentioned below is also available in `variables.less` with an `@` prefix instead of `$`.\n\nWeight: 4\n\nStyleguide variables\n*/\n/*\nFont variables\n\nTypically, correct typography styles should be achieved by using the proper HTML tag (`<p>` for\ntext, `<h*>` for headings, `<code>` for code, etc.). The following variables are provided for the\nrare cases where custom styling is necessary and should be used sparingly:\n\n- `$pt-font-family`\n- `$pt-font-family-monospace`\n- `$pt-font-size`\n- `$pt-font-size-small`\n- `$pt-font-size-large`\n- `$pt-line-height`\n\nSee the [Fonts section](#typography.fonts) for more information and usage guidelines.\n\nStyleguide variables.fonts\n*/\n/*\nIcon variables\n\nMost icons should be displayed using the `span.pt-icon-*` classes or via modifier classes on\ncomponents like `.pt-button`. In rare cases, you may need direct access to the content\nstring that generates each icon in the icon font. Blueprint provides these variables with\nstraightforward names (see the [Icons section](#icons) for the full list of identifiers):\n\n- `$pt-icon-style`\n- `$pt-icon-align-left`\n- `$pt-icon-align-center`\n- ...\n\nVariables are also provided for the two icon font families and their pixel sizes:\n\n- `@icons16-family`\n- `@icons20-family`\n- `$pt-icon-size-standard`\n- `$pt-icon-size-large`\n\nStyleguide variables.icons\n*/\n/*\nGrids & dimensions\n\nSizes of common components. Most sizing variables are based on `$pt-grid-size`, which has\na value of `10px`. Custom components should adhere to the relevant `height` variable.\n\n- `$pt-grid-size`\n- `$pt-border-radius`\n- `$pt-button-height`\n- `$pt-button-height-large`\n- `$pt-input-height`\n- `$pt-input-height-large`\n- `$pt-navbar-height`\n\nWeight: 1\n\nStyleguide variables.dimensions\n*/\n/*\nGrid system\n\nBlueprint doesn't provide a grid system. In general, you should try to use the `$pt-grid-size`\nvariable to generate layout & sizing style rules in your CSS codebase.\n\nIn lieu of a full grid system, you should try to use the __CSS flexible box layout model__ (a.k.a.\n\"flexbox\"). It's quite powerful on its own and allows you to build robust, responsive layouts\nwithout writing much CSS. Here are some resources for learning flexbox:\n   - [MDN guide](https://developer.mozilla.org/en-US/docs/Web/Guide/CSS/Flexible_boxes)\n   - [CSS Tricks guide](https://css-tricks.com/snippets/css/a-guide-to-flexbox/)\n\nStyleguide variables.dimensions.grid\n*/\n/*\nLayering\n\nBlueprint provides variables for three z-index layers. This should be enough for most use cases,\nespecially if you make correct use of [stacking context][MDN]. [Overlay](#components.overlay)\ncomponents such as dialogs and popovers use these z-index values to configure their stacking\ncontexts.\n\n- `$pt-z-index-base`\n- `$pt-z-index-content`\n- `$pt-z-index-overlay`\n\n[MDN]: https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Positioning/Understanding_z_index/The_stacking_context\n\nWeight: 1\n\nStyleguide variables.layering\n*/\n/*\nLight theme styles\n\nUse these when you need to build custom UI components that look similar to Blueprint's\nlight theme components.\n\n- `$pt-dialog-box-shadow`\n- `$pt-input-box-shadow`\n- `$pt-popover-box-shadow`\n- `$pt-tooltip-box-shadow`\n\nWeight: 2\n\nStyleguide variables.light\n*/\n/*\nDark theme styles\n\nUse these when you need to build custom UI components that look similar to Blueprint's\ndark theme components.\n\n- `$pt-dark-dialog-box-shadow`\n- `$pt-dark-input-box-shadow`\n- `$pt-dark-popover-box-shadow`\n- `$pt-dark-tooltip-box-shadow`\n\nWeight: 3\n\nStyleguide variables.dark\n*/\n/*\nColors\n\nHex values for these colors can be accessed in JavaScript. The global version of the module exposes\nthe `Blueprint.Colors` object. In CommonJS, you may `import { Colors } from \"@blueprintjs/core\"`.\n\nStyleguide colors\n*/\n/*\nGray scale\n\nBlack, white and everything in between. The gray scale should be used for\nthe main UI frame: containers, headers, sections, boxes, etc.\nIf you need to call attention to a particular element (buttons, icons, tooltips, etc.),\nuse one of the [core colors](#colors.core).\n\n@react-docs GrayscalePalette\n\nWeight: -1\n\nStyleguide colors.grays\n*/\n/*\nCore colors\n\nCore colors are reserved for user interface design. Use these to help call\nattention to specific UI elements, such as buttons, callouts, icons, etc.\nEach core color is mapped to what we call a __visual intent__. We use intents\nto convey the status of UI elements:\n\n- _Blue_ (intent: primary) elevates elements from the typical gray scale UI frame.\n- _Green_ (intent: success) indicates successful operations.\n- _Orange_ (intent: warning) indicates warnings and intermediate states.\n- _Red_ (intent: danger) indicates errors and potentially destructive operations.\n\nCore colors are also designed to:\n\n- go well together and be used alongside each other in any application.\n- adhere to [WCAG 2.0](https://www.w3.org/TR/WCAG20/) standards, and therefore are\n  highly accessible to visually impaired and color blind users.\n\n@react-docs CoreColorsPalette\n\nStyleguide colors.core\n*/\n/*\nExtended colors\n\nExtended colors should typically be reserved for data visualizations: any time\nyou need to represent data of some sort, you can use these.\nThese colors are less strict on [WCAG 2.0](https://www.w3.org/TR/WCAG20/)\naccessibility standards and should therefore not be used for typical user\ninterface design — take a look at [core colors](#colors.core) instead.\n\n@react-docs ExtendedColorsPalette\n\nStyleguide colors.extended\n*/\n/*\nColor aliases\n\nThese variables are semantic aliases of our [colors](#colors). They are used throughout Blueprint\nitself to ensure consistent color usage across components.\n\n<table class=pt-table>\n  <thead>\n    <tr>\n      <th></th>\n      <th>Variable</th>\n      <th>Description</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-intent-primary\"></div></td>\n      <td><code>$pt-intent-primary</code></td>\n      <td>Primary intent color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-intent-success\"></div></td>\n      <td><code>$pt-intent-success</code></td>\n      <td>Success intent color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-intent-warning\"></div></td>\n      <td><code>$pt-intent-warning</code></td>\n      <td>Warning intent color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-intent-danger\"></div></td>\n      <td><code>$pt-intent-danger</code></td>\n      <td>Danger intent color</td>\n    </tr>\n\n    <tr>\n      <td><div class=\"docs-color-bubble alias-app-background-color\"></div></td>\n      <td><code>$pt-app-background-color</code></td>\n      <td>Application background color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-app-background-color\"></div></td>\n      <td><code>$pt-dark-app-background-color</code></td>\n      <td>Dark theme application background color</td>\n    </tr>\n\n    <tr>\n      <td><div class=\"docs-color-bubble alias-text-color\"></div></td>\n      <td><code>$pt-text-color</code></td>\n      <td>Default text color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-text-color-muted\"></div></td>\n      <td><code>$pt-text-color-muted</code></td>\n      <td>Muted text color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-text-color-disabled\"></div></td>\n      <td><code>$pt-text-color-disabled</code></td>\n      <td>Disabled text color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-heading-color\"></div></td>\n      <td><code>$pt-heading-color</code></td>\n      <td>Text color for headers</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-link-color\"></div></td>\n      <td><code>$pt-link-color</code></td>\n      <td>Text color for links</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-text-color\"></div></td>\n      <td><code>$pt-dark-text-color</code></td>\n      <td>Dark theme default text color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-text-color-muted\"></div></td>\n      <td><code>$pt-dark-text-color-muted</code></td>\n      <td>Dark theme muted text color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-text-color-disabled\"></div></td>\n      <td><code>$pt-dark-text-color-disabled</code></td>\n      <td>Dark theme disabled text color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-heading-color\"></div></td>\n      <td><code>$pt-dark-heading-color</code></td>\n      <td>Dark theme text color for headers</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-link-color\"></div></td>\n      <td><code>$pt-dark-link-color</code></td>\n      <td>Dark theme text color for links</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-text-selection-color\"></div></td>\n      <td><code>$pt-text-selection-color</code></td>\n      <td>Text selection color</td>\n    </tr>\n\n    <tr>\n      <td><div class=\"docs-color-bubble alias-icon-color\"></div></td>\n      <td><code>$pt-icon-color</code></td>\n      <td>Default icon color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-icon-color-hover\"></div></td>\n      <td><code>$pt-icon-color-hover</code></td>\n      <td>Hovered icon color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-icon-color-disabled\"></div></td>\n      <td><code>$pt-icon-color-disabled</code></td>\n      <td>Disabled icon color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-icon-color-selected\"></div></td>\n      <td><code>$pt-icon-color-selected</code></td>\n      <td>Selected icon color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-icon-color\"></div></td>\n      <td><code>$pt-dark-icon-color</code></td>\n      <td>Dark theme default icon color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-icon-color-hover\"></div></td>\n      <td><code>$pt-dark-icon-color-hover</code></td>\n      <td>Dark theme hovered icon color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-icon-color-disabled\"></div></td>\n      <td><code>$pt-dark-icon-color-disabled</code></td>\n      <td>Dark theme disabled icon color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-icon-color-selected\"></div></td>\n      <td><code>$pt-dark-icon-color-selected</code></td>\n      <td>Dark theme selected icon color</td>\n    </tr>\n\n    <tr>\n      <td><div class=\"docs-color-bubble alias-divider-black\"></div></td>\n      <td><code>$pt-divider-black</code></td>\n      <td>Black divider color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-divider-black\"></div></td>\n      <td><code>$pt-dark-divider-black</code></td>\n      <td>Dark theme black divider color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-divider-white\"></div></td>\n      <td><code>$pt-dark-divider-white</code></td>\n      <td>Dark theme white divider color</td>\n    </tr>\n\n    <tr>\n      <td><div class=\"docs-color-bubble alias-code-text-color\"></div></td>\n      <td><code>$pt-code-text-color</code></td>\n      <td>Code text color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-code-background-color\"></div></td>\n      <td><code>$pt-code-background-color</code></td>\n      <td>Code background color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-code-text-color\"></div></td>\n      <td><code>$pt-dark-code-text-color</code></td>\n      <td>Dark theme code text color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-code-background-color\"></div></td>\n      <td><code>$pt-dark-code-background-color</code></td>\n      <td>Dark theme code background color</td>\n    </tr>\n  </tbody>\n</table>\n\nStyleguide variables.colors\n*/\n/*\nColor schemes\n\nUse the following color scheme generators to produce color schemes for your data visualizations.\nFirst, choose the kind of scheme based on the type of your data, then customize the number of values\nusing the forms below. Finally, copy the colors array into your application and make it live!\n\nThe following schemes have been carefully crafted to be visually striking and easily understandable\nwhile remaining accessible to visually impaired and color blind users.\n\nStyleguide colors.schemes\n*/\n/*\nSequential color schemes\n\nSequential color schemes imply order and are best suited for representing data that\nranges from low-to-high values either on an ordinal or on a numerical scale.\n\nWeight: -1\n\n@react-docs SequentialSchemePalette\n\nStyleguide colors.schemes.sequential\n*/\n/*\nDiverging color schemes\n\nDiverging color schemes put equal emphasis on mid-range values and extremes\nat both ends of the data range.\n\n@react-docs DivergingSchemePalette\n\nStyleguide colors.schemes.diverging\n*/\n/*\nQualitative color schemes\n\nQualitative color schemes use a series of unrelated colors to create a\nscheme that does not imply order, merely difference in kind.\n\n@react-docs QualitativeSchemePalette\n\nStyleguide colors.schemes.qualitative\n*/\n/*\nColors\n\nHex values for these colors can be accessed in JavaScript. The global version of the module exposes\nthe `Blueprint.Colors` object. In CommonJS, you may `import { Colors } from \"@blueprintjs/core\"`.\n\nStyleguide colors\n*/\n/*\nGray scale\n\nBlack, white and everything in between. The gray scale should be used for\nthe main UI frame: containers, headers, sections, boxes, etc.\nIf you need to call attention to a particular element (buttons, icons, tooltips, etc.),\nuse one of the [core colors](#colors.core).\n\n@react-docs GrayscalePalette\n\nWeight: -1\n\nStyleguide colors.grays\n*/\n/*\nCore colors\n\nCore colors are reserved for user interface design. Use these to help call\nattention to specific UI elements, such as buttons, callouts, icons, etc.\nEach core color is mapped to what we call a __visual intent__. We use intents\nto convey the status of UI elements:\n\n- _Blue_ (intent: primary) elevates elements from the typical gray scale UI frame.\n- _Green_ (intent: success) indicates successful operations.\n- _Orange_ (intent: warning) indicates warnings and intermediate states.\n- _Red_ (intent: danger) indicates errors and potentially destructive operations.\n\nCore colors are also designed to:\n\n- go well together and be used alongside each other in any application.\n- adhere to [WCAG 2.0](https://www.w3.org/TR/WCAG20/) standards, and therefore are\n  highly accessible to visually impaired and color blind users.\n\n@react-docs CoreColorsPalette\n\nStyleguide colors.core\n*/\n/*\nExtended colors\n\nExtended colors should typically be reserved for data visualizations: any time\nyou need to represent data of some sort, you can use these.\nThese colors are less strict on [WCAG 2.0](https://www.w3.org/TR/WCAG20/)\naccessibility standards and should therefore not be used for typical user\ninterface design — take a look at [core colors](#colors.core) instead.\n\n@react-docs ExtendedColorsPalette\n\nStyleguide colors.extended\n*/\n/*\nColor aliases\n\nThese variables are semantic aliases of our [colors](#colors). They are used throughout Blueprint\nitself to ensure consistent color usage across components.\n\n<table class=pt-table>\n  <thead>\n    <tr>\n      <th></th>\n      <th>Variable</th>\n      <th>Description</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-intent-primary\"></div></td>\n      <td><code>$pt-intent-primary</code></td>\n      <td>Primary intent color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-intent-success\"></div></td>\n      <td><code>$pt-intent-success</code></td>\n      <td>Success intent color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-intent-warning\"></div></td>\n      <td><code>$pt-intent-warning</code></td>\n      <td>Warning intent color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-intent-danger\"></div></td>\n      <td><code>$pt-intent-danger</code></td>\n      <td>Danger intent color</td>\n    </tr>\n\n    <tr>\n      <td><div class=\"docs-color-bubble alias-app-background-color\"></div></td>\n      <td><code>$pt-app-background-color</code></td>\n      <td>Application background color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-app-background-color\"></div></td>\n      <td><code>$pt-dark-app-background-color</code></td>\n      <td>Dark theme application background color</td>\n    </tr>\n\n    <tr>\n      <td><div class=\"docs-color-bubble alias-text-color\"></div></td>\n      <td><code>$pt-text-color</code></td>\n      <td>Default text color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-text-color-muted\"></div></td>\n      <td><code>$pt-text-color-muted</code></td>\n      <td>Muted text color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-text-color-disabled\"></div></td>\n      <td><code>$pt-text-color-disabled</code></td>\n      <td>Disabled text color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-heading-color\"></div></td>\n      <td><code>$pt-heading-color</code></td>\n      <td>Text color for headers</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-link-color\"></div></td>\n      <td><code>$pt-link-color</code></td>\n      <td>Text color for links</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-text-color\"></div></td>\n      <td><code>$pt-dark-text-color</code></td>\n      <td>Dark theme default text color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-text-color-muted\"></div></td>\n      <td><code>$pt-dark-text-color-muted</code></td>\n      <td>Dark theme muted text color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-text-color-disabled\"></div></td>\n      <td><code>$pt-dark-text-color-disabled</code></td>\n      <td>Dark theme disabled text color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-heading-color\"></div></td>\n      <td><code>$pt-dark-heading-color</code></td>\n      <td>Dark theme text color for headers</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-link-color\"></div></td>\n      <td><code>$pt-dark-link-color</code></td>\n      <td>Dark theme text color for links</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-text-selection-color\"></div></td>\n      <td><code>$pt-text-selection-color</code></td>\n      <td>Text selection color</td>\n    </tr>\n\n    <tr>\n      <td><div class=\"docs-color-bubble alias-icon-color\"></div></td>\n      <td><code>$pt-icon-color</code></td>\n      <td>Default icon color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-icon-color-hover\"></div></td>\n      <td><code>$pt-icon-color-hover</code></td>\n      <td>Hovered icon color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-icon-color-disabled\"></div></td>\n      <td><code>$pt-icon-color-disabled</code></td>\n      <td>Disabled icon color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-icon-color-selected\"></div></td>\n      <td><code>$pt-icon-color-selected</code></td>\n      <td>Selected icon color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-icon-color\"></div></td>\n      <td><code>$pt-dark-icon-color</code></td>\n      <td>Dark theme default icon color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-icon-color-hover\"></div></td>\n      <td><code>$pt-dark-icon-color-hover</code></td>\n      <td>Dark theme hovered icon color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-icon-color-disabled\"></div></td>\n      <td><code>$pt-dark-icon-color-disabled</code></td>\n      <td>Dark theme disabled icon color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-icon-color-selected\"></div></td>\n      <td><code>$pt-dark-icon-color-selected</code></td>\n      <td>Dark theme selected icon color</td>\n    </tr>\n\n    <tr>\n      <td><div class=\"docs-color-bubble alias-divider-black\"></div></td>\n      <td><code>$pt-divider-black</code></td>\n      <td>Black divider color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-divider-black\"></div></td>\n      <td><code>$pt-dark-divider-black</code></td>\n      <td>Dark theme black divider color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-divider-white\"></div></td>\n      <td><code>$pt-dark-divider-white</code></td>\n      <td>Dark theme white divider color</td>\n    </tr>\n\n    <tr>\n      <td><div class=\"docs-color-bubble alias-code-text-color\"></div></td>\n      <td><code>$pt-code-text-color</code></td>\n      <td>Code text color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-code-background-color\"></div></td>\n      <td><code>$pt-code-background-color</code></td>\n      <td>Code background color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-code-text-color\"></div></td>\n      <td><code>$pt-dark-code-text-color</code></td>\n      <td>Dark theme code text color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-code-background-color\"></div></td>\n      <td><code>$pt-dark-code-background-color</code></td>\n      <td>Dark theme code background color</td>\n    </tr>\n  </tbody>\n</table>\n\nStyleguide variables.colors\n*/\n/*\nColor schemes\n\nUse the following color scheme generators to produce color schemes for your data visualizations.\nFirst, choose the kind of scheme based on the type of your data, then customize the number of values\nusing the forms below. Finally, copy the colors array into your application and make it live!\n\nThe following schemes have been carefully crafted to be visually striking and easily understandable\nwhile remaining accessible to visually impaired and color blind users.\n\nStyleguide colors.schemes\n*/\n/*\nSequential color schemes\n\nSequential color schemes imply order and are best suited for representing data that\nranges from low-to-high values either on an ordinal or on a numerical scale.\n\nWeight: -1\n\n@react-docs SequentialSchemePalette\n\nStyleguide colors.schemes.sequential\n*/\n/*\nDiverging color schemes\n\nDiverging color schemes put equal emphasis on mid-range values and extremes\nat both ends of the data range.\n\n@react-docs DivergingSchemePalette\n\nStyleguide colors.schemes.diverging\n*/\n/*\nQualitative color schemes\n\nQualitative color schemes use a series of unrelated colors to create a\nscheme that does not imply order, merely difference in kind.\n\n@react-docs QualitativeSchemePalette\n\nStyleguide colors.schemes.qualitative\n*/\n/*\nVariables\n\nAvailable for use with Sass and Less.\n\n```css.scss\n@import \"path/to/@blueprintjs/core/dist/variables\";\n```\n\nThe Sass `$` convention is used in this documentation for consistency with the original source code.\nEvery variable mentioned below is also available in `variables.less` with an `@` prefix instead of `$`.\n\nWeight: 4\n\nStyleguide variables\n*/\n/*\nFont variables\n\nTypically, correct typography styles should be achieved by using the proper HTML tag (`<p>` for\ntext, `<h*>` for headings, `<code>` for code, etc.). The following variables are provided for the\nrare cases where custom styling is necessary and should be used sparingly:\n\n- `$pt-font-family`\n- `$pt-font-family-monospace`\n- `$pt-font-size`\n- `$pt-font-size-small`\n- `$pt-font-size-large`\n- `$pt-line-height`\n\nSee the [Fonts section](#typography.fonts) for more information and usage guidelines.\n\nStyleguide variables.fonts\n*/\n/*\nIcon variables\n\nMost icons should be displayed using the `span.pt-icon-*` classes or via modifier classes on\ncomponents like `.pt-button`. In rare cases, you may need direct access to the content\nstring that generates each icon in the icon font. Blueprint provides these variables with\nstraightforward names (see the [Icons section](#icons) for the full list of identifiers):\n\n- `$pt-icon-style`\n- `$pt-icon-align-left`\n- `$pt-icon-align-center`\n- ...\n\nVariables are also provided for the two icon font families and their pixel sizes:\n\n- `@icons16-family`\n- `@icons20-family`\n- `$pt-icon-size-standard`\n- `$pt-icon-size-large`\n\nStyleguide variables.icons\n*/\n/*\nGrids & dimensions\n\nSizes of common components. Most sizing variables are based on `$pt-grid-size`, which has\na value of `10px`. Custom components should adhere to the relevant `height` variable.\n\n- `$pt-grid-size`\n- `$pt-border-radius`\n- `$pt-button-height`\n- `$pt-button-height-large`\n- `$pt-input-height`\n- `$pt-input-height-large`\n- `$pt-navbar-height`\n\nWeight: 1\n\nStyleguide variables.dimensions\n*/\n/*\nGrid system\n\nBlueprint doesn't provide a grid system. In general, you should try to use the `$pt-grid-size`\nvariable to generate layout & sizing style rules in your CSS codebase.\n\nIn lieu of a full grid system, you should try to use the __CSS flexible box layout model__ (a.k.a.\n\"flexbox\"). It's quite powerful on its own and allows you to build robust, responsive layouts\nwithout writing much CSS. Here are some resources for learning flexbox:\n   - [MDN guide](https://developer.mozilla.org/en-US/docs/Web/Guide/CSS/Flexible_boxes)\n   - [CSS Tricks guide](https://css-tricks.com/snippets/css/a-guide-to-flexbox/)\n\nStyleguide variables.dimensions.grid\n*/\n/*\nLayering\n\nBlueprint provides variables for three z-index layers. This should be enough for most use cases,\nespecially if you make correct use of [stacking context][MDN]. [Overlay](#components.overlay)\ncomponents such as dialogs and popovers use these z-index values to configure their stacking\ncontexts.\n\n- `$pt-z-index-base`\n- `$pt-z-index-content`\n- `$pt-z-index-overlay`\n\n[MDN]: https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Positioning/Understanding_z_index/The_stacking_context\n\nWeight: 1\n\nStyleguide variables.layering\n*/\n/*\nLight theme styles\n\nUse these when you need to build custom UI components that look similar to Blueprint's\nlight theme components.\n\n- `$pt-dialog-box-shadow`\n- `$pt-input-box-shadow`\n- `$pt-popover-box-shadow`\n- `$pt-tooltip-box-shadow`\n\nWeight: 2\n\nStyleguide variables.light\n*/\n/*\nDark theme styles\n\nUse these when you need to build custom UI components that look similar to Blueprint's\ndark theme components.\n\n- `$pt-dark-dialog-box-shadow`\n- `$pt-dark-input-box-shadow`\n- `$pt-dark-popover-box-shadow`\n- `$pt-dark-tooltip-box-shadow`\n\nWeight: 3\n\nStyleguide variables.dark\n*/\n/*\nColors\n\nHex values for these colors can be accessed in JavaScript. The global version of the module exposes\nthe `Blueprint.Colors` object. In CommonJS, you may `import { Colors } from \"@blueprintjs/core\"`.\n\nStyleguide colors\n*/\n/*\nGray scale\n\nBlack, white and everything in between. The gray scale should be used for\nthe main UI frame: containers, headers, sections, boxes, etc.\nIf you need to call attention to a particular element (buttons, icons, tooltips, etc.),\nuse one of the [core colors](#colors.core).\n\n@react-docs GrayscalePalette\n\nWeight: -1\n\nStyleguide colors.grays\n*/\n/*\nCore colors\n\nCore colors are reserved for user interface design. Use these to help call\nattention to specific UI elements, such as buttons, callouts, icons, etc.\nEach core color is mapped to what we call a __visual intent__. We use intents\nto convey the status of UI elements:\n\n- _Blue_ (intent: primary) elevates elements from the typical gray scale UI frame.\n- _Green_ (intent: success) indicates successful operations.\n- _Orange_ (intent: warning) indicates warnings and intermediate states.\n- _Red_ (intent: danger) indicates errors and potentially destructive operations.\n\nCore colors are also designed to:\n\n- go well together and be used alongside each other in any application.\n- adhere to [WCAG 2.0](https://www.w3.org/TR/WCAG20/) standards, and therefore are\n  highly accessible to visually impaired and color blind users.\n\n@react-docs CoreColorsPalette\n\nStyleguide colors.core\n*/\n/*\nExtended colors\n\nExtended colors should typically be reserved for data visualizations: any time\nyou need to represent data of some sort, you can use these.\nThese colors are less strict on [WCAG 2.0](https://www.w3.org/TR/WCAG20/)\naccessibility standards and should therefore not be used for typical user\ninterface design — take a look at [core colors](#colors.core) instead.\n\n@react-docs ExtendedColorsPalette\n\nStyleguide colors.extended\n*/\n/*\nColor aliases\n\nThese variables are semantic aliases of our [colors](#colors). They are used throughout Blueprint\nitself to ensure consistent color usage across components.\n\n<table class=pt-table>\n  <thead>\n    <tr>\n      <th></th>\n      <th>Variable</th>\n      <th>Description</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-intent-primary\"></div></td>\n      <td><code>$pt-intent-primary</code></td>\n      <td>Primary intent color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-intent-success\"></div></td>\n      <td><code>$pt-intent-success</code></td>\n      <td>Success intent color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-intent-warning\"></div></td>\n      <td><code>$pt-intent-warning</code></td>\n      <td>Warning intent color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-intent-danger\"></div></td>\n      <td><code>$pt-intent-danger</code></td>\n      <td>Danger intent color</td>\n    </tr>\n\n    <tr>\n      <td><div class=\"docs-color-bubble alias-app-background-color\"></div></td>\n      <td><code>$pt-app-background-color</code></td>\n      <td>Application background color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-app-background-color\"></div></td>\n      <td><code>$pt-dark-app-background-color</code></td>\n      <td>Dark theme application background color</td>\n    </tr>\n\n    <tr>\n      <td><div class=\"docs-color-bubble alias-text-color\"></div></td>\n      <td><code>$pt-text-color</code></td>\n      <td>Default text color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-text-color-muted\"></div></td>\n      <td><code>$pt-text-color-muted</code></td>\n      <td>Muted text color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-text-color-disabled\"></div></td>\n      <td><code>$pt-text-color-disabled</code></td>\n      <td>Disabled text color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-heading-color\"></div></td>\n      <td><code>$pt-heading-color</code></td>\n      <td>Text color for headers</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-link-color\"></div></td>\n      <td><code>$pt-link-color</code></td>\n      <td>Text color for links</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-text-color\"></div></td>\n      <td><code>$pt-dark-text-color</code></td>\n      <td>Dark theme default text color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-text-color-muted\"></div></td>\n      <td><code>$pt-dark-text-color-muted</code></td>\n      <td>Dark theme muted text color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-text-color-disabled\"></div></td>\n      <td><code>$pt-dark-text-color-disabled</code></td>\n      <td>Dark theme disabled text color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-heading-color\"></div></td>\n      <td><code>$pt-dark-heading-color</code></td>\n      <td>Dark theme text color for headers</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-link-color\"></div></td>\n      <td><code>$pt-dark-link-color</code></td>\n      <td>Dark theme text color for links</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-text-selection-color\"></div></td>\n      <td><code>$pt-text-selection-color</code></td>\n      <td>Text selection color</td>\n    </tr>\n\n    <tr>\n      <td><div class=\"docs-color-bubble alias-icon-color\"></div></td>\n      <td><code>$pt-icon-color</code></td>\n      <td>Default icon color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-icon-color-hover\"></div></td>\n      <td><code>$pt-icon-color-hover</code></td>\n      <td>Hovered icon color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-icon-color-disabled\"></div></td>\n      <td><code>$pt-icon-color-disabled</code></td>\n      <td>Disabled icon color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-icon-color-selected\"></div></td>\n      <td><code>$pt-icon-color-selected</code></td>\n      <td>Selected icon color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-icon-color\"></div></td>\n      <td><code>$pt-dark-icon-color</code></td>\n      <td>Dark theme default icon color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-icon-color-hover\"></div></td>\n      <td><code>$pt-dark-icon-color-hover</code></td>\n      <td>Dark theme hovered icon color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-icon-color-disabled\"></div></td>\n      <td><code>$pt-dark-icon-color-disabled</code></td>\n      <td>Dark theme disabled icon color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-icon-color-selected\"></div></td>\n      <td><code>$pt-dark-icon-color-selected</code></td>\n      <td>Dark theme selected icon color</td>\n    </tr>\n\n    <tr>\n      <td><div class=\"docs-color-bubble alias-divider-black\"></div></td>\n      <td><code>$pt-divider-black</code></td>\n      <td>Black divider color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-divider-black\"></div></td>\n      <td><code>$pt-dark-divider-black</code></td>\n      <td>Dark theme black divider color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-divider-white\"></div></td>\n      <td><code>$pt-dark-divider-white</code></td>\n      <td>Dark theme white divider color</td>\n    </tr>\n\n    <tr>\n      <td><div class=\"docs-color-bubble alias-code-text-color\"></div></td>\n      <td><code>$pt-code-text-color</code></td>\n      <td>Code text color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-code-background-color\"></div></td>\n      <td><code>$pt-code-background-color</code></td>\n      <td>Code background color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-code-text-color\"></div></td>\n      <td><code>$pt-dark-code-text-color</code></td>\n      <td>Dark theme code text color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-code-background-color\"></div></td>\n      <td><code>$pt-dark-code-background-color</code></td>\n      <td>Dark theme code background color</td>\n    </tr>\n  </tbody>\n</table>\n\nStyleguide variables.colors\n*/\n/*\nColor schemes\n\nUse the following color scheme generators to produce color schemes for your data visualizations.\nFirst, choose the kind of scheme based on the type of your data, then customize the number of values\nusing the forms below. Finally, copy the colors array into your application and make it live!\n\nThe following schemes have been carefully crafted to be visually striking and easily understandable\nwhile remaining accessible to visually impaired and color blind users.\n\nStyleguide colors.schemes\n*/\n/*\nSequential color schemes\n\nSequential color schemes imply order and are best suited for representing data that\nranges from low-to-high values either on an ordinal or on a numerical scale.\n\nWeight: -1\n\n@react-docs SequentialSchemePalette\n\nStyleguide colors.schemes.sequential\n*/\n/*\nDiverging color schemes\n\nDiverging color schemes put equal emphasis on mid-range values and extremes\nat both ends of the data range.\n\n@react-docs DivergingSchemePalette\n\nStyleguide colors.schemes.diverging\n*/\n/*\nQualitative color schemes\n\nQualitative color schemes use a series of unrelated colors to create a\nscheme that does not imply order, merely difference in kind.\n\n@react-docs QualitativeSchemePalette\n\nStyleguide colors.schemes.qualitative\n*/\n/*\nColors\n\nHex values for these colors can be accessed in JavaScript. The global version of the module exposes\nthe `Blueprint.Colors` object. In CommonJS, you may `import { Colors } from \"@blueprintjs/core\"`.\n\nStyleguide colors\n*/\n/*\nGray scale\n\nBlack, white and everything in between. The gray scale should be used for\nthe main UI frame: containers, headers, sections, boxes, etc.\nIf you need to call attention to a particular element (buttons, icons, tooltips, etc.),\nuse one of the [core colors](#colors.core).\n\n@react-docs GrayscalePalette\n\nWeight: -1\n\nStyleguide colors.grays\n*/\n/*\nCore colors\n\nCore colors are reserved for user interface design. Use these to help call\nattention to specific UI elements, such as buttons, callouts, icons, etc.\nEach core color is mapped to what we call a __visual intent__. We use intents\nto convey the status of UI elements:\n\n- _Blue_ (intent: primary) elevates elements from the typical gray scale UI frame.\n- _Green_ (intent: success) indicates successful operations.\n- _Orange_ (intent: warning) indicates warnings and intermediate states.\n- _Red_ (intent: danger) indicates errors and potentially destructive operations.\n\nCore colors are also designed to:\n\n- go well together and be used alongside each other in any application.\n- adhere to [WCAG 2.0](https://www.w3.org/TR/WCAG20/) standards, and therefore are\n  highly accessible to visually impaired and color blind users.\n\n@react-docs CoreColorsPalette\n\nStyleguide colors.core\n*/\n/*\nExtended colors\n\nExtended colors should typically be reserved for data visualizations: any time\nyou need to represent data of some sort, you can use these.\nThese colors are less strict on [WCAG 2.0](https://www.w3.org/TR/WCAG20/)\naccessibility standards and should therefore not be used for typical user\ninterface design — take a look at [core colors](#colors.core) instead.\n\n@react-docs ExtendedColorsPalette\n\nStyleguide colors.extended\n*/\n/*\nColor aliases\n\nThese variables are semantic aliases of our [colors](#colors). They are used throughout Blueprint\nitself to ensure consistent color usage across components.\n\n<table class=pt-table>\n  <thead>\n    <tr>\n      <th></th>\n      <th>Variable</th>\n      <th>Description</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-intent-primary\"></div></td>\n      <td><code>$pt-intent-primary</code></td>\n      <td>Primary intent color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-intent-success\"></div></td>\n      <td><code>$pt-intent-success</code></td>\n      <td>Success intent color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-intent-warning\"></div></td>\n      <td><code>$pt-intent-warning</code></td>\n      <td>Warning intent color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-intent-danger\"></div></td>\n      <td><code>$pt-intent-danger</code></td>\n      <td>Danger intent color</td>\n    </tr>\n\n    <tr>\n      <td><div class=\"docs-color-bubble alias-app-background-color\"></div></td>\n      <td><code>$pt-app-background-color</code></td>\n      <td>Application background color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-app-background-color\"></div></td>\n      <td><code>$pt-dark-app-background-color</code></td>\n      <td>Dark theme application background color</td>\n    </tr>\n\n    <tr>\n      <td><div class=\"docs-color-bubble alias-text-color\"></div></td>\n      <td><code>$pt-text-color</code></td>\n      <td>Default text color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-text-color-muted\"></div></td>\n      <td><code>$pt-text-color-muted</code></td>\n      <td>Muted text color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-text-color-disabled\"></div></td>\n      <td><code>$pt-text-color-disabled</code></td>\n      <td>Disabled text color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-heading-color\"></div></td>\n      <td><code>$pt-heading-color</code></td>\n      <td>Text color for headers</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-link-color\"></div></td>\n      <td><code>$pt-link-color</code></td>\n      <td>Text color for links</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-text-color\"></div></td>\n      <td><code>$pt-dark-text-color</code></td>\n      <td>Dark theme default text color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-text-color-muted\"></div></td>\n      <td><code>$pt-dark-text-color-muted</code></td>\n      <td>Dark theme muted text color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-text-color-disabled\"></div></td>\n      <td><code>$pt-dark-text-color-disabled</code></td>\n      <td>Dark theme disabled text color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-heading-color\"></div></td>\n      <td><code>$pt-dark-heading-color</code></td>\n      <td>Dark theme text color for headers</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-link-color\"></div></td>\n      <td><code>$pt-dark-link-color</code></td>\n      <td>Dark theme text color for links</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-text-selection-color\"></div></td>\n      <td><code>$pt-text-selection-color</code></td>\n      <td>Text selection color</td>\n    </tr>\n\n    <tr>\n      <td><div class=\"docs-color-bubble alias-icon-color\"></div></td>\n      <td><code>$pt-icon-color</code></td>\n      <td>Default icon color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-icon-color-hover\"></div></td>\n      <td><code>$pt-icon-color-hover</code></td>\n      <td>Hovered icon color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-icon-color-disabled\"></div></td>\n      <td><code>$pt-icon-color-disabled</code></td>\n      <td>Disabled icon color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-icon-color-selected\"></div></td>\n      <td><code>$pt-icon-color-selected</code></td>\n      <td>Selected icon color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-icon-color\"></div></td>\n      <td><code>$pt-dark-icon-color</code></td>\n      <td>Dark theme default icon color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-icon-color-hover\"></div></td>\n      <td><code>$pt-dark-icon-color-hover</code></td>\n      <td>Dark theme hovered icon color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-icon-color-disabled\"></div></td>\n      <td><code>$pt-dark-icon-color-disabled</code></td>\n      <td>Dark theme disabled icon color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-icon-color-selected\"></div></td>\n      <td><code>$pt-dark-icon-color-selected</code></td>\n      <td>Dark theme selected icon color</td>\n    </tr>\n\n    <tr>\n      <td><div class=\"docs-color-bubble alias-divider-black\"></div></td>\n      <td><code>$pt-divider-black</code></td>\n      <td>Black divider color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-divider-black\"></div></td>\n      <td><code>$pt-dark-divider-black</code></td>\n      <td>Dark theme black divider color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-divider-white\"></div></td>\n      <td><code>$pt-dark-divider-white</code></td>\n      <td>Dark theme white divider color</td>\n    </tr>\n\n    <tr>\n      <td><div class=\"docs-color-bubble alias-code-text-color\"></div></td>\n      <td><code>$pt-code-text-color</code></td>\n      <td>Code text color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-code-background-color\"></div></td>\n      <td><code>$pt-code-background-color</code></td>\n      <td>Code background color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-code-text-color\"></div></td>\n      <td><code>$pt-dark-code-text-color</code></td>\n      <td>Dark theme code text color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-code-background-color\"></div></td>\n      <td><code>$pt-dark-code-background-color</code></td>\n      <td>Dark theme code background color</td>\n    </tr>\n  </tbody>\n</table>\n\nStyleguide variables.colors\n*/\n/*\nColor schemes\n\nUse the following color scheme generators to produce color schemes for your data visualizations.\nFirst, choose the kind of scheme based on the type of your data, then customize the number of values\nusing the forms below. Finally, copy the colors array into your application and make it live!\n\nThe following schemes have been carefully crafted to be visually striking and easily understandable\nwhile remaining accessible to visually impaired and color blind users.\n\nStyleguide colors.schemes\n*/\n/*\nSequential color schemes\n\nSequential color schemes imply order and are best suited for representing data that\nranges from low-to-high values either on an ordinal or on a numerical scale.\n\nWeight: -1\n\n@react-docs SequentialSchemePalette\n\nStyleguide colors.schemes.sequential\n*/\n/*\nDiverging color schemes\n\nDiverging color schemes put equal emphasis on mid-range values and extremes\nat both ends of the data range.\n\n@react-docs DivergingSchemePalette\n\nStyleguide colors.schemes.diverging\n*/\n/*\nQualitative color schemes\n\nQualitative color schemes use a series of unrelated colors to create a\nscheme that does not imply order, merely difference in kind.\n\n@react-docs QualitativeSchemePalette\n\nStyleguide colors.schemes.qualitative\n*/\n/*\nVariables\n\nAvailable for use with Sass and Less.\n\n```css.scss\n@import \"path/to/@blueprintjs/core/dist/variables\";\n```\n\nThe Sass `$` convention is used in this documentation for consistency with the original source code.\nEvery variable mentioned below is also available in `variables.less` with an `@` prefix instead of `$`.\n\nWeight: 4\n\nStyleguide variables\n*/\n/*\nFont variables\n\nTypically, correct typography styles should be achieved by using the proper HTML tag (`<p>` for\ntext, `<h*>` for headings, `<code>` for code, etc.). The following variables are provided for the\nrare cases where custom styling is necessary and should be used sparingly:\n\n- `$pt-font-family`\n- `$pt-font-family-monospace`\n- `$pt-font-size`\n- `$pt-font-size-small`\n- `$pt-font-size-large`\n- `$pt-line-height`\n\nSee the [Fonts section](#typography.fonts) for more information and usage guidelines.\n\nStyleguide variables.fonts\n*/\n/*\nIcon variables\n\nMost icons should be displayed using the `span.pt-icon-*` classes or via modifier classes on\ncomponents like `.pt-button`. In rare cases, you may need direct access to the content\nstring that generates each icon in the icon font. Blueprint provides these variables with\nstraightforward names (see the [Icons section](#icons) for the full list of identifiers):\n\n- `$pt-icon-style`\n- `$pt-icon-align-left`\n- `$pt-icon-align-center`\n- ...\n\nVariables are also provided for the two icon font families and their pixel sizes:\n\n- `@icons16-family`\n- `@icons20-family`\n- `$pt-icon-size-standard`\n- `$pt-icon-size-large`\n\nStyleguide variables.icons\n*/\n/*\nGrids & dimensions\n\nSizes of common components. Most sizing variables are based on `$pt-grid-size`, which has\na value of `10px`. Custom components should adhere to the relevant `height` variable.\n\n- `$pt-grid-size`\n- `$pt-border-radius`\n- `$pt-button-height`\n- `$pt-button-height-large`\n- `$pt-input-height`\n- `$pt-input-height-large`\n- `$pt-navbar-height`\n\nWeight: 1\n\nStyleguide variables.dimensions\n*/\n/*\nGrid system\n\nBlueprint doesn't provide a grid system. In general, you should try to use the `$pt-grid-size`\nvariable to generate layout & sizing style rules in your CSS codebase.\n\nIn lieu of a full grid system, you should try to use the __CSS flexible box layout model__ (a.k.a.\n\"flexbox\"). It's quite powerful on its own and allows you to build robust, responsive layouts\nwithout writing much CSS. Here are some resources for learning flexbox:\n   - [MDN guide](https://developer.mozilla.org/en-US/docs/Web/Guide/CSS/Flexible_boxes)\n   - [CSS Tricks guide](https://css-tricks.com/snippets/css/a-guide-to-flexbox/)\n\nStyleguide variables.dimensions.grid\n*/\n/*\nLayering\n\nBlueprint provides variables for three z-index layers. This should be enough for most use cases,\nespecially if you make correct use of [stacking context][MDN]. [Overlay](#components.overlay)\ncomponents such as dialogs and popovers use these z-index values to configure their stacking\ncontexts.\n\n- `$pt-z-index-base`\n- `$pt-z-index-content`\n- `$pt-z-index-overlay`\n\n[MDN]: https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Positioning/Understanding_z_index/The_stacking_context\n\nWeight: 1\n\nStyleguide variables.layering\n*/\n/*\nLight theme styles\n\nUse these when you need to build custom UI components that look similar to Blueprint's\nlight theme components.\n\n- `$pt-dialog-box-shadow`\n- `$pt-input-box-shadow`\n- `$pt-popover-box-shadow`\n- `$pt-tooltip-box-shadow`\n\nWeight: 2\n\nStyleguide variables.light\n*/\n/*\nDark theme styles\n\nUse these when you need to build custom UI components that look similar to Blueprint's\ndark theme components.\n\n- `$pt-dark-dialog-box-shadow`\n- `$pt-dark-input-box-shadow`\n- `$pt-dark-popover-box-shadow`\n- `$pt-dark-tooltip-box-shadow`\n\nWeight: 3\n\nStyleguide variables.dark\n*/\n/*\nA mixin to generate the classes for a React CSSTransitionGroup which animates any number of CSS\nproperties at once.\n\nTransitioned properties are specificed as a map of property names to lists of (inital value, final\nvalue). For enter & appear transitions, each property will transition from its initial to its final\nvalue. For leave transitions, each property will transition in reverse, from final to initial.\n\n**Simple example:**\n`@include react-transition(\"pt-popover\", (opacity: 0 1), $before: \"&\");`\nTransition named \"pt-popover\" moves opacity from 0 to 1. `\"&\"` indicates that the\nTransition classes are expected to be applied to this element, where the mixin is invoked.\n\n**Params:**\n$name: React transitionName prop\n$properties: map of CSS property to (initial, final) values\n$duration: transition duration\n$easing: transition easing function\n$delay: transition delay\n$before: selector text to insert before transition name (often to select self: &)\n$after: selector text to insert after transiton name (to select children)\n*/\n/*\nA mixin to generate the classes for one phase of a React CSSTransitionGroup.\n`$phase` must be `appear` or `enter` or `leave`.\nIf `enter` phase is given then `appear` phase will be generated at the same time.\nIf `leave` phase is given then property values are animated in reverse, from final to initial.\n\n**Example:**\n@include react-transition-phase(pt-toast, enter, $enter-translate, $before: \"&\");\n@include react-transition-phase(pt-toast, leave, $leave-blur, $pt-transition-duration * 3, $before: \"&\");\n*/\n/*\nGiven map of properties to values, set each property to the value at the given index.\n(remember that sass indices are 1-based).\n\nExample: `each-prop((opacity: 0 1), 2)` will print \"opacity: 1\"\n*/\n/*\nFormat transition class name with all the bits.\n\"enter\" phase will include \"appear\" phase in returned name.\n*/\n/*\nColors\n\nHex values for these colors can be accessed in JavaScript. The global version of the module exposes\nthe `Blueprint.Colors` object. In CommonJS, you may `import { Colors } from \"@blueprintjs/core\"`.\n\nStyleguide colors\n*/\n/*\nGray scale\n\nBlack, white and everything in between. The gray scale should be used for\nthe main UI frame: containers, headers, sections, boxes, etc.\nIf you need to call attention to a particular element (buttons, icons, tooltips, etc.),\nuse one of the [core colors](#colors.core).\n\n@react-docs GrayscalePalette\n\nWeight: -1\n\nStyleguide colors.grays\n*/\n/*\nCore colors\n\nCore colors are reserved for user interface design. Use these to help call\nattention to specific UI elements, such as buttons, callouts, icons, etc.\nEach core color is mapped to what we call a __visual intent__. We use intents\nto convey the status of UI elements:\n\n- _Blue_ (intent: primary) elevates elements from the typical gray scale UI frame.\n- _Green_ (intent: success) indicates successful operations.\n- _Orange_ (intent: warning) indicates warnings and intermediate states.\n- _Red_ (intent: danger) indicates errors and potentially destructive operations.\n\nCore colors are also designed to:\n\n- go well together and be used alongside each other in any application.\n- adhere to [WCAG 2.0](https://www.w3.org/TR/WCAG20/) standards, and therefore are\n  highly accessible to visually impaired and color blind users.\n\n@react-docs CoreColorsPalette\n\nStyleguide colors.core\n*/\n/*\nExtended colors\n\nExtended colors should typically be reserved for data visualizations: any time\nyou need to represent data of some sort, you can use these.\nThese colors are less strict on [WCAG 2.0](https://www.w3.org/TR/WCAG20/)\naccessibility standards and should therefore not be used for typical user\ninterface design — take a look at [core colors](#colors.core) instead.\n\n@react-docs ExtendedColorsPalette\n\nStyleguide colors.extended\n*/\n/*\nColor aliases\n\nThese variables are semantic aliases of our [colors](#colors). They are used throughout Blueprint\nitself to ensure consistent color usage across components.\n\n<table class=pt-table>\n  <thead>\n    <tr>\n      <th></th>\n      <th>Variable</th>\n      <th>Description</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-intent-primary\"></div></td>\n      <td><code>$pt-intent-primary</code></td>\n      <td>Primary intent color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-intent-success\"></div></td>\n      <td><code>$pt-intent-success</code></td>\n      <td>Success intent color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-intent-warning\"></div></td>\n      <td><code>$pt-intent-warning</code></td>\n      <td>Warning intent color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-intent-danger\"></div></td>\n      <td><code>$pt-intent-danger</code></td>\n      <td>Danger intent color</td>\n    </tr>\n\n    <tr>\n      <td><div class=\"docs-color-bubble alias-app-background-color\"></div></td>\n      <td><code>$pt-app-background-color</code></td>\n      <td>Application background color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-app-background-color\"></div></td>\n      <td><code>$pt-dark-app-background-color</code></td>\n      <td>Dark theme application background color</td>\n    </tr>\n\n    <tr>\n      <td><div class=\"docs-color-bubble alias-text-color\"></div></td>\n      <td><code>$pt-text-color</code></td>\n      <td>Default text color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-text-color-muted\"></div></td>\n      <td><code>$pt-text-color-muted</code></td>\n      <td>Muted text color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-text-color-disabled\"></div></td>\n      <td><code>$pt-text-color-disabled</code></td>\n      <td>Disabled text color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-heading-color\"></div></td>\n      <td><code>$pt-heading-color</code></td>\n      <td>Text color for headers</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-link-color\"></div></td>\n      <td><code>$pt-link-color</code></td>\n      <td>Text color for links</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-text-color\"></div></td>\n      <td><code>$pt-dark-text-color</code></td>\n      <td>Dark theme default text color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-text-color-muted\"></div></td>\n      <td><code>$pt-dark-text-color-muted</code></td>\n      <td>Dark theme muted text color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-text-color-disabled\"></div></td>\n      <td><code>$pt-dark-text-color-disabled</code></td>\n      <td>Dark theme disabled text color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-heading-color\"></div></td>\n      <td><code>$pt-dark-heading-color</code></td>\n      <td>Dark theme text color for headers</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-link-color\"></div></td>\n      <td><code>$pt-dark-link-color</code></td>\n      <td>Dark theme text color for links</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-text-selection-color\"></div></td>\n      <td><code>$pt-text-selection-color</code></td>\n      <td>Text selection color</td>\n    </tr>\n\n    <tr>\n      <td><div class=\"docs-color-bubble alias-icon-color\"></div></td>\n      <td><code>$pt-icon-color</code></td>\n      <td>Default icon color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-icon-color-hover\"></div></td>\n      <td><code>$pt-icon-color-hover</code></td>\n      <td>Hovered icon color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-icon-color-disabled\"></div></td>\n      <td><code>$pt-icon-color-disabled</code></td>\n      <td>Disabled icon color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-icon-color-selected\"></div></td>\n      <td><code>$pt-icon-color-selected</code></td>\n      <td>Selected icon color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-icon-color\"></div></td>\n      <td><code>$pt-dark-icon-color</code></td>\n      <td>Dark theme default icon color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-icon-color-hover\"></div></td>\n      <td><code>$pt-dark-icon-color-hover</code></td>\n      <td>Dark theme hovered icon color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-icon-color-disabled\"></div></td>\n      <td><code>$pt-dark-icon-color-disabled</code></td>\n      <td>Dark theme disabled icon color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-icon-color-selected\"></div></td>\n      <td><code>$pt-dark-icon-color-selected</code></td>\n      <td>Dark theme selected icon color</td>\n    </tr>\n\n    <tr>\n      <td><div class=\"docs-color-bubble alias-divider-black\"></div></td>\n      <td><code>$pt-divider-black</code></td>\n      <td>Black divider color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-divider-black\"></div></td>\n      <td><code>$pt-dark-divider-black</code></td>\n      <td>Dark theme black divider color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-divider-white\"></div></td>\n      <td><code>$pt-dark-divider-white</code></td>\n      <td>Dark theme white divider color</td>\n    </tr>\n\n    <tr>\n      <td><div class=\"docs-color-bubble alias-code-text-color\"></div></td>\n      <td><code>$pt-code-text-color</code></td>\n      <td>Code text color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-code-background-color\"></div></td>\n      <td><code>$pt-code-background-color</code></td>\n      <td>Code background color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-code-text-color\"></div></td>\n      <td><code>$pt-dark-code-text-color</code></td>\n      <td>Dark theme code text color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-code-background-color\"></div></td>\n      <td><code>$pt-dark-code-background-color</code></td>\n      <td>Dark theme code background color</td>\n    </tr>\n  </tbody>\n</table>\n\nStyleguide variables.colors\n*/\n/*\nColor schemes\n\nUse the following color scheme generators to produce color schemes for your data visualizations.\nFirst, choose the kind of scheme based on the type of your data, then customize the number of values\nusing the forms below. Finally, copy the colors array into your application and make it live!\n\nThe following schemes have been carefully crafted to be visually striking and easily understandable\nwhile remaining accessible to visually impaired and color blind users.\n\nStyleguide colors.schemes\n*/\n/*\nSequential color schemes\n\nSequential color schemes imply order and are best suited for representing data that\nranges from low-to-high values either on an ordinal or on a numerical scale.\n\nWeight: -1\n\n@react-docs SequentialSchemePalette\n\nStyleguide colors.schemes.sequential\n*/\n/*\nDiverging color schemes\n\nDiverging color schemes put equal emphasis on mid-range values and extremes\nat both ends of the data range.\n\n@react-docs DivergingSchemePalette\n\nStyleguide colors.schemes.diverging\n*/\n/*\nQualitative color schemes\n\nQualitative color schemes use a series of unrelated colors to create a\nscheme that does not imply order, merely difference in kind.\n\n@react-docs QualitativeSchemePalette\n\nStyleguide colors.schemes.qualitative\n*/\n/*\nColors\n\nHex values for these colors can be accessed in JavaScript. The global version of the module exposes\nthe `Blueprint.Colors` object. In CommonJS, you may `import { Colors } from \"@blueprintjs/core\"`.\n\nStyleguide colors\n*/\n/*\nGray scale\n\nBlack, white and everything in between. The gray scale should be used for\nthe main UI frame: containers, headers, sections, boxes, etc.\nIf you need to call attention to a particular element (buttons, icons, tooltips, etc.),\nuse one of the [core colors](#colors.core).\n\n@react-docs GrayscalePalette\n\nWeight: -1\n\nStyleguide colors.grays\n*/\n/*\nCore colors\n\nCore colors are reserved for user interface design. Use these to help call\nattention to specific UI elements, such as buttons, callouts, icons, etc.\nEach core color is mapped to what we call a __visual intent__. We use intents\nto convey the status of UI elements:\n\n- _Blue_ (intent: primary) elevates elements from the typical gray scale UI frame.\n- _Green_ (intent: success) indicates successful operations.\n- _Orange_ (intent: warning) indicates warnings and intermediate states.\n- _Red_ (intent: danger) indicates errors and potentially destructive operations.\n\nCore colors are also designed to:\n\n- go well together and be used alongside each other in any application.\n- adhere to [WCAG 2.0](https://www.w3.org/TR/WCAG20/) standards, and therefore are\n  highly accessible to visually impaired and color blind users.\n\n@react-docs CoreColorsPalette\n\nStyleguide colors.core\n*/\n/*\nExtended colors\n\nExtended colors should typically be reserved for data visualizations: any time\nyou need to represent data of some sort, you can use these.\nThese colors are less strict on [WCAG 2.0](https://www.w3.org/TR/WCAG20/)\naccessibility standards and should therefore not be used for typical user\ninterface design — take a look at [core colors](#colors.core) instead.\n\n@react-docs ExtendedColorsPalette\n\nStyleguide colors.extended\n*/\n/*\nColor aliases\n\nThese variables are semantic aliases of our [colors](#colors). They are used throughout Blueprint\nitself to ensure consistent color usage across components.\n\n<table class=pt-table>\n  <thead>\n    <tr>\n      <th></th>\n      <th>Variable</th>\n      <th>Description</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-intent-primary\"></div></td>\n      <td><code>$pt-intent-primary</code></td>\n      <td>Primary intent color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-intent-success\"></div></td>\n      <td><code>$pt-intent-success</code></td>\n      <td>Success intent color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-intent-warning\"></div></td>\n      <td><code>$pt-intent-warning</code></td>\n      <td>Warning intent color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-intent-danger\"></div></td>\n      <td><code>$pt-intent-danger</code></td>\n      <td>Danger intent color</td>\n    </tr>\n\n    <tr>\n      <td><div class=\"docs-color-bubble alias-app-background-color\"></div></td>\n      <td><code>$pt-app-background-color</code></td>\n      <td>Application background color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-app-background-color\"></div></td>\n      <td><code>$pt-dark-app-background-color</code></td>\n      <td>Dark theme application background color</td>\n    </tr>\n\n    <tr>\n      <td><div class=\"docs-color-bubble alias-text-color\"></div></td>\n      <td><code>$pt-text-color</code></td>\n      <td>Default text color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-text-color-muted\"></div></td>\n      <td><code>$pt-text-color-muted</code></td>\n      <td>Muted text color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-text-color-disabled\"></div></td>\n      <td><code>$pt-text-color-disabled</code></td>\n      <td>Disabled text color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-heading-color\"></div></td>\n      <td><code>$pt-heading-color</code></td>\n      <td>Text color for headers</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-link-color\"></div></td>\n      <td><code>$pt-link-color</code></td>\n      <td>Text color for links</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-text-color\"></div></td>\n      <td><code>$pt-dark-text-color</code></td>\n      <td>Dark theme default text color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-text-color-muted\"></div></td>\n      <td><code>$pt-dark-text-color-muted</code></td>\n      <td>Dark theme muted text color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-text-color-disabled\"></div></td>\n      <td><code>$pt-dark-text-color-disabled</code></td>\n      <td>Dark theme disabled text color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-heading-color\"></div></td>\n      <td><code>$pt-dark-heading-color</code></td>\n      <td>Dark theme text color for headers</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-link-color\"></div></td>\n      <td><code>$pt-dark-link-color</code></td>\n      <td>Dark theme text color for links</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-text-selection-color\"></div></td>\n      <td><code>$pt-text-selection-color</code></td>\n      <td>Text selection color</td>\n    </tr>\n\n    <tr>\n      <td><div class=\"docs-color-bubble alias-icon-color\"></div></td>\n      <td><code>$pt-icon-color</code></td>\n      <td>Default icon color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-icon-color-hover\"></div></td>\n      <td><code>$pt-icon-color-hover</code></td>\n      <td>Hovered icon color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-icon-color-disabled\"></div></td>\n      <td><code>$pt-icon-color-disabled</code></td>\n      <td>Disabled icon color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-icon-color-selected\"></div></td>\n      <td><code>$pt-icon-color-selected</code></td>\n      <td>Selected icon color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-icon-color\"></div></td>\n      <td><code>$pt-dark-icon-color</code></td>\n      <td>Dark theme default icon color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-icon-color-hover\"></div></td>\n      <td><code>$pt-dark-icon-color-hover</code></td>\n      <td>Dark theme hovered icon color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-icon-color-disabled\"></div></td>\n      <td><code>$pt-dark-icon-color-disabled</code></td>\n      <td>Dark theme disabled icon color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-icon-color-selected\"></div></td>\n      <td><code>$pt-dark-icon-color-selected</code></td>\n      <td>Dark theme selected icon color</td>\n    </tr>\n\n    <tr>\n      <td><div class=\"docs-color-bubble alias-divider-black\"></div></td>\n      <td><code>$pt-divider-black</code></td>\n      <td>Black divider color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-divider-black\"></div></td>\n      <td><code>$pt-dark-divider-black</code></td>\n      <td>Dark theme black divider color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-divider-white\"></div></td>\n      <td><code>$pt-dark-divider-white</code></td>\n      <td>Dark theme white divider color</td>\n    </tr>\n\n    <tr>\n      <td><div class=\"docs-color-bubble alias-code-text-color\"></div></td>\n      <td><code>$pt-code-text-color</code></td>\n      <td>Code text color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-code-background-color\"></div></td>\n      <td><code>$pt-code-background-color</code></td>\n      <td>Code background color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-code-text-color\"></div></td>\n      <td><code>$pt-dark-code-text-color</code></td>\n      <td>Dark theme code text color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-code-background-color\"></div></td>\n      <td><code>$pt-dark-code-background-color</code></td>\n      <td>Dark theme code background color</td>\n    </tr>\n  </tbody>\n</table>\n\nStyleguide variables.colors\n*/\n/*\nColor schemes\n\nUse the following color scheme generators to produce color schemes for your data visualizations.\nFirst, choose the kind of scheme based on the type of your data, then customize the number of values\nusing the forms below. Finally, copy the colors array into your application and make it live!\n\nThe following schemes have been carefully crafted to be visually striking and easily understandable\nwhile remaining accessible to visually impaired and color blind users.\n\nStyleguide colors.schemes\n*/\n/*\nSequential color schemes\n\nSequential color schemes imply order and are best suited for representing data that\nranges from low-to-high values either on an ordinal or on a numerical scale.\n\nWeight: -1\n\n@react-docs SequentialSchemePalette\n\nStyleguide colors.schemes.sequential\n*/\n/*\nDiverging color schemes\n\nDiverging color schemes put equal emphasis on mid-range values and extremes\nat both ends of the data range.\n\n@react-docs DivergingSchemePalette\n\nStyleguide colors.schemes.diverging\n*/\n/*\nQualitative color schemes\n\nQualitative color schemes use a series of unrelated colors to create a\nscheme that does not imply order, merely difference in kind.\n\n@react-docs QualitativeSchemePalette\n\nStyleguide colors.schemes.qualitative\n*/\n/*\nColors\n\nHex values for these colors can be accessed in JavaScript. The global version of the module exposes\nthe `Blueprint.Colors` object. In CommonJS, you may `import { Colors } from \"@blueprintjs/core\"`.\n\nStyleguide colors\n*/\n/*\nGray scale\n\nBlack, white and everything in between. The gray scale should be used for\nthe main UI frame: containers, headers, sections, boxes, etc.\nIf you need to call attention to a particular element (buttons, icons, tooltips, etc.),\nuse one of the [core colors](#colors.core).\n\n@react-docs GrayscalePalette\n\nWeight: -1\n\nStyleguide colors.grays\n*/\n/*\nCore colors\n\nCore colors are reserved for user interface design. Use these to help call\nattention to specific UI elements, such as buttons, callouts, icons, etc.\nEach core color is mapped to what we call a __visual intent__. We use intents\nto convey the status of UI elements:\n\n- _Blue_ (intent: primary) elevates elements from the typical gray scale UI frame.\n- _Green_ (intent: success) indicates successful operations.\n- _Orange_ (intent: warning) indicates warnings and intermediate states.\n- _Red_ (intent: danger) indicates errors and potentially destructive operations.\n\nCore colors are also designed to:\n\n- go well together and be used alongside each other in any application.\n- adhere to [WCAG 2.0](https://www.w3.org/TR/WCAG20/) standards, and therefore are\n  highly accessible to visually impaired and color blind users.\n\n@react-docs CoreColorsPalette\n\nStyleguide colors.core\n*/\n/*\nExtended colors\n\nExtended colors should typically be reserved for data visualizations: any time\nyou need to represent data of some sort, you can use these.\nThese colors are less strict on [WCAG 2.0](https://www.w3.org/TR/WCAG20/)\naccessibility standards and should therefore not be used for typical user\ninterface design — take a look at [core colors](#colors.core) instead.\n\n@react-docs ExtendedColorsPalette\n\nStyleguide colors.extended\n*/\n/*\nColor aliases\n\nThese variables are semantic aliases of our [colors](#colors). They are used throughout Blueprint\nitself to ensure consistent color usage across components.\n\n<table class=pt-table>\n  <thead>\n    <tr>\n      <th></th>\n      <th>Variable</th>\n      <th>Description</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-intent-primary\"></div></td>\n      <td><code>$pt-intent-primary</code></td>\n      <td>Primary intent color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-intent-success\"></div></td>\n      <td><code>$pt-intent-success</code></td>\n      <td>Success intent color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-intent-warning\"></div></td>\n      <td><code>$pt-intent-warning</code></td>\n      <td>Warning intent color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-intent-danger\"></div></td>\n      <td><code>$pt-intent-danger</code></td>\n      <td>Danger intent color</td>\n    </tr>\n\n    <tr>\n      <td><div class=\"docs-color-bubble alias-app-background-color\"></div></td>\n      <td><code>$pt-app-background-color</code></td>\n      <td>Application background color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-app-background-color\"></div></td>\n      <td><code>$pt-dark-app-background-color</code></td>\n      <td>Dark theme application background color</td>\n    </tr>\n\n    <tr>\n      <td><div class=\"docs-color-bubble alias-text-color\"></div></td>\n      <td><code>$pt-text-color</code></td>\n      <td>Default text color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-text-color-muted\"></div></td>\n      <td><code>$pt-text-color-muted</code></td>\n      <td>Muted text color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-text-color-disabled\"></div></td>\n      <td><code>$pt-text-color-disabled</code></td>\n      <td>Disabled text color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-heading-color\"></div></td>\n      <td><code>$pt-heading-color</code></td>\n      <td>Text color for headers</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-link-color\"></div></td>\n      <td><code>$pt-link-color</code></td>\n      <td>Text color for links</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-text-color\"></div></td>\n      <td><code>$pt-dark-text-color</code></td>\n      <td>Dark theme default text color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-text-color-muted\"></div></td>\n      <td><code>$pt-dark-text-color-muted</code></td>\n      <td>Dark theme muted text color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-text-color-disabled\"></div></td>\n      <td><code>$pt-dark-text-color-disabled</code></td>\n      <td>Dark theme disabled text color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-heading-color\"></div></td>\n      <td><code>$pt-dark-heading-color</code></td>\n      <td>Dark theme text color for headers</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-link-color\"></div></td>\n      <td><code>$pt-dark-link-color</code></td>\n      <td>Dark theme text color for links</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-text-selection-color\"></div></td>\n      <td><code>$pt-text-selection-color</code></td>\n      <td>Text selection color</td>\n    </tr>\n\n    <tr>\n      <td><div class=\"docs-color-bubble alias-icon-color\"></div></td>\n      <td><code>$pt-icon-color</code></td>\n      <td>Default icon color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-icon-color-hover\"></div></td>\n      <td><code>$pt-icon-color-hover</code></td>\n      <td>Hovered icon color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-icon-color-disabled\"></div></td>\n      <td><code>$pt-icon-color-disabled</code></td>\n      <td>Disabled icon color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-icon-color-selected\"></div></td>\n      <td><code>$pt-icon-color-selected</code></td>\n      <td>Selected icon color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-icon-color\"></div></td>\n      <td><code>$pt-dark-icon-color</code></td>\n      <td>Dark theme default icon color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-icon-color-hover\"></div></td>\n      <td><code>$pt-dark-icon-color-hover</code></td>\n      <td>Dark theme hovered icon color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-icon-color-disabled\"></div></td>\n      <td><code>$pt-dark-icon-color-disabled</code></td>\n      <td>Dark theme disabled icon color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-icon-color-selected\"></div></td>\n      <td><code>$pt-dark-icon-color-selected</code></td>\n      <td>Dark theme selected icon color</td>\n    </tr>\n\n    <tr>\n      <td><div class=\"docs-color-bubble alias-divider-black\"></div></td>\n      <td><code>$pt-divider-black</code></td>\n      <td>Black divider color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-divider-black\"></div></td>\n      <td><code>$pt-dark-divider-black</code></td>\n      <td>Dark theme black divider color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-divider-white\"></div></td>\n      <td><code>$pt-dark-divider-white</code></td>\n      <td>Dark theme white divider color</td>\n    </tr>\n\n    <tr>\n      <td><div class=\"docs-color-bubble alias-code-text-color\"></div></td>\n      <td><code>$pt-code-text-color</code></td>\n      <td>Code text color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-code-background-color\"></div></td>\n      <td><code>$pt-code-background-color</code></td>\n      <td>Code background color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-code-text-color\"></div></td>\n      <td><code>$pt-dark-code-text-color</code></td>\n      <td>Dark theme code text color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-code-background-color\"></div></td>\n      <td><code>$pt-dark-code-background-color</code></td>\n      <td>Dark theme code background color</td>\n    </tr>\n  </tbody>\n</table>\n\nStyleguide variables.colors\n*/\n/*\nColor schemes\n\nUse the following color scheme generators to produce color schemes for your data visualizations.\nFirst, choose the kind of scheme based on the type of your data, then customize the number of values\nusing the forms below. Finally, copy the colors array into your application and make it live!\n\nThe following schemes have been carefully crafted to be visually striking and easily understandable\nwhile remaining accessible to visually impaired and color blind users.\n\nStyleguide colors.schemes\n*/\n/*\nSequential color schemes\n\nSequential color schemes imply order and are best suited for representing data that\nranges from low-to-high values either on an ordinal or on a numerical scale.\n\nWeight: -1\n\n@react-docs SequentialSchemePalette\n\nStyleguide colors.schemes.sequential\n*/\n/*\nDiverging color schemes\n\nDiverging color schemes put equal emphasis on mid-range values and extremes\nat both ends of the data range.\n\n@react-docs DivergingSchemePalette\n\nStyleguide colors.schemes.diverging\n*/\n/*\nQualitative color schemes\n\nQualitative color schemes use a series of unrelated colors to create a\nscheme that does not imply order, merely difference in kind.\n\n@react-docs QualitativeSchemePalette\n\nStyleguide colors.schemes.qualitative\n*/\n/*\nVariables\n\nAvailable for use with Sass and Less.\n\n```css.scss\n@import \"path/to/@blueprintjs/core/dist/variables\";\n```\n\nThe Sass `$` convention is used in this documentation for consistency with the original source code.\nEvery variable mentioned below is also available in `variables.less` with an `@` prefix instead of `$`.\n\nWeight: 4\n\nStyleguide variables\n*/\n/*\nFont variables\n\nTypically, correct typography styles should be achieved by using the proper HTML tag (`<p>` for\ntext, `<h*>` for headings, `<code>` for code, etc.). The following variables are provided for the\nrare cases where custom styling is necessary and should be used sparingly:\n\n- `$pt-font-family`\n- `$pt-font-family-monospace`\n- `$pt-font-size`\n- `$pt-font-size-small`\n- `$pt-font-size-large`\n- `$pt-line-height`\n\nSee the [Fonts section](#typography.fonts) for more information and usage guidelines.\n\nStyleguide variables.fonts\n*/\n/*\nIcon variables\n\nMost icons should be displayed using the `span.pt-icon-*` classes or via modifier classes on\ncomponents like `.pt-button`. In rare cases, you may need direct access to the content\nstring that generates each icon in the icon font. Blueprint provides these variables with\nstraightforward names (see the [Icons section](#icons) for the full list of identifiers):\n\n- `$pt-icon-style`\n- `$pt-icon-align-left`\n- `$pt-icon-align-center`\n- ...\n\nVariables are also provided for the two icon font families and their pixel sizes:\n\n- `@icons16-family`\n- `@icons20-family`\n- `$pt-icon-size-standard`\n- `$pt-icon-size-large`\n\nStyleguide variables.icons\n*/\n/*\nGrids & dimensions\n\nSizes of common components. Most sizing variables are based on `$pt-grid-size`, which has\na value of `10px`. Custom components should adhere to the relevant `height` variable.\n\n- `$pt-grid-size`\n- `$pt-border-radius`\n- `$pt-button-height`\n- `$pt-button-height-large`\n- `$pt-input-height`\n- `$pt-input-height-large`\n- `$pt-navbar-height`\n\nWeight: 1\n\nStyleguide variables.dimensions\n*/\n/*\nGrid system\n\nBlueprint doesn't provide a grid system. In general, you should try to use the `$pt-grid-size`\nvariable to generate layout & sizing style rules in your CSS codebase.\n\nIn lieu of a full grid system, you should try to use the __CSS flexible box layout model__ (a.k.a.\n\"flexbox\"). It's quite powerful on its own and allows you to build robust, responsive layouts\nwithout writing much CSS. Here are some resources for learning flexbox:\n   - [MDN guide](https://developer.mozilla.org/en-US/docs/Web/Guide/CSS/Flexible_boxes)\n   - [CSS Tricks guide](https://css-tricks.com/snippets/css/a-guide-to-flexbox/)\n\nStyleguide variables.dimensions.grid\n*/\n/*\nLayering\n\nBlueprint provides variables for three z-index layers. This should be enough for most use cases,\nespecially if you make correct use of [stacking context][MDN]. [Overlay](#components.overlay)\ncomponents such as dialogs and popovers use these z-index values to configure their stacking\ncontexts.\n\n- `$pt-z-index-base`\n- `$pt-z-index-content`\n- `$pt-z-index-overlay`\n\n[MDN]: https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Positioning/Understanding_z_index/The_stacking_context\n\nWeight: 1\n\nStyleguide variables.layering\n*/\n/*\nLight theme styles\n\nUse these when you need to build custom UI components that look similar to Blueprint's\nlight theme components.\n\n- `$pt-dialog-box-shadow`\n- `$pt-input-box-shadow`\n- `$pt-popover-box-shadow`\n- `$pt-tooltip-box-shadow`\n\nWeight: 2\n\nStyleguide variables.light\n*/\n/*\nDark theme styles\n\nUse these when you need to build custom UI components that look similar to Blueprint's\ndark theme components.\n\n- `$pt-dark-dialog-box-shadow`\n- `$pt-dark-input-box-shadow`\n- `$pt-dark-popover-box-shadow`\n- `$pt-dark-tooltip-box-shadow`\n\nWeight: 3\n\nStyleguide variables.dark\n*/\n/*\nColors\n\nHex values for these colors can be accessed in JavaScript. The global version of the module exposes\nthe `Blueprint.Colors` object. In CommonJS, you may `import { Colors } from \"@blueprintjs/core\"`.\n\nStyleguide colors\n*/\n/*\nGray scale\n\nBlack, white and everything in between. The gray scale should be used for\nthe main UI frame: containers, headers, sections, boxes, etc.\nIf you need to call attention to a particular element (buttons, icons, tooltips, etc.),\nuse one of the [core colors](#colors.core).\n\n@react-docs GrayscalePalette\n\nWeight: -1\n\nStyleguide colors.grays\n*/\n/*\nCore colors\n\nCore colors are reserved for user interface design. Use these to help call\nattention to specific UI elements, such as buttons, callouts, icons, etc.\nEach core color is mapped to what we call a __visual intent__. We use intents\nto convey the status of UI elements:\n\n- _Blue_ (intent: primary) elevates elements from the typical gray scale UI frame.\n- _Green_ (intent: success) indicates successful operations.\n- _Orange_ (intent: warning) indicates warnings and intermediate states.\n- _Red_ (intent: danger) indicates errors and potentially destructive operations.\n\nCore colors are also designed to:\n\n- go well together and be used alongside each other in any application.\n- adhere to [WCAG 2.0](https://www.w3.org/TR/WCAG20/) standards, and therefore are\n  highly accessible to visually impaired and color blind users.\n\n@react-docs CoreColorsPalette\n\nStyleguide colors.core\n*/\n/*\nExtended colors\n\nExtended colors should typically be reserved for data visualizations: any time\nyou need to represent data of some sort, you can use these.\nThese colors are less strict on [WCAG 2.0](https://www.w3.org/TR/WCAG20/)\naccessibility standards and should therefore not be used for typical user\ninterface design — take a look at [core colors](#colors.core) instead.\n\n@react-docs ExtendedColorsPalette\n\nStyleguide colors.extended\n*/\n/*\nColor aliases\n\nThese variables are semantic aliases of our [colors](#colors). They are used throughout Blueprint\nitself to ensure consistent color usage across components.\n\n<table class=pt-table>\n  <thead>\n    <tr>\n      <th></th>\n      <th>Variable</th>\n      <th>Description</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-intent-primary\"></div></td>\n      <td><code>$pt-intent-primary</code></td>\n      <td>Primary intent color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-intent-success\"></div></td>\n      <td><code>$pt-intent-success</code></td>\n      <td>Success intent color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-intent-warning\"></div></td>\n      <td><code>$pt-intent-warning</code></td>\n      <td>Warning intent color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-intent-danger\"></div></td>\n      <td><code>$pt-intent-danger</code></td>\n      <td>Danger intent color</td>\n    </tr>\n\n    <tr>\n      <td><div class=\"docs-color-bubble alias-app-background-color\"></div></td>\n      <td><code>$pt-app-background-color</code></td>\n      <td>Application background color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-app-background-color\"></div></td>\n      <td><code>$pt-dark-app-background-color</code></td>\n      <td>Dark theme application background color</td>\n    </tr>\n\n    <tr>\n      <td><div class=\"docs-color-bubble alias-text-color\"></div></td>\n      <td><code>$pt-text-color</code></td>\n      <td>Default text color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-text-color-muted\"></div></td>\n      <td><code>$pt-text-color-muted</code></td>\n      <td>Muted text color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-text-color-disabled\"></div></td>\n      <td><code>$pt-text-color-disabled</code></td>\n      <td>Disabled text color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-heading-color\"></div></td>\n      <td><code>$pt-heading-color</code></td>\n      <td>Text color for headers</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-link-color\"></div></td>\n      <td><code>$pt-link-color</code></td>\n      <td>Text color for links</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-text-color\"></div></td>\n      <td><code>$pt-dark-text-color</code></td>\n      <td>Dark theme default text color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-text-color-muted\"></div></td>\n      <td><code>$pt-dark-text-color-muted</code></td>\n      <td>Dark theme muted text color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-text-color-disabled\"></div></td>\n      <td><code>$pt-dark-text-color-disabled</code></td>\n      <td>Dark theme disabled text color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-heading-color\"></div></td>\n      <td><code>$pt-dark-heading-color</code></td>\n      <td>Dark theme text color for headers</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-link-color\"></div></td>\n      <td><code>$pt-dark-link-color</code></td>\n      <td>Dark theme text color for links</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-text-selection-color\"></div></td>\n      <td><code>$pt-text-selection-color</code></td>\n      <td>Text selection color</td>\n    </tr>\n\n    <tr>\n      <td><div class=\"docs-color-bubble alias-icon-color\"></div></td>\n      <td><code>$pt-icon-color</code></td>\n      <td>Default icon color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-icon-color-hover\"></div></td>\n      <td><code>$pt-icon-color-hover</code></td>\n      <td>Hovered icon color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-icon-color-disabled\"></div></td>\n      <td><code>$pt-icon-color-disabled</code></td>\n      <td>Disabled icon color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-icon-color-selected\"></div></td>\n      <td><code>$pt-icon-color-selected</code></td>\n      <td>Selected icon color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-icon-color\"></div></td>\n      <td><code>$pt-dark-icon-color</code></td>\n      <td>Dark theme default icon color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-icon-color-hover\"></div></td>\n      <td><code>$pt-dark-icon-color-hover</code></td>\n      <td>Dark theme hovered icon color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-icon-color-disabled\"></div></td>\n      <td><code>$pt-dark-icon-color-disabled</code></td>\n      <td>Dark theme disabled icon color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-icon-color-selected\"></div></td>\n      <td><code>$pt-dark-icon-color-selected</code></td>\n      <td>Dark theme selected icon color</td>\n    </tr>\n\n    <tr>\n      <td><div class=\"docs-color-bubble alias-divider-black\"></div></td>\n      <td><code>$pt-divider-black</code></td>\n      <td>Black divider color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-divider-black\"></div></td>\n      <td><code>$pt-dark-divider-black</code></td>\n      <td>Dark theme black divider color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-divider-white\"></div></td>\n      <td><code>$pt-dark-divider-white</code></td>\n      <td>Dark theme white divider color</td>\n    </tr>\n\n    <tr>\n      <td><div class=\"docs-color-bubble alias-code-text-color\"></div></td>\n      <td><code>$pt-code-text-color</code></td>\n      <td>Code text color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-code-background-color\"></div></td>\n      <td><code>$pt-code-background-color</code></td>\n      <td>Code background color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-code-text-color\"></div></td>\n      <td><code>$pt-dark-code-text-color</code></td>\n      <td>Dark theme code text color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-code-background-color\"></div></td>\n      <td><code>$pt-dark-code-background-color</code></td>\n      <td>Dark theme code background color</td>\n    </tr>\n  </tbody>\n</table>\n\nStyleguide variables.colors\n*/\n/*\nColor schemes\n\nUse the following color scheme generators to produce color schemes for your data visualizations.\nFirst, choose the kind of scheme based on the type of your data, then customize the number of values\nusing the forms below. Finally, copy the colors array into your application and make it live!\n\nThe following schemes have been carefully crafted to be visually striking and easily understandable\nwhile remaining accessible to visually impaired and color blind users.\n\nStyleguide colors.schemes\n*/\n/*\nSequential color schemes\n\nSequential color schemes imply order and are best suited for representing data that\nranges from low-to-high values either on an ordinal or on a numerical scale.\n\nWeight: -1\n\n@react-docs SequentialSchemePalette\n\nStyleguide colors.schemes.sequential\n*/\n/*\nDiverging color schemes\n\nDiverging color schemes put equal emphasis on mid-range values and extremes\nat both ends of the data range.\n\n@react-docs DivergingSchemePalette\n\nStyleguide colors.schemes.diverging\n*/\n/*\nQualitative color schemes\n\nQualitative color schemes use a series of unrelated colors to create a\nscheme that does not imply order, merely difference in kind.\n\n@react-docs QualitativeSchemePalette\n\nStyleguide colors.schemes.qualitative\n*/\n/*\nColors\n\nHex values for these colors can be accessed in JavaScript. The global version of the module exposes\nthe `Blueprint.Colors` object. In CommonJS, you may `import { Colors } from \"@blueprintjs/core\"`.\n\nStyleguide colors\n*/\n/*\nGray scale\n\nBlack, white and everything in between. The gray scale should be used for\nthe main UI frame: containers, headers, sections, boxes, etc.\nIf you need to call attention to a particular element (buttons, icons, tooltips, etc.),\nuse one of the [core colors](#colors.core).\n\n@react-docs GrayscalePalette\n\nWeight: -1\n\nStyleguide colors.grays\n*/\n/*\nCore colors\n\nCore colors are reserved for user interface design. Use these to help call\nattention to specific UI elements, such as buttons, callouts, icons, etc.\nEach core color is mapped to what we call a __visual intent__. We use intents\nto convey the status of UI elements:\n\n- _Blue_ (intent: primary) elevates elements from the typical gray scale UI frame.\n- _Green_ (intent: success) indicates successful operations.\n- _Orange_ (intent: warning) indicates warnings and intermediate states.\n- _Red_ (intent: danger) indicates errors and potentially destructive operations.\n\nCore colors are also designed to:\n\n- go well together and be used alongside each other in any application.\n- adhere to [WCAG 2.0](https://www.w3.org/TR/WCAG20/) standards, and therefore are\n  highly accessible to visually impaired and color blind users.\n\n@react-docs CoreColorsPalette\n\nStyleguide colors.core\n*/\n/*\nExtended colors\n\nExtended colors should typically be reserved for data visualizations: any time\nyou need to represent data of some sort, you can use these.\nThese colors are less strict on [WCAG 2.0](https://www.w3.org/TR/WCAG20/)\naccessibility standards and should therefore not be used for typical user\ninterface design — take a look at [core colors](#colors.core) instead.\n\n@react-docs ExtendedColorsPalette\n\nStyleguide colors.extended\n*/\n/*\nColor aliases\n\nThese variables are semantic aliases of our [colors](#colors). They are used throughout Blueprint\nitself to ensure consistent color usage across components.\n\n<table class=pt-table>\n  <thead>\n    <tr>\n      <th></th>\n      <th>Variable</th>\n      <th>Description</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-intent-primary\"></div></td>\n      <td><code>$pt-intent-primary</code></td>\n      <td>Primary intent color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-intent-success\"></div></td>\n      <td><code>$pt-intent-success</code></td>\n      <td>Success intent color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-intent-warning\"></div></td>\n      <td><code>$pt-intent-warning</code></td>\n      <td>Warning intent color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-intent-danger\"></div></td>\n      <td><code>$pt-intent-danger</code></td>\n      <td>Danger intent color</td>\n    </tr>\n\n    <tr>\n      <td><div class=\"docs-color-bubble alias-app-background-color\"></div></td>\n      <td><code>$pt-app-background-color</code></td>\n      <td>Application background color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-app-background-color\"></div></td>\n      <td><code>$pt-dark-app-background-color</code></td>\n      <td>Dark theme application background color</td>\n    </tr>\n\n    <tr>\n      <td><div class=\"docs-color-bubble alias-text-color\"></div></td>\n      <td><code>$pt-text-color</code></td>\n      <td>Default text color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-text-color-muted\"></div></td>\n      <td><code>$pt-text-color-muted</code></td>\n      <td>Muted text color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-text-color-disabled\"></div></td>\n      <td><code>$pt-text-color-disabled</code></td>\n      <td>Disabled text color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-heading-color\"></div></td>\n      <td><code>$pt-heading-color</code></td>\n      <td>Text color for headers</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-link-color\"></div></td>\n      <td><code>$pt-link-color</code></td>\n      <td>Text color for links</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-text-color\"></div></td>\n      <td><code>$pt-dark-text-color</code></td>\n      <td>Dark theme default text color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-text-color-muted\"></div></td>\n      <td><code>$pt-dark-text-color-muted</code></td>\n      <td>Dark theme muted text color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-text-color-disabled\"></div></td>\n      <td><code>$pt-dark-text-color-disabled</code></td>\n      <td>Dark theme disabled text color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-heading-color\"></div></td>\n      <td><code>$pt-dark-heading-color</code></td>\n      <td>Dark theme text color for headers</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-link-color\"></div></td>\n      <td><code>$pt-dark-link-color</code></td>\n      <td>Dark theme text color for links</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-text-selection-color\"></div></td>\n      <td><code>$pt-text-selection-color</code></td>\n      <td>Text selection color</td>\n    </tr>\n\n    <tr>\n      <td><div class=\"docs-color-bubble alias-icon-color\"></div></td>\n      <td><code>$pt-icon-color</code></td>\n      <td>Default icon color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-icon-color-hover\"></div></td>\n      <td><code>$pt-icon-color-hover</code></td>\n      <td>Hovered icon color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-icon-color-disabled\"></div></td>\n      <td><code>$pt-icon-color-disabled</code></td>\n      <td>Disabled icon color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-icon-color-selected\"></div></td>\n      <td><code>$pt-icon-color-selected</code></td>\n      <td>Selected icon color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-icon-color\"></div></td>\n      <td><code>$pt-dark-icon-color</code></td>\n      <td>Dark theme default icon color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-icon-color-hover\"></div></td>\n      <td><code>$pt-dark-icon-color-hover</code></td>\n      <td>Dark theme hovered icon color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-icon-color-disabled\"></div></td>\n      <td><code>$pt-dark-icon-color-disabled</code></td>\n      <td>Dark theme disabled icon color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-icon-color-selected\"></div></td>\n      <td><code>$pt-dark-icon-color-selected</code></td>\n      <td>Dark theme selected icon color</td>\n    </tr>\n\n    <tr>\n      <td><div class=\"docs-color-bubble alias-divider-black\"></div></td>\n      <td><code>$pt-divider-black</code></td>\n      <td>Black divider color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-divider-black\"></div></td>\n      <td><code>$pt-dark-divider-black</code></td>\n      <td>Dark theme black divider color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-divider-white\"></div></td>\n      <td><code>$pt-dark-divider-white</code></td>\n      <td>Dark theme white divider color</td>\n    </tr>\n\n    <tr>\n      <td><div class=\"docs-color-bubble alias-code-text-color\"></div></td>\n      <td><code>$pt-code-text-color</code></td>\n      <td>Code text color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-code-background-color\"></div></td>\n      <td><code>$pt-code-background-color</code></td>\n      <td>Code background color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-code-text-color\"></div></td>\n      <td><code>$pt-dark-code-text-color</code></td>\n      <td>Dark theme code text color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-code-background-color\"></div></td>\n      <td><code>$pt-dark-code-background-color</code></td>\n      <td>Dark theme code background color</td>\n    </tr>\n  </tbody>\n</table>\n\nStyleguide variables.colors\n*/\n/*\nColor schemes\n\nUse the following color scheme generators to produce color schemes for your data visualizations.\nFirst, choose the kind of scheme based on the type of your data, then customize the number of values\nusing the forms below. Finally, copy the colors array into your application and make it live!\n\nThe following schemes have been carefully crafted to be visually striking and easily understandable\nwhile remaining accessible to visually impaired and color blind users.\n\nStyleguide colors.schemes\n*/\n/*\nSequential color schemes\n\nSequential color schemes imply order and are best suited for representing data that\nranges from low-to-high values either on an ordinal or on a numerical scale.\n\nWeight: -1\n\n@react-docs SequentialSchemePalette\n\nStyleguide colors.schemes.sequential\n*/\n/*\nDiverging color schemes\n\nDiverging color schemes put equal emphasis on mid-range values and extremes\nat both ends of the data range.\n\n@react-docs DivergingSchemePalette\n\nStyleguide colors.schemes.diverging\n*/\n/*\nQualitative color schemes\n\nQualitative color schemes use a series of unrelated colors to create a\nscheme that does not imply order, merely difference in kind.\n\n@react-docs QualitativeSchemePalette\n\nStyleguide colors.schemes.qualitative\n*/\n/*\nVariables\n\nAvailable for use with Sass and Less.\n\n```css.scss\n@import \"path/to/@blueprintjs/core/dist/variables\";\n```\n\nThe Sass `$` convention is used in this documentation for consistency with the original source code.\nEvery variable mentioned below is also available in `variables.less` with an `@` prefix instead of `$`.\n\nWeight: 4\n\nStyleguide variables\n*/\n/*\nFont variables\n\nTypically, correct typography styles should be achieved by using the proper HTML tag (`<p>` for\ntext, `<h*>` for headings, `<code>` for code, etc.). The following variables are provided for the\nrare cases where custom styling is necessary and should be used sparingly:\n\n- `$pt-font-family`\n- `$pt-font-family-monospace`\n- `$pt-font-size`\n- `$pt-font-size-small`\n- `$pt-font-size-large`\n- `$pt-line-height`\n\nSee the [Fonts section](#typography.fonts) for more information and usage guidelines.\n\nStyleguide variables.fonts\n*/\n/*\nIcon variables\n\nMost icons should be displayed using the `span.pt-icon-*` classes or via modifier classes on\ncomponents like `.pt-button`. In rare cases, you may need direct access to the content\nstring that generates each icon in the icon font. Blueprint provides these variables with\nstraightforward names (see the [Icons section](#icons) for the full list of identifiers):\n\n- `$pt-icon-style`\n- `$pt-icon-align-left`\n- `$pt-icon-align-center`\n- ...\n\nVariables are also provided for the two icon font families and their pixel sizes:\n\n- `@icons16-family`\n- `@icons20-family`\n- `$pt-icon-size-standard`\n- `$pt-icon-size-large`\n\nStyleguide variables.icons\n*/\n/*\nGrids & dimensions\n\nSizes of common components. Most sizing variables are based on `$pt-grid-size`, which has\na value of `10px`. Custom components should adhere to the relevant `height` variable.\n\n- `$pt-grid-size`\n- `$pt-border-radius`\n- `$pt-button-height`\n- `$pt-button-height-large`\n- `$pt-input-height`\n- `$pt-input-height-large`\n- `$pt-navbar-height`\n\nWeight: 1\n\nStyleguide variables.dimensions\n*/\n/*\nGrid system\n\nBlueprint doesn't provide a grid system. In general, you should try to use the `$pt-grid-size`\nvariable to generate layout & sizing style rules in your CSS codebase.\n\nIn lieu of a full grid system, you should try to use the __CSS flexible box layout model__ (a.k.a.\n\"flexbox\"). It's quite powerful on its own and allows you to build robust, responsive layouts\nwithout writing much CSS. Here are some resources for learning flexbox:\n   - [MDN guide](https://developer.mozilla.org/en-US/docs/Web/Guide/CSS/Flexible_boxes)\n   - [CSS Tricks guide](https://css-tricks.com/snippets/css/a-guide-to-flexbox/)\n\nStyleguide variables.dimensions.grid\n*/\n/*\nLayering\n\nBlueprint provides variables for three z-index layers. This should be enough for most use cases,\nespecially if you make correct use of [stacking context][MDN]. [Overlay](#components.overlay)\ncomponents such as dialogs and popovers use these z-index values to configure their stacking\ncontexts.\n\n- `$pt-z-index-base`\n- `$pt-z-index-content`\n- `$pt-z-index-overlay`\n\n[MDN]: https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Positioning/Understanding_z_index/The_stacking_context\n\nWeight: 1\n\nStyleguide variables.layering\n*/\n/*\nLight theme styles\n\nUse these when you need to build custom UI components that look similar to Blueprint's\nlight theme components.\n\n- `$pt-dialog-box-shadow`\n- `$pt-input-box-shadow`\n- `$pt-popover-box-shadow`\n- `$pt-tooltip-box-shadow`\n\nWeight: 2\n\nStyleguide variables.light\n*/\n/*\nDark theme styles\n\nUse these when you need to build custom UI components that look similar to Blueprint's\ndark theme components.\n\n- `$pt-dark-dialog-box-shadow`\n- `$pt-dark-input-box-shadow`\n- `$pt-dark-popover-box-shadow`\n- `$pt-dark-tooltip-box-shadow`\n\nWeight: 3\n\nStyleguide variables.dark\n*/\n/*\nCSS `border` property issues:\n- An element can only have one border.\n- Borders can't stack with shadows.\n- Borders modify the size of the element they're applied to.\n- Border positioning requires the extra `box-sizing` property.\n\n`box-shadow` doesn't have these issues, we're using it instead of `border`.\n*/\n/*\nOverlay shadows are used for default buttons\nfloating on top of other elements. This way, the\nshadows blend with the colors beneath it.\nSwitches and slider handles both use these variables.\n*/\n/*\nDate picker\n\nA `DatePicker` shows a monthly calendar and allows the user to choose a single date.\n\n`DatePicker`s behave similarly to standard [React form inputs](https://facebook.github.io/react/docs/forms.html).\n\nUse the `onChange` prop to listen for changes to the selected day.\nYou can control the selected day by setting the `value` prop, or use the component in uncontrolled\nmode and specify an initial day by setting `defaultValue`.\n\n`DatePicker` uses [Moment.js](http://momentjs.com/) to handle localization. You can use `locale` and\nthe `localeUtils` functions to specify a locale. See\n[this file](https://github.com/gpbl/react-day-picker/blob/master/src/addons/MomentLocaleUtils.js)\nfor an example of defining `localeUtils` functions using Moment.js.\n\n`DatePicker` is built on top of the [**react-day-picker**](https://github.com/gpbl/react-day-picker) library.\n\n@react-example DatePickerExample\n\nStyleguide components.datetime.datepicker\n*/\n/*\nJavaScript API\n\nThe `DatePicker` component is available in the __@blueprintjs/datetime__ package.\nMake sure to review the [general usage docs for date & time components](#components.datetime).\n\nSome props are managed by the `DatePicker` component, while others are passed\nto the **react-day-picker** library. These passed props are documented in full\nin the [**react-day-picker** documentation](http://www.gpbl.org/react-day-picker/index.html).\n\n@interface IDatePickerProps\n\nWeight: -1\n\nStyleguide components.datetime.datepicker.js\n*/\n/*\nUsing modifiers\n\nYou can use the `modifiers` prop to conditionally apply styles to days. Modifiers are documented in\nfull in the [**react-day-picker** documentation](http://react-day-picker.js.org/Modifiers.html).\n\nThe example below creates a `DatePicker` that prevents the user from selecting any Sundays,\nby using the component in controlled mode and with the `modifiers` prop:\n\n```css.scss\n// in CSS\n.pt-datepicker .DayPicker-Day--isSunday {\n  // CSS rules to make the day appear disabled\n}\n```\n\n```\n// in TypeScript\nexport class DatePickerExample extends React.Component<{}, { selectedDate: Date }> {\n    public state = { selectedDate: new Date() };\n\n    public render() {\n        // name of modifier function, 'isSunday' is the suffix for the CSS class above\n        const modifiers = { isSunday };\n        return (\n            <DatePicker\n                modifiers={modifiers}\n                onChange={(newDate) => this.handleChange(newDate)}\n                value={this.state.selectedDate} />\n        );\n    }\n\n    private handleChange(date: Date) {\n        if (!isSunday(date)) {\n            this.setState({ selectedDate: date });\n        }\n    }\n}\n\nfunction isSunday(date: Date) {\n    return date.getDay() === 0;\n}\n```\n\nWeight: 10\n\nStyleguide components.datetime.datepicker.modifiers\n*/\n.pt-datepicker {\n  position: relative;\n  border-radius: 3px;\n  background: #ffffff;\n  padding: 10px;\n  user-select: none; }\n  .pt-datepicker .DayPicker {\n    display: inline-block;\n    position: relative;\n    min-width: 210px;\n    vertical-align: top; }\n    .pt-datepicker .DayPicker:focus {\n      outline: none; }\n  .pt-datepicker .DayPicker-Month {\n    display: inline-table;\n    margin: 0 auto;\n    padding: 0 5px;\n    border-collapse: collapse;\n    border-spacing: 0;\n    user-select: none; }\n    .pt-datepicker .DayPicker-Month + .pt-datepicker .DayPicker-Month {\n      margin-left: 10px; }\n  .pt-datepicker .DayPicker-NavBar {\n    position: relative; }\n  .pt-datepicker .DayPicker-NavButton {\n    color: #5c7080;\n    position: absolute;\n    top: -5px;\n    cursor: pointer;\n    padding: 7px; }\n    .pt-datepicker .DayPicker-NavButton:hover {\n      color: #182026; }\n    .pt-dark .pt-datepicker .DayPicker-NavButton {\n      color: #bfccd6; }\n      .pt-dark .pt-datepicker .DayPicker-NavButton:hover {\n        color: #f5f8fa; }\n    .pt-datepicker .DayPicker-NavButton--prev {\n      left: -5px; }\n      .pt-datepicker .DayPicker-NavButton--prev::before {\n        line-height: 1;\n        font-family: \"Icons16\", sans-serif;\n        font-size: 16px;\n        font-weight: 400;\n        font-style: normal;\n        -moz-osx-font-smoothing: grayscale;\n        -webkit-font-smoothing: antialiased;\n        content: \"\"; }\n    .pt-datepicker .DayPicker-NavButton--next {\n      right: -5px; }\n      .pt-datepicker .DayPicker-NavButton--next::before {\n        line-height: 1;\n        font-family: \"Icons16\", sans-serif;\n        font-size: 16px;\n        font-weight: 400;\n        font-style: normal;\n        -moz-osx-font-smoothing: grayscale;\n        -webkit-font-smoothing: antialiased;\n        content: \"\"; }\n  .pt-datepicker .DayPicker-Weekdays {\n    display: table-header-group; }\n  .pt-datepicker .DayPicker-WeekdaysRow {\n    display: table-row; }\n  .pt-datepicker .DayPicker-Weekday {\n    display: table-cell;\n    width: 30px;\n    height: 30px;\n    padding-top: 5px;\n    vertical-align: middle;\n    text-align: center;\n    line-height: 1;\n    font-weight: 600; }\n    .pt-datepicker .DayPicker-Weekday abbr[title] {\n      text-decoration: none; }\n  .pt-datepicker .DayPicker-Body {\n    display: table-row-group; }\n  .pt-datepicker .DayPicker-Week {\n    display: table-row; }\n  .pt-datepicker .DayPicker-Day {\n    display: table-cell;\n    border-radius: 3px;\n    cursor: pointer;\n    width: 30px;\n    height: 30px;\n    vertical-align: middle;\n    text-align: center;\n    line-height: 1; }\n    .pt-datepicker .DayPicker-Day.DayPicker-Day--outside {\n      color: rgba(92, 112, 128, 0.5); }\n    .pt-datepicker .DayPicker-Day:hover, .pt-datepicker .DayPicker-Day:focus {\n      background: #d8e1e8;\n      color: #182026; }\n    .pt-datepicker .DayPicker-Day:active {\n      background: #ced9e0; }\n    .pt-datepicker .DayPicker-Day.DayPicker-Day--selected {\n      border-radius: 3px;\n      background-color: #137cbd;\n      color: #ffffff; }\n      .pt-datepicker .DayPicker-Day.DayPicker-Day--selected:hover {\n        background-color: #106ba3; }\n    .pt-datepicker .DayPicker-Day.DayPicker-Day--disabled {\n      background: none;\n      cursor: not-allowed;\n      color: rgba(92, 112, 128, 0.5); }\n  .pt-datepicker .pt-datepicker-caption {\n    display: table-caption;\n    border-bottom: 1px solid rgba(16, 22, 26, 0.15);\n    text-align: center; }\n    .pt-datepicker .pt-datepicker-caption select {\n      -webkit-appearance: none;\n      -moz-appearance: none;\n      margin: -5px 0 5px;\n      border: 0;\n      background: none;\n      cursor: pointer;\n      height: 30px;\n      padding: 0 10px;\n      line-height: 30px;\n      color: #182026;\n      font-weight: 600; }\n      .pt-datepicker .pt-datepicker-caption select:focus + .pt-datepicker-caption-caret {\n        display: inline; }\n      .pt-datepicker .pt-datepicker-caption select::-ms-expand {\n        display: none; }\n  .pt-datepicker .pt-datepicker-caption-select {\n    display: inline-block;\n    position: relative; }\n  .pt-datepicker .pt-datepicker-caption-caret {\n    display: none;\n    position: absolute;\n    top: 2px;\n    margin-left: 10px;\n    pointer-events: none; }\n  .pt-datepicker .pt-datepicker-footer {\n    display: flex;\n    justify-content: space-between;\n    margin-top: 10px;\n    margin-bottom: -5px;\n    border-top: 1px solid rgba(16, 22, 26, 0.15);\n    padding-top: 5px; }\n  .pt-datepicker .DayPicker-Month:hover .pt-datepicker-caption-caret {\n    display: inline; }\n\n.pt-datepicker-caption-measure {\n  font-weight: 600; }\n\n.pt-dark .pt-datepicker {\n  background: #30404d; }\n  .pt-dark .pt-datepicker .DayPicker-Day.DayPicker-Day--outside {\n    color: rgba(191, 204, 214, 0.5); }\n  .pt-dark .pt-datepicker .DayPicker-Day:hover, .pt-dark .pt-datepicker .DayPicker-Day:focus {\n    background: #5c7080;\n    color: #ffffff; }\n  .pt-dark .pt-datepicker .DayPicker-Day:active {\n    background: #738694; }\n  .pt-dark .pt-datepicker .DayPicker-Day.DayPicker-Day--selected {\n    background-color: #137cbd; }\n    .pt-dark .pt-datepicker .DayPicker-Day.DayPicker-Day--selected:hover {\n      background-color: #2b95d6; }\n  .pt-dark .pt-datepicker .DayPicker-Day.DayPicker-Day--disabled {\n    background: none;\n    color: rgba(191, 204, 214, 0.5); }\n  .pt-dark .pt-datepicker .pt-datepicker-caption {\n    border-bottom-color: rgba(16, 22, 26, 0.4); }\n    .pt-dark .pt-datepicker .pt-datepicker-caption select {\n      color: #f5f8fa; }\n    .pt-dark .pt-datepicker .pt-datepicker-caption option {\n      background-color: #30404d; }\n  .pt-dark .pt-datepicker .pt-datepicker-footer {\n    border-top-color: rgba(16, 22, 26, 0.4); }\n\n/*\nColors\n\nHex values for these colors can be accessed in JavaScript. The global version of the module exposes\nthe `Blueprint.Colors` object. In CommonJS, you may `import { Colors } from \"@blueprintjs/core\"`.\n\nStyleguide colors\n*/\n/*\nGray scale\n\nBlack, white and everything in between. The gray scale should be used for\nthe main UI frame: containers, headers, sections, boxes, etc.\nIf you need to call attention to a particular element (buttons, icons, tooltips, etc.),\nuse one of the [core colors](#colors.core).\n\n@react-docs GrayscalePalette\n\nWeight: -1\n\nStyleguide colors.grays\n*/\n/*\nCore colors\n\nCore colors are reserved for user interface design. Use these to help call\nattention to specific UI elements, such as buttons, callouts, icons, etc.\nEach core color is mapped to what we call a __visual intent__. We use intents\nto convey the status of UI elements:\n\n- _Blue_ (intent: primary) elevates elements from the typical gray scale UI frame.\n- _Green_ (intent: success) indicates successful operations.\n- _Orange_ (intent: warning) indicates warnings and intermediate states.\n- _Red_ (intent: danger) indicates errors and potentially destructive operations.\n\nCore colors are also designed to:\n\n- go well together and be used alongside each other in any application.\n- adhere to [WCAG 2.0](https://www.w3.org/TR/WCAG20/) standards, and therefore are\n  highly accessible to visually impaired and color blind users.\n\n@react-docs CoreColorsPalette\n\nStyleguide colors.core\n*/\n/*\nExtended colors\n\nExtended colors should typically be reserved for data visualizations: any time\nyou need to represent data of some sort, you can use these.\nThese colors are less strict on [WCAG 2.0](https://www.w3.org/TR/WCAG20/)\naccessibility standards and should therefore not be used for typical user\ninterface design — take a look at [core colors](#colors.core) instead.\n\n@react-docs ExtendedColorsPalette\n\nStyleguide colors.extended\n*/\n/*\nColor aliases\n\nThese variables are semantic aliases of our [colors](#colors). They are used throughout Blueprint\nitself to ensure consistent color usage across components.\n\n<table class=pt-table>\n  <thead>\n    <tr>\n      <th></th>\n      <th>Variable</th>\n      <th>Description</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-intent-primary\"></div></td>\n      <td><code>$pt-intent-primary</code></td>\n      <td>Primary intent color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-intent-success\"></div></td>\n      <td><code>$pt-intent-success</code></td>\n      <td>Success intent color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-intent-warning\"></div></td>\n      <td><code>$pt-intent-warning</code></td>\n      <td>Warning intent color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-intent-danger\"></div></td>\n      <td><code>$pt-intent-danger</code></td>\n      <td>Danger intent color</td>\n    </tr>\n\n    <tr>\n      <td><div class=\"docs-color-bubble alias-app-background-color\"></div></td>\n      <td><code>$pt-app-background-color</code></td>\n      <td>Application background color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-app-background-color\"></div></td>\n      <td><code>$pt-dark-app-background-color</code></td>\n      <td>Dark theme application background color</td>\n    </tr>\n\n    <tr>\n      <td><div class=\"docs-color-bubble alias-text-color\"></div></td>\n      <td><code>$pt-text-color</code></td>\n      <td>Default text color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-text-color-muted\"></div></td>\n      <td><code>$pt-text-color-muted</code></td>\n      <td>Muted text color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-text-color-disabled\"></div></td>\n      <td><code>$pt-text-color-disabled</code></td>\n      <td>Disabled text color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-heading-color\"></div></td>\n      <td><code>$pt-heading-color</code></td>\n      <td>Text color for headers</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-link-color\"></div></td>\n      <td><code>$pt-link-color</code></td>\n      <td>Text color for links</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-text-color\"></div></td>\n      <td><code>$pt-dark-text-color</code></td>\n      <td>Dark theme default text color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-text-color-muted\"></div></td>\n      <td><code>$pt-dark-text-color-muted</code></td>\n      <td>Dark theme muted text color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-text-color-disabled\"></div></td>\n      <td><code>$pt-dark-text-color-disabled</code></td>\n      <td>Dark theme disabled text color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-heading-color\"></div></td>\n      <td><code>$pt-dark-heading-color</code></td>\n      <td>Dark theme text color for headers</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-link-color\"></div></td>\n      <td><code>$pt-dark-link-color</code></td>\n      <td>Dark theme text color for links</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-text-selection-color\"></div></td>\n      <td><code>$pt-text-selection-color</code></td>\n      <td>Text selection color</td>\n    </tr>\n\n    <tr>\n      <td><div class=\"docs-color-bubble alias-icon-color\"></div></td>\n      <td><code>$pt-icon-color</code></td>\n      <td>Default icon color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-icon-color-hover\"></div></td>\n      <td><code>$pt-icon-color-hover</code></td>\n      <td>Hovered icon color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-icon-color-disabled\"></div></td>\n      <td><code>$pt-icon-color-disabled</code></td>\n      <td>Disabled icon color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-icon-color-selected\"></div></td>\n      <td><code>$pt-icon-color-selected</code></td>\n      <td>Selected icon color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-icon-color\"></div></td>\n      <td><code>$pt-dark-icon-color</code></td>\n      <td>Dark theme default icon color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-icon-color-hover\"></div></td>\n      <td><code>$pt-dark-icon-color-hover</code></td>\n      <td>Dark theme hovered icon color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-icon-color-disabled\"></div></td>\n      <td><code>$pt-dark-icon-color-disabled</code></td>\n      <td>Dark theme disabled icon color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-icon-color-selected\"></div></td>\n      <td><code>$pt-dark-icon-color-selected</code></td>\n      <td>Dark theme selected icon color</td>\n    </tr>\n\n    <tr>\n      <td><div class=\"docs-color-bubble alias-divider-black\"></div></td>\n      <td><code>$pt-divider-black</code></td>\n      <td>Black divider color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-divider-black\"></div></td>\n      <td><code>$pt-dark-divider-black</code></td>\n      <td>Dark theme black divider color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-divider-white\"></div></td>\n      <td><code>$pt-dark-divider-white</code></td>\n      <td>Dark theme white divider color</td>\n    </tr>\n\n    <tr>\n      <td><div class=\"docs-color-bubble alias-code-text-color\"></div></td>\n      <td><code>$pt-code-text-color</code></td>\n      <td>Code text color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-code-background-color\"></div></td>\n      <td><code>$pt-code-background-color</code></td>\n      <td>Code background color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-code-text-color\"></div></td>\n      <td><code>$pt-dark-code-text-color</code></td>\n      <td>Dark theme code text color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-code-background-color\"></div></td>\n      <td><code>$pt-dark-code-background-color</code></td>\n      <td>Dark theme code background color</td>\n    </tr>\n  </tbody>\n</table>\n\nStyleguide variables.colors\n*/\n/*\nColor schemes\n\nUse the following color scheme generators to produce color schemes for your data visualizations.\nFirst, choose the kind of scheme based on the type of your data, then customize the number of values\nusing the forms below. Finally, copy the colors array into your application and make it live!\n\nThe following schemes have been carefully crafted to be visually striking and easily understandable\nwhile remaining accessible to visually impaired and color blind users.\n\nStyleguide colors.schemes\n*/\n/*\nSequential color schemes\n\nSequential color schemes imply order and are best suited for representing data that\nranges from low-to-high values either on an ordinal or on a numerical scale.\n\nWeight: -1\n\n@react-docs SequentialSchemePalette\n\nStyleguide colors.schemes.sequential\n*/\n/*\nDiverging color schemes\n\nDiverging color schemes put equal emphasis on mid-range values and extremes\nat both ends of the data range.\n\n@react-docs DivergingSchemePalette\n\nStyleguide colors.schemes.diverging\n*/\n/*\nQualitative color schemes\n\nQualitative color schemes use a series of unrelated colors to create a\nscheme that does not imply order, merely difference in kind.\n\n@react-docs QualitativeSchemePalette\n\nStyleguide colors.schemes.qualitative\n*/\n/*\nColors\n\nHex values for these colors can be accessed in JavaScript. The global version of the module exposes\nthe `Blueprint.Colors` object. In CommonJS, you may `import { Colors } from \"@blueprintjs/core\"`.\n\nStyleguide colors\n*/\n/*\nGray scale\n\nBlack, white and everything in between. The gray scale should be used for\nthe main UI frame: containers, headers, sections, boxes, etc.\nIf you need to call attention to a particular element (buttons, icons, tooltips, etc.),\nuse one of the [core colors](#colors.core).\n\n@react-docs GrayscalePalette\n\nWeight: -1\n\nStyleguide colors.grays\n*/\n/*\nCore colors\n\nCore colors are reserved for user interface design. Use these to help call\nattention to specific UI elements, such as buttons, callouts, icons, etc.\nEach core color is mapped to what we call a __visual intent__. We use intents\nto convey the status of UI elements:\n\n- _Blue_ (intent: primary) elevates elements from the typical gray scale UI frame.\n- _Green_ (intent: success) indicates successful operations.\n- _Orange_ (intent: warning) indicates warnings and intermediate states.\n- _Red_ (intent: danger) indicates errors and potentially destructive operations.\n\nCore colors are also designed to:\n\n- go well together and be used alongside each other in any application.\n- adhere to [WCAG 2.0](https://www.w3.org/TR/WCAG20/) standards, and therefore are\n  highly accessible to visually impaired and color blind users.\n\n@react-docs CoreColorsPalette\n\nStyleguide colors.core\n*/\n/*\nExtended colors\n\nExtended colors should typically be reserved for data visualizations: any time\nyou need to represent data of some sort, you can use these.\nThese colors are less strict on [WCAG 2.0](https://www.w3.org/TR/WCAG20/)\naccessibility standards and should therefore not be used for typical user\ninterface design — take a look at [core colors](#colors.core) instead.\n\n@react-docs ExtendedColorsPalette\n\nStyleguide colors.extended\n*/\n/*\nColor aliases\n\nThese variables are semantic aliases of our [colors](#colors). They are used throughout Blueprint\nitself to ensure consistent color usage across components.\n\n<table class=pt-table>\n  <thead>\n    <tr>\n      <th></th>\n      <th>Variable</th>\n      <th>Description</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-intent-primary\"></div></td>\n      <td><code>$pt-intent-primary</code></td>\n      <td>Primary intent color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-intent-success\"></div></td>\n      <td><code>$pt-intent-success</code></td>\n      <td>Success intent color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-intent-warning\"></div></td>\n      <td><code>$pt-intent-warning</code></td>\n      <td>Warning intent color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-intent-danger\"></div></td>\n      <td><code>$pt-intent-danger</code></td>\n      <td>Danger intent color</td>\n    </tr>\n\n    <tr>\n      <td><div class=\"docs-color-bubble alias-app-background-color\"></div></td>\n      <td><code>$pt-app-background-color</code></td>\n      <td>Application background color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-app-background-color\"></div></td>\n      <td><code>$pt-dark-app-background-color</code></td>\n      <td>Dark theme application background color</td>\n    </tr>\n\n    <tr>\n      <td><div class=\"docs-color-bubble alias-text-color\"></div></td>\n      <td><code>$pt-text-color</code></td>\n      <td>Default text color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-text-color-muted\"></div></td>\n      <td><code>$pt-text-color-muted</code></td>\n      <td>Muted text color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-text-color-disabled\"></div></td>\n      <td><code>$pt-text-color-disabled</code></td>\n      <td>Disabled text color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-heading-color\"></div></td>\n      <td><code>$pt-heading-color</code></td>\n      <td>Text color for headers</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-link-color\"></div></td>\n      <td><code>$pt-link-color</code></td>\n      <td>Text color for links</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-text-color\"></div></td>\n      <td><code>$pt-dark-text-color</code></td>\n      <td>Dark theme default text color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-text-color-muted\"></div></td>\n      <td><code>$pt-dark-text-color-muted</code></td>\n      <td>Dark theme muted text color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-text-color-disabled\"></div></td>\n      <td><code>$pt-dark-text-color-disabled</code></td>\n      <td>Dark theme disabled text color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-heading-color\"></div></td>\n      <td><code>$pt-dark-heading-color</code></td>\n      <td>Dark theme text color for headers</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-link-color\"></div></td>\n      <td><code>$pt-dark-link-color</code></td>\n      <td>Dark theme text color for links</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-text-selection-color\"></div></td>\n      <td><code>$pt-text-selection-color</code></td>\n      <td>Text selection color</td>\n    </tr>\n\n    <tr>\n      <td><div class=\"docs-color-bubble alias-icon-color\"></div></td>\n      <td><code>$pt-icon-color</code></td>\n      <td>Default icon color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-icon-color-hover\"></div></td>\n      <td><code>$pt-icon-color-hover</code></td>\n      <td>Hovered icon color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-icon-color-disabled\"></div></td>\n      <td><code>$pt-icon-color-disabled</code></td>\n      <td>Disabled icon color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-icon-color-selected\"></div></td>\n      <td><code>$pt-icon-color-selected</code></td>\n      <td>Selected icon color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-icon-color\"></div></td>\n      <td><code>$pt-dark-icon-color</code></td>\n      <td>Dark theme default icon color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-icon-color-hover\"></div></td>\n      <td><code>$pt-dark-icon-color-hover</code></td>\n      <td>Dark theme hovered icon color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-icon-color-disabled\"></div></td>\n      <td><code>$pt-dark-icon-color-disabled</code></td>\n      <td>Dark theme disabled icon color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-icon-color-selected\"></div></td>\n      <td><code>$pt-dark-icon-color-selected</code></td>\n      <td>Dark theme selected icon color</td>\n    </tr>\n\n    <tr>\n      <td><div class=\"docs-color-bubble alias-divider-black\"></div></td>\n      <td><code>$pt-divider-black</code></td>\n      <td>Black divider color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-divider-black\"></div></td>\n      <td><code>$pt-dark-divider-black</code></td>\n      <td>Dark theme black divider color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-divider-white\"></div></td>\n      <td><code>$pt-dark-divider-white</code></td>\n      <td>Dark theme white divider color</td>\n    </tr>\n\n    <tr>\n      <td><div class=\"docs-color-bubble alias-code-text-color\"></div></td>\n      <td><code>$pt-code-text-color</code></td>\n      <td>Code text color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-code-background-color\"></div></td>\n      <td><code>$pt-code-background-color</code></td>\n      <td>Code background color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-code-text-color\"></div></td>\n      <td><code>$pt-dark-code-text-color</code></td>\n      <td>Dark theme code text color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-code-background-color\"></div></td>\n      <td><code>$pt-dark-code-background-color</code></td>\n      <td>Dark theme code background color</td>\n    </tr>\n  </tbody>\n</table>\n\nStyleguide variables.colors\n*/\n/*\nColor schemes\n\nUse the following color scheme generators to produce color schemes for your data visualizations.\nFirst, choose the kind of scheme based on the type of your data, then customize the number of values\nusing the forms below. Finally, copy the colors array into your application and make it live!\n\nThe following schemes have been carefully crafted to be visually striking and easily understandable\nwhile remaining accessible to visually impaired and color blind users.\n\nStyleguide colors.schemes\n*/\n/*\nSequential color schemes\n\nSequential color schemes imply order and are best suited for representing data that\nranges from low-to-high values either on an ordinal or on a numerical scale.\n\nWeight: -1\n\n@react-docs SequentialSchemePalette\n\nStyleguide colors.schemes.sequential\n*/\n/*\nDiverging color schemes\n\nDiverging color schemes put equal emphasis on mid-range values and extremes\nat both ends of the data range.\n\n@react-docs DivergingSchemePalette\n\nStyleguide colors.schemes.diverging\n*/\n/*\nQualitative color schemes\n\nQualitative color schemes use a series of unrelated colors to create a\nscheme that does not imply order, merely difference in kind.\n\n@react-docs QualitativeSchemePalette\n\nStyleguide colors.schemes.qualitative\n*/\n/*\nVariables\n\nAvailable for use with Sass and Less.\n\n```css.scss\n@import \"path/to/@blueprintjs/core/dist/variables\";\n```\n\nThe Sass `$` convention is used in this documentation for consistency with the original source code.\nEvery variable mentioned below is also available in `variables.less` with an `@` prefix instead of `$`.\n\nWeight: 4\n\nStyleguide variables\n*/\n/*\nFont variables\n\nTypically, correct typography styles should be achieved by using the proper HTML tag (`<p>` for\ntext, `<h*>` for headings, `<code>` for code, etc.). The following variables are provided for the\nrare cases where custom styling is necessary and should be used sparingly:\n\n- `$pt-font-family`\n- `$pt-font-family-monospace`\n- `$pt-font-size`\n- `$pt-font-size-small`\n- `$pt-font-size-large`\n- `$pt-line-height`\n\nSee the [Fonts section](#typography.fonts) for more information and usage guidelines.\n\nStyleguide variables.fonts\n*/\n/*\nIcon variables\n\nMost icons should be displayed using the `span.pt-icon-*` classes or via modifier classes on\ncomponents like `.pt-button`. In rare cases, you may need direct access to the content\nstring that generates each icon in the icon font. Blueprint provides these variables with\nstraightforward names (see the [Icons section](#icons) for the full list of identifiers):\n\n- `$pt-icon-style`\n- `$pt-icon-align-left`\n- `$pt-icon-align-center`\n- ...\n\nVariables are also provided for the two icon font families and their pixel sizes:\n\n- `@icons16-family`\n- `@icons20-family`\n- `$pt-icon-size-standard`\n- `$pt-icon-size-large`\n\nStyleguide variables.icons\n*/\n/*\nGrids & dimensions\n\nSizes of common components. Most sizing variables are based on `$pt-grid-size`, which has\na value of `10px`. Custom components should adhere to the relevant `height` variable.\n\n- `$pt-grid-size`\n- `$pt-border-radius`\n- `$pt-button-height`\n- `$pt-button-height-large`\n- `$pt-input-height`\n- `$pt-input-height-large`\n- `$pt-navbar-height`\n\nWeight: 1\n\nStyleguide variables.dimensions\n*/\n/*\nGrid system\n\nBlueprint doesn't provide a grid system. In general, you should try to use the `$pt-grid-size`\nvariable to generate layout & sizing style rules in your CSS codebase.\n\nIn lieu of a full grid system, you should try to use the __CSS flexible box layout model__ (a.k.a.\n\"flexbox\"). It's quite powerful on its own and allows you to build robust, responsive layouts\nwithout writing much CSS. Here are some resources for learning flexbox:\n   - [MDN guide](https://developer.mozilla.org/en-US/docs/Web/Guide/CSS/Flexible_boxes)\n   - [CSS Tricks guide](https://css-tricks.com/snippets/css/a-guide-to-flexbox/)\n\nStyleguide variables.dimensions.grid\n*/\n/*\nLayering\n\nBlueprint provides variables for three z-index layers. This should be enough for most use cases,\nespecially if you make correct use of [stacking context][MDN]. [Overlay](#components.overlay)\ncomponents such as dialogs and popovers use these z-index values to configure their stacking\ncontexts.\n\n- `$pt-z-index-base`\n- `$pt-z-index-content`\n- `$pt-z-index-overlay`\n\n[MDN]: https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Positioning/Understanding_z_index/The_stacking_context\n\nWeight: 1\n\nStyleguide variables.layering\n*/\n/*\nLight theme styles\n\nUse these when you need to build custom UI components that look similar to Blueprint's\nlight theme components.\n\n- `$pt-dialog-box-shadow`\n- `$pt-input-box-shadow`\n- `$pt-popover-box-shadow`\n- `$pt-tooltip-box-shadow`\n\nWeight: 2\n\nStyleguide variables.light\n*/\n/*\nDark theme styles\n\nUse these when you need to build custom UI components that look similar to Blueprint's\ndark theme components.\n\n- `$pt-dark-dialog-box-shadow`\n- `$pt-dark-input-box-shadow`\n- `$pt-dark-popover-box-shadow`\n- `$pt-dark-tooltip-box-shadow`\n\nWeight: 3\n\nStyleguide variables.dark\n*/\n/*\nDate range input\n\nThe `DateRangeInput` component is a [control group](#components.forms.control-group) composed of two\n[input groups](#components.forms.input-group). It shows a\n[`DateRangePicker`](#components.datetime.daterangepicker) in a [`Popover`](#components.popover) on focus.\n\nUse this component in forms where the user must enter a date range.\n\n@react-example DateRangeInputExample\n\nWeight: 3\n\nStyleguide components.datetime.daterangeinput\n*/\n/*\nJavaScript API\n\nThe `DateRangeInput` component is available in the __@blueprintjs/datetime__ package.\nMake sure to review the [general usage docs for date & time components](#components.datetime).\n\nUse the `onChange` function to listen for changes to the selected date. Use `onError` to listen for\ninvalid entered dates or date ranges.\n\nYou can control the selected date by setting the `value` prop, or use the component in uncontrolled\nmode and specify an initial date by setting `defaultValue`.\n\n```\nimport { DateRangeInput } from \"@blueprintjs/datetime\";\n\n<DateRangeInput value={[this.state.startDate, this.state.endDate]} onChange={this.handleChange} />\n```\n\n@interface IDateRangeInputProps\n\nStyleguide components.datetime.daterangeinput.js\n*/\n/*\nColors\n\nHex values for these colors can be accessed in JavaScript. The global version of the module exposes\nthe `Blueprint.Colors` object. In CommonJS, you may `import { Colors } from \"@blueprintjs/core\"`.\n\nStyleguide colors\n*/\n/*\nGray scale\n\nBlack, white and everything in between. The gray scale should be used for\nthe main UI frame: containers, headers, sections, boxes, etc.\nIf you need to call attention to a particular element (buttons, icons, tooltips, etc.),\nuse one of the [core colors](#colors.core).\n\n@react-docs GrayscalePalette\n\nWeight: -1\n\nStyleguide colors.grays\n*/\n/*\nCore colors\n\nCore colors are reserved for user interface design. Use these to help call\nattention to specific UI elements, such as buttons, callouts, icons, etc.\nEach core color is mapped to what we call a __visual intent__. We use intents\nto convey the status of UI elements:\n\n- _Blue_ (intent: primary) elevates elements from the typical gray scale UI frame.\n- _Green_ (intent: success) indicates successful operations.\n- _Orange_ (intent: warning) indicates warnings and intermediate states.\n- _Red_ (intent: danger) indicates errors and potentially destructive operations.\n\nCore colors are also designed to:\n\n- go well together and be used alongside each other in any application.\n- adhere to [WCAG 2.0](https://www.w3.org/TR/WCAG20/) standards, and therefore are\n  highly accessible to visually impaired and color blind users.\n\n@react-docs CoreColorsPalette\n\nStyleguide colors.core\n*/\n/*\nExtended colors\n\nExtended colors should typically be reserved for data visualizations: any time\nyou need to represent data of some sort, you can use these.\nThese colors are less strict on [WCAG 2.0](https://www.w3.org/TR/WCAG20/)\naccessibility standards and should therefore not be used for typical user\ninterface design — take a look at [core colors](#colors.core) instead.\n\n@react-docs ExtendedColorsPalette\n\nStyleguide colors.extended\n*/\n/*\nColor aliases\n\nThese variables are semantic aliases of our [colors](#colors). They are used throughout Blueprint\nitself to ensure consistent color usage across components.\n\n<table class=pt-table>\n  <thead>\n    <tr>\n      <th></th>\n      <th>Variable</th>\n      <th>Description</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-intent-primary\"></div></td>\n      <td><code>$pt-intent-primary</code></td>\n      <td>Primary intent color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-intent-success\"></div></td>\n      <td><code>$pt-intent-success</code></td>\n      <td>Success intent color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-intent-warning\"></div></td>\n      <td><code>$pt-intent-warning</code></td>\n      <td>Warning intent color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-intent-danger\"></div></td>\n      <td><code>$pt-intent-danger</code></td>\n      <td>Danger intent color</td>\n    </tr>\n\n    <tr>\n      <td><div class=\"docs-color-bubble alias-app-background-color\"></div></td>\n      <td><code>$pt-app-background-color</code></td>\n      <td>Application background color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-app-background-color\"></div></td>\n      <td><code>$pt-dark-app-background-color</code></td>\n      <td>Dark theme application background color</td>\n    </tr>\n\n    <tr>\n      <td><div class=\"docs-color-bubble alias-text-color\"></div></td>\n      <td><code>$pt-text-color</code></td>\n      <td>Default text color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-text-color-muted\"></div></td>\n      <td><code>$pt-text-color-muted</code></td>\n      <td>Muted text color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-text-color-disabled\"></div></td>\n      <td><code>$pt-text-color-disabled</code></td>\n      <td>Disabled text color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-heading-color\"></div></td>\n      <td><code>$pt-heading-color</code></td>\n      <td>Text color for headers</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-link-color\"></div></td>\n      <td><code>$pt-link-color</code></td>\n      <td>Text color for links</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-text-color\"></div></td>\n      <td><code>$pt-dark-text-color</code></td>\n      <td>Dark theme default text color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-text-color-muted\"></div></td>\n      <td><code>$pt-dark-text-color-muted</code></td>\n      <td>Dark theme muted text color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-text-color-disabled\"></div></td>\n      <td><code>$pt-dark-text-color-disabled</code></td>\n      <td>Dark theme disabled text color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-heading-color\"></div></td>\n      <td><code>$pt-dark-heading-color</code></td>\n      <td>Dark theme text color for headers</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-link-color\"></div></td>\n      <td><code>$pt-dark-link-color</code></td>\n      <td>Dark theme text color for links</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-text-selection-color\"></div></td>\n      <td><code>$pt-text-selection-color</code></td>\n      <td>Text selection color</td>\n    </tr>\n\n    <tr>\n      <td><div class=\"docs-color-bubble alias-icon-color\"></div></td>\n      <td><code>$pt-icon-color</code></td>\n      <td>Default icon color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-icon-color-hover\"></div></td>\n      <td><code>$pt-icon-color-hover</code></td>\n      <td>Hovered icon color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-icon-color-disabled\"></div></td>\n      <td><code>$pt-icon-color-disabled</code></td>\n      <td>Disabled icon color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-icon-color-selected\"></div></td>\n      <td><code>$pt-icon-color-selected</code></td>\n      <td>Selected icon color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-icon-color\"></div></td>\n      <td><code>$pt-dark-icon-color</code></td>\n      <td>Dark theme default icon color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-icon-color-hover\"></div></td>\n      <td><code>$pt-dark-icon-color-hover</code></td>\n      <td>Dark theme hovered icon color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-icon-color-disabled\"></div></td>\n      <td><code>$pt-dark-icon-color-disabled</code></td>\n      <td>Dark theme disabled icon color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-icon-color-selected\"></div></td>\n      <td><code>$pt-dark-icon-color-selected</code></td>\n      <td>Dark theme selected icon color</td>\n    </tr>\n\n    <tr>\n      <td><div class=\"docs-color-bubble alias-divider-black\"></div></td>\n      <td><code>$pt-divider-black</code></td>\n      <td>Black divider color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-divider-black\"></div></td>\n      <td><code>$pt-dark-divider-black</code></td>\n      <td>Dark theme black divider color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-divider-white\"></div></td>\n      <td><code>$pt-dark-divider-white</code></td>\n      <td>Dark theme white divider color</td>\n    </tr>\n\n    <tr>\n      <td><div class=\"docs-color-bubble alias-code-text-color\"></div></td>\n      <td><code>$pt-code-text-color</code></td>\n      <td>Code text color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-code-background-color\"></div></td>\n      <td><code>$pt-code-background-color</code></td>\n      <td>Code background color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-code-text-color\"></div></td>\n      <td><code>$pt-dark-code-text-color</code></td>\n      <td>Dark theme code text color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-code-background-color\"></div></td>\n      <td><code>$pt-dark-code-background-color</code></td>\n      <td>Dark theme code background color</td>\n    </tr>\n  </tbody>\n</table>\n\nStyleguide variables.colors\n*/\n/*\nColor schemes\n\nUse the following color scheme generators to produce color schemes for your data visualizations.\nFirst, choose the kind of scheme based on the type of your data, then customize the number of values\nusing the forms below. Finally, copy the colors array into your application and make it live!\n\nThe following schemes have been carefully crafted to be visually striking and easily understandable\nwhile remaining accessible to visually impaired and color blind users.\n\nStyleguide colors.schemes\n*/\n/*\nSequential color schemes\n\nSequential color schemes imply order and are best suited for representing data that\nranges from low-to-high values either on an ordinal or on a numerical scale.\n\nWeight: -1\n\n@react-docs SequentialSchemePalette\n\nStyleguide colors.schemes.sequential\n*/\n/*\nDiverging color schemes\n\nDiverging color schemes put equal emphasis on mid-range values and extremes\nat both ends of the data range.\n\n@react-docs DivergingSchemePalette\n\nStyleguide colors.schemes.diverging\n*/\n/*\nQualitative color schemes\n\nQualitative color schemes use a series of unrelated colors to create a\nscheme that does not imply order, merely difference in kind.\n\n@react-docs QualitativeSchemePalette\n\nStyleguide colors.schemes.qualitative\n*/\n/*\nColors\n\nHex values for these colors can be accessed in JavaScript. The global version of the module exposes\nthe `Blueprint.Colors` object. In CommonJS, you may `import { Colors } from \"@blueprintjs/core\"`.\n\nStyleguide colors\n*/\n/*\nGray scale\n\nBlack, white and everything in between. The gray scale should be used for\nthe main UI frame: containers, headers, sections, boxes, etc.\nIf you need to call attention to a particular element (buttons, icons, tooltips, etc.),\nuse one of the [core colors](#colors.core).\n\n@react-docs GrayscalePalette\n\nWeight: -1\n\nStyleguide colors.grays\n*/\n/*\nCore colors\n\nCore colors are reserved for user interface design. Use these to help call\nattention to specific UI elements, such as buttons, callouts, icons, etc.\nEach core color is mapped to what we call a __visual intent__. We use intents\nto convey the status of UI elements:\n\n- _Blue_ (intent: primary) elevates elements from the typical gray scale UI frame.\n- _Green_ (intent: success) indicates successful operations.\n- _Orange_ (intent: warning) indicates warnings and intermediate states.\n- _Red_ (intent: danger) indicates errors and potentially destructive operations.\n\nCore colors are also designed to:\n\n- go well together and be used alongside each other in any application.\n- adhere to [WCAG 2.0](https://www.w3.org/TR/WCAG20/) standards, and therefore are\n  highly accessible to visually impaired and color blind users.\n\n@react-docs CoreColorsPalette\n\nStyleguide colors.core\n*/\n/*\nExtended colors\n\nExtended colors should typically be reserved for data visualizations: any time\nyou need to represent data of some sort, you can use these.\nThese colors are less strict on [WCAG 2.0](https://www.w3.org/TR/WCAG20/)\naccessibility standards and should therefore not be used for typical user\ninterface design — take a look at [core colors](#colors.core) instead.\n\n@react-docs ExtendedColorsPalette\n\nStyleguide colors.extended\n*/\n/*\nColor aliases\n\nThese variables are semantic aliases of our [colors](#colors). They are used throughout Blueprint\nitself to ensure consistent color usage across components.\n\n<table class=pt-table>\n  <thead>\n    <tr>\n      <th></th>\n      <th>Variable</th>\n      <th>Description</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-intent-primary\"></div></td>\n      <td><code>$pt-intent-primary</code></td>\n      <td>Primary intent color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-intent-success\"></div></td>\n      <td><code>$pt-intent-success</code></td>\n      <td>Success intent color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-intent-warning\"></div></td>\n      <td><code>$pt-intent-warning</code></td>\n      <td>Warning intent color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-intent-danger\"></div></td>\n      <td><code>$pt-intent-danger</code></td>\n      <td>Danger intent color</td>\n    </tr>\n\n    <tr>\n      <td><div class=\"docs-color-bubble alias-app-background-color\"></div></td>\n      <td><code>$pt-app-background-color</code></td>\n      <td>Application background color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-app-background-color\"></div></td>\n      <td><code>$pt-dark-app-background-color</code></td>\n      <td>Dark theme application background color</td>\n    </tr>\n\n    <tr>\n      <td><div class=\"docs-color-bubble alias-text-color\"></div></td>\n      <td><code>$pt-text-color</code></td>\n      <td>Default text color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-text-color-muted\"></div></td>\n      <td><code>$pt-text-color-muted</code></td>\n      <td>Muted text color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-text-color-disabled\"></div></td>\n      <td><code>$pt-text-color-disabled</code></td>\n      <td>Disabled text color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-heading-color\"></div></td>\n      <td><code>$pt-heading-color</code></td>\n      <td>Text color for headers</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-link-color\"></div></td>\n      <td><code>$pt-link-color</code></td>\n      <td>Text color for links</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-text-color\"></div></td>\n      <td><code>$pt-dark-text-color</code></td>\n      <td>Dark theme default text color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-text-color-muted\"></div></td>\n      <td><code>$pt-dark-text-color-muted</code></td>\n      <td>Dark theme muted text color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-text-color-disabled\"></div></td>\n      <td><code>$pt-dark-text-color-disabled</code></td>\n      <td>Dark theme disabled text color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-heading-color\"></div></td>\n      <td><code>$pt-dark-heading-color</code></td>\n      <td>Dark theme text color for headers</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-link-color\"></div></td>\n      <td><code>$pt-dark-link-color</code></td>\n      <td>Dark theme text color for links</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-text-selection-color\"></div></td>\n      <td><code>$pt-text-selection-color</code></td>\n      <td>Text selection color</td>\n    </tr>\n\n    <tr>\n      <td><div class=\"docs-color-bubble alias-icon-color\"></div></td>\n      <td><code>$pt-icon-color</code></td>\n      <td>Default icon color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-icon-color-hover\"></div></td>\n      <td><code>$pt-icon-color-hover</code></td>\n      <td>Hovered icon color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-icon-color-disabled\"></div></td>\n      <td><code>$pt-icon-color-disabled</code></td>\n      <td>Disabled icon color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-icon-color-selected\"></div></td>\n      <td><code>$pt-icon-color-selected</code></td>\n      <td>Selected icon color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-icon-color\"></div></td>\n      <td><code>$pt-dark-icon-color</code></td>\n      <td>Dark theme default icon color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-icon-color-hover\"></div></td>\n      <td><code>$pt-dark-icon-color-hover</code></td>\n      <td>Dark theme hovered icon color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-icon-color-disabled\"></div></td>\n      <td><code>$pt-dark-icon-color-disabled</code></td>\n      <td>Dark theme disabled icon color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-icon-color-selected\"></div></td>\n      <td><code>$pt-dark-icon-color-selected</code></td>\n      <td>Dark theme selected icon color</td>\n    </tr>\n\n    <tr>\n      <td><div class=\"docs-color-bubble alias-divider-black\"></div></td>\n      <td><code>$pt-divider-black</code></td>\n      <td>Black divider color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-divider-black\"></div></td>\n      <td><code>$pt-dark-divider-black</code></td>\n      <td>Dark theme black divider color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-divider-white\"></div></td>\n      <td><code>$pt-dark-divider-white</code></td>\n      <td>Dark theme white divider color</td>\n    </tr>\n\n    <tr>\n      <td><div class=\"docs-color-bubble alias-code-text-color\"></div></td>\n      <td><code>$pt-code-text-color</code></td>\n      <td>Code text color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-code-background-color\"></div></td>\n      <td><code>$pt-code-background-color</code></td>\n      <td>Code background color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-code-text-color\"></div></td>\n      <td><code>$pt-dark-code-text-color</code></td>\n      <td>Dark theme code text color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-code-background-color\"></div></td>\n      <td><code>$pt-dark-code-background-color</code></td>\n      <td>Dark theme code background color</td>\n    </tr>\n  </tbody>\n</table>\n\nStyleguide variables.colors\n*/\n/*\nColor schemes\n\nUse the following color scheme generators to produce color schemes for your data visualizations.\nFirst, choose the kind of scheme based on the type of your data, then customize the number of values\nusing the forms below. Finally, copy the colors array into your application and make it live!\n\nThe following schemes have been carefully crafted to be visually striking and easily understandable\nwhile remaining accessible to visually impaired and color blind users.\n\nStyleguide colors.schemes\n*/\n/*\nSequential color schemes\n\nSequential color schemes imply order and are best suited for representing data that\nranges from low-to-high values either on an ordinal or on a numerical scale.\n\nWeight: -1\n\n@react-docs SequentialSchemePalette\n\nStyleguide colors.schemes.sequential\n*/\n/*\nDiverging color schemes\n\nDiverging color schemes put equal emphasis on mid-range values and extremes\nat both ends of the data range.\n\n@react-docs DivergingSchemePalette\n\nStyleguide colors.schemes.diverging\n*/\n/*\nQualitative color schemes\n\nQualitative color schemes use a series of unrelated colors to create a\nscheme that does not imply order, merely difference in kind.\n\n@react-docs QualitativeSchemePalette\n\nStyleguide colors.schemes.qualitative\n*/\n/*\nVariables\n\nAvailable for use with Sass and Less.\n\n```css.scss\n@import \"path/to/@blueprintjs/core/dist/variables\";\n```\n\nThe Sass `$` convention is used in this documentation for consistency with the original source code.\nEvery variable mentioned below is also available in `variables.less` with an `@` prefix instead of `$`.\n\nWeight: 4\n\nStyleguide variables\n*/\n/*\nFont variables\n\nTypically, correct typography styles should be achieved by using the proper HTML tag (`<p>` for\ntext, `<h*>` for headings, `<code>` for code, etc.). The following variables are provided for the\nrare cases where custom styling is necessary and should be used sparingly:\n\n- `$pt-font-family`\n- `$pt-font-family-monospace`\n- `$pt-font-size`\n- `$pt-font-size-small`\n- `$pt-font-size-large`\n- `$pt-line-height`\n\nSee the [Fonts section](#typography.fonts) for more information and usage guidelines.\n\nStyleguide variables.fonts\n*/\n/*\nIcon variables\n\nMost icons should be displayed using the `span.pt-icon-*` classes or via modifier classes on\ncomponents like `.pt-button`. In rare cases, you may need direct access to the content\nstring that generates each icon in the icon font. Blueprint provides these variables with\nstraightforward names (see the [Icons section](#icons) for the full list of identifiers):\n\n- `$pt-icon-style`\n- `$pt-icon-align-left`\n- `$pt-icon-align-center`\n- ...\n\nVariables are also provided for the two icon font families and their pixel sizes:\n\n- `@icons16-family`\n- `@icons20-family`\n- `$pt-icon-size-standard`\n- `$pt-icon-size-large`\n\nStyleguide variables.icons\n*/\n/*\nGrids & dimensions\n\nSizes of common components. Most sizing variables are based on `$pt-grid-size`, which has\na value of `10px`. Custom components should adhere to the relevant `height` variable.\n\n- `$pt-grid-size`\n- `$pt-border-radius`\n- `$pt-button-height`\n- `$pt-button-height-large`\n- `$pt-input-height`\n- `$pt-input-height-large`\n- `$pt-navbar-height`\n\nWeight: 1\n\nStyleguide variables.dimensions\n*/\n/*\nGrid system\n\nBlueprint doesn't provide a grid system. In general, you should try to use the `$pt-grid-size`\nvariable to generate layout & sizing style rules in your CSS codebase.\n\nIn lieu of a full grid system, you should try to use the __CSS flexible box layout model__ (a.k.a.\n\"flexbox\"). It's quite powerful on its own and allows you to build robust, responsive layouts\nwithout writing much CSS. Here are some resources for learning flexbox:\n   - [MDN guide](https://developer.mozilla.org/en-US/docs/Web/Guide/CSS/Flexible_boxes)\n   - [CSS Tricks guide](https://css-tricks.com/snippets/css/a-guide-to-flexbox/)\n\nStyleguide variables.dimensions.grid\n*/\n/*\nLayering\n\nBlueprint provides variables for three z-index layers. This should be enough for most use cases,\nespecially if you make correct use of [stacking context][MDN]. [Overlay](#components.overlay)\ncomponents such as dialogs and popovers use these z-index values to configure their stacking\ncontexts.\n\n- `$pt-z-index-base`\n- `$pt-z-index-content`\n- `$pt-z-index-overlay`\n\n[MDN]: https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Positioning/Understanding_z_index/The_stacking_context\n\nWeight: 1\n\nStyleguide variables.layering\n*/\n/*\nLight theme styles\n\nUse these when you need to build custom UI components that look similar to Blueprint's\nlight theme components.\n\n- `$pt-dialog-box-shadow`\n- `$pt-input-box-shadow`\n- `$pt-popover-box-shadow`\n- `$pt-tooltip-box-shadow`\n\nWeight: 2\n\nStyleguide variables.light\n*/\n/*\nDark theme styles\n\nUse these when you need to build custom UI components that look similar to Blueprint's\ndark theme components.\n\n- `$pt-dark-dialog-box-shadow`\n- `$pt-dark-input-box-shadow`\n- `$pt-dark-popover-box-shadow`\n- `$pt-dark-tooltip-box-shadow`\n\nWeight: 3\n\nStyleguide variables.dark\n*/\n/*\nColors\n\nHex values for these colors can be accessed in JavaScript. The global version of the module exposes\nthe `Blueprint.Colors` object. In CommonJS, you may `import { Colors } from \"@blueprintjs/core\"`.\n\nStyleguide colors\n*/\n/*\nGray scale\n\nBlack, white and everything in between. The gray scale should be used for\nthe main UI frame: containers, headers, sections, boxes, etc.\nIf you need to call attention to a particular element (buttons, icons, tooltips, etc.),\nuse one of the [core colors](#colors.core).\n\n@react-docs GrayscalePalette\n\nWeight: -1\n\nStyleguide colors.grays\n*/\n/*\nCore colors\n\nCore colors are reserved for user interface design. Use these to help call\nattention to specific UI elements, such as buttons, callouts, icons, etc.\nEach core color is mapped to what we call a __visual intent__. We use intents\nto convey the status of UI elements:\n\n- _Blue_ (intent: primary) elevates elements from the typical gray scale UI frame.\n- _Green_ (intent: success) indicates successful operations.\n- _Orange_ (intent: warning) indicates warnings and intermediate states.\n- _Red_ (intent: danger) indicates errors and potentially destructive operations.\n\nCore colors are also designed to:\n\n- go well together and be used alongside each other in any application.\n- adhere to [WCAG 2.0](https://www.w3.org/TR/WCAG20/) standards, and therefore are\n  highly accessible to visually impaired and color blind users.\n\n@react-docs CoreColorsPalette\n\nStyleguide colors.core\n*/\n/*\nExtended colors\n\nExtended colors should typically be reserved for data visualizations: any time\nyou need to represent data of some sort, you can use these.\nThese colors are less strict on [WCAG 2.0](https://www.w3.org/TR/WCAG20/)\naccessibility standards and should therefore not be used for typical user\ninterface design — take a look at [core colors](#colors.core) instead.\n\n@react-docs ExtendedColorsPalette\n\nStyleguide colors.extended\n*/\n/*\nColor aliases\n\nThese variables are semantic aliases of our [colors](#colors). They are used throughout Blueprint\nitself to ensure consistent color usage across components.\n\n<table class=pt-table>\n  <thead>\n    <tr>\n      <th></th>\n      <th>Variable</th>\n      <th>Description</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-intent-primary\"></div></td>\n      <td><code>$pt-intent-primary</code></td>\n      <td>Primary intent color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-intent-success\"></div></td>\n      <td><code>$pt-intent-success</code></td>\n      <td>Success intent color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-intent-warning\"></div></td>\n      <td><code>$pt-intent-warning</code></td>\n      <td>Warning intent color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-intent-danger\"></div></td>\n      <td><code>$pt-intent-danger</code></td>\n      <td>Danger intent color</td>\n    </tr>\n\n    <tr>\n      <td><div class=\"docs-color-bubble alias-app-background-color\"></div></td>\n      <td><code>$pt-app-background-color</code></td>\n      <td>Application background color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-app-background-color\"></div></td>\n      <td><code>$pt-dark-app-background-color</code></td>\n      <td>Dark theme application background color</td>\n    </tr>\n\n    <tr>\n      <td><div class=\"docs-color-bubble alias-text-color\"></div></td>\n      <td><code>$pt-text-color</code></td>\n      <td>Default text color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-text-color-muted\"></div></td>\n      <td><code>$pt-text-color-muted</code></td>\n      <td>Muted text color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-text-color-disabled\"></div></td>\n      <td><code>$pt-text-color-disabled</code></td>\n      <td>Disabled text color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-heading-color\"></div></td>\n      <td><code>$pt-heading-color</code></td>\n      <td>Text color for headers</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-link-color\"></div></td>\n      <td><code>$pt-link-color</code></td>\n      <td>Text color for links</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-text-color\"></div></td>\n      <td><code>$pt-dark-text-color</code></td>\n      <td>Dark theme default text color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-text-color-muted\"></div></td>\n      <td><code>$pt-dark-text-color-muted</code></td>\n      <td>Dark theme muted text color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-text-color-disabled\"></div></td>\n      <td><code>$pt-dark-text-color-disabled</code></td>\n      <td>Dark theme disabled text color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-heading-color\"></div></td>\n      <td><code>$pt-dark-heading-color</code></td>\n      <td>Dark theme text color for headers</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-link-color\"></div></td>\n      <td><code>$pt-dark-link-color</code></td>\n      <td>Dark theme text color for links</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-text-selection-color\"></div></td>\n      <td><code>$pt-text-selection-color</code></td>\n      <td>Text selection color</td>\n    </tr>\n\n    <tr>\n      <td><div class=\"docs-color-bubble alias-icon-color\"></div></td>\n      <td><code>$pt-icon-color</code></td>\n      <td>Default icon color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-icon-color-hover\"></div></td>\n      <td><code>$pt-icon-color-hover</code></td>\n      <td>Hovered icon color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-icon-color-disabled\"></div></td>\n      <td><code>$pt-icon-color-disabled</code></td>\n      <td>Disabled icon color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-icon-color-selected\"></div></td>\n      <td><code>$pt-icon-color-selected</code></td>\n      <td>Selected icon color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-icon-color\"></div></td>\n      <td><code>$pt-dark-icon-color</code></td>\n      <td>Dark theme default icon color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-icon-color-hover\"></div></td>\n      <td><code>$pt-dark-icon-color-hover</code></td>\n      <td>Dark theme hovered icon color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-icon-color-disabled\"></div></td>\n      <td><code>$pt-dark-icon-color-disabled</code></td>\n      <td>Dark theme disabled icon color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-icon-color-selected\"></div></td>\n      <td><code>$pt-dark-icon-color-selected</code></td>\n      <td>Dark theme selected icon color</td>\n    </tr>\n\n    <tr>\n      <td><div class=\"docs-color-bubble alias-divider-black\"></div></td>\n      <td><code>$pt-divider-black</code></td>\n      <td>Black divider color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-divider-black\"></div></td>\n      <td><code>$pt-dark-divider-black</code></td>\n      <td>Dark theme black divider color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-divider-white\"></div></td>\n      <td><code>$pt-dark-divider-white</code></td>\n      <td>Dark theme white divider color</td>\n    </tr>\n\n    <tr>\n      <td><div class=\"docs-color-bubble alias-code-text-color\"></div></td>\n      <td><code>$pt-code-text-color</code></td>\n      <td>Code text color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-code-background-color\"></div></td>\n      <td><code>$pt-code-background-color</code></td>\n      <td>Code background color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-code-text-color\"></div></td>\n      <td><code>$pt-dark-code-text-color</code></td>\n      <td>Dark theme code text color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-code-background-color\"></div></td>\n      <td><code>$pt-dark-code-background-color</code></td>\n      <td>Dark theme code background color</td>\n    </tr>\n  </tbody>\n</table>\n\nStyleguide variables.colors\n*/\n/*\nColor schemes\n\nUse the following color scheme generators to produce color schemes for your data visualizations.\nFirst, choose the kind of scheme based on the type of your data, then customize the number of values\nusing the forms below. Finally, copy the colors array into your application and make it live!\n\nThe following schemes have been carefully crafted to be visually striking and easily understandable\nwhile remaining accessible to visually impaired and color blind users.\n\nStyleguide colors.schemes\n*/\n/*\nSequential color schemes\n\nSequential color schemes imply order and are best suited for representing data that\nranges from low-to-high values either on an ordinal or on a numerical scale.\n\nWeight: -1\n\n@react-docs SequentialSchemePalette\n\nStyleguide colors.schemes.sequential\n*/\n/*\nDiverging color schemes\n\nDiverging color schemes put equal emphasis on mid-range values and extremes\nat both ends of the data range.\n\n@react-docs DivergingSchemePalette\n\nStyleguide colors.schemes.diverging\n*/\n/*\nQualitative color schemes\n\nQualitative color schemes use a series of unrelated colors to create a\nscheme that does not imply order, merely difference in kind.\n\n@react-docs QualitativeSchemePalette\n\nStyleguide colors.schemes.qualitative\n*/\n/*\nColors\n\nHex values for these colors can be accessed in JavaScript. The global version of the module exposes\nthe `Blueprint.Colors` object. In CommonJS, you may `import { Colors } from \"@blueprintjs/core\"`.\n\nStyleguide colors\n*/\n/*\nGray scale\n\nBlack, white and everything in between. The gray scale should be used for\nthe main UI frame: containers, headers, sections, boxes, etc.\nIf you need to call attention to a particular element (buttons, icons, tooltips, etc.),\nuse one of the [core colors](#colors.core).\n\n@react-docs GrayscalePalette\n\nWeight: -1\n\nStyleguide colors.grays\n*/\n/*\nCore colors\n\nCore colors are reserved for user interface design. Use these to help call\nattention to specific UI elements, such as buttons, callouts, icons, etc.\nEach core color is mapped to what we call a __visual intent__. We use intents\nto convey the status of UI elements:\n\n- _Blue_ (intent: primary) elevates elements from the typical gray scale UI frame.\n- _Green_ (intent: success) indicates successful operations.\n- _Orange_ (intent: warning) indicates warnings and intermediate states.\n- _Red_ (intent: danger) indicates errors and potentially destructive operations.\n\nCore colors are also designed to:\n\n- go well together and be used alongside each other in any application.\n- adhere to [WCAG 2.0](https://www.w3.org/TR/WCAG20/) standards, and therefore are\n  highly accessible to visually impaired and color blind users.\n\n@react-docs CoreColorsPalette\n\nStyleguide colors.core\n*/\n/*\nExtended colors\n\nExtended colors should typically be reserved for data visualizations: any time\nyou need to represent data of some sort, you can use these.\nThese colors are less strict on [WCAG 2.0](https://www.w3.org/TR/WCAG20/)\naccessibility standards and should therefore not be used for typical user\ninterface design — take a look at [core colors](#colors.core) instead.\n\n@react-docs ExtendedColorsPalette\n\nStyleguide colors.extended\n*/\n/*\nColor aliases\n\nThese variables are semantic aliases of our [colors](#colors). They are used throughout Blueprint\nitself to ensure consistent color usage across components.\n\n<table class=pt-table>\n  <thead>\n    <tr>\n      <th></th>\n      <th>Variable</th>\n      <th>Description</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-intent-primary\"></div></td>\n      <td><code>$pt-intent-primary</code></td>\n      <td>Primary intent color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-intent-success\"></div></td>\n      <td><code>$pt-intent-success</code></td>\n      <td>Success intent color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-intent-warning\"></div></td>\n      <td><code>$pt-intent-warning</code></td>\n      <td>Warning intent color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-intent-danger\"></div></td>\n      <td><code>$pt-intent-danger</code></td>\n      <td>Danger intent color</td>\n    </tr>\n\n    <tr>\n      <td><div class=\"docs-color-bubble alias-app-background-color\"></div></td>\n      <td><code>$pt-app-background-color</code></td>\n      <td>Application background color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-app-background-color\"></div></td>\n      <td><code>$pt-dark-app-background-color</code></td>\n      <td>Dark theme application background color</td>\n    </tr>\n\n    <tr>\n      <td><div class=\"docs-color-bubble alias-text-color\"></div></td>\n      <td><code>$pt-text-color</code></td>\n      <td>Default text color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-text-color-muted\"></div></td>\n      <td><code>$pt-text-color-muted</code></td>\n      <td>Muted text color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-text-color-disabled\"></div></td>\n      <td><code>$pt-text-color-disabled</code></td>\n      <td>Disabled text color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-heading-color\"></div></td>\n      <td><code>$pt-heading-color</code></td>\n      <td>Text color for headers</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-link-color\"></div></td>\n      <td><code>$pt-link-color</code></td>\n      <td>Text color for links</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-text-color\"></div></td>\n      <td><code>$pt-dark-text-color</code></td>\n      <td>Dark theme default text color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-text-color-muted\"></div></td>\n      <td><code>$pt-dark-text-color-muted</code></td>\n      <td>Dark theme muted text color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-text-color-disabled\"></div></td>\n      <td><code>$pt-dark-text-color-disabled</code></td>\n      <td>Dark theme disabled text color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-heading-color\"></div></td>\n      <td><code>$pt-dark-heading-color</code></td>\n      <td>Dark theme text color for headers</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-link-color\"></div></td>\n      <td><code>$pt-dark-link-color</code></td>\n      <td>Dark theme text color for links</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-text-selection-color\"></div></td>\n      <td><code>$pt-text-selection-color</code></td>\n      <td>Text selection color</td>\n    </tr>\n\n    <tr>\n      <td><div class=\"docs-color-bubble alias-icon-color\"></div></td>\n      <td><code>$pt-icon-color</code></td>\n      <td>Default icon color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-icon-color-hover\"></div></td>\n      <td><code>$pt-icon-color-hover</code></td>\n      <td>Hovered icon color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-icon-color-disabled\"></div></td>\n      <td><code>$pt-icon-color-disabled</code></td>\n      <td>Disabled icon color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-icon-color-selected\"></div></td>\n      <td><code>$pt-icon-color-selected</code></td>\n      <td>Selected icon color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-icon-color\"></div></td>\n      <td><code>$pt-dark-icon-color</code></td>\n      <td>Dark theme default icon color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-icon-color-hover\"></div></td>\n      <td><code>$pt-dark-icon-color-hover</code></td>\n      <td>Dark theme hovered icon color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-icon-color-disabled\"></div></td>\n      <td><code>$pt-dark-icon-color-disabled</code></td>\n      <td>Dark theme disabled icon color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-icon-color-selected\"></div></td>\n      <td><code>$pt-dark-icon-color-selected</code></td>\n      <td>Dark theme selected icon color</td>\n    </tr>\n\n    <tr>\n      <td><div class=\"docs-color-bubble alias-divider-black\"></div></td>\n      <td><code>$pt-divider-black</code></td>\n      <td>Black divider color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-divider-black\"></div></td>\n      <td><code>$pt-dark-divider-black</code></td>\n      <td>Dark theme black divider color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-divider-white\"></div></td>\n      <td><code>$pt-dark-divider-white</code></td>\n      <td>Dark theme white divider color</td>\n    </tr>\n\n    <tr>\n      <td><div class=\"docs-color-bubble alias-code-text-color\"></div></td>\n      <td><code>$pt-code-text-color</code></td>\n      <td>Code text color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-code-background-color\"></div></td>\n      <td><code>$pt-code-background-color</code></td>\n      <td>Code background color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-code-text-color\"></div></td>\n      <td><code>$pt-dark-code-text-color</code></td>\n      <td>Dark theme code text color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-code-background-color\"></div></td>\n      <td><code>$pt-dark-code-background-color</code></td>\n      <td>Dark theme code background color</td>\n    </tr>\n  </tbody>\n</table>\n\nStyleguide variables.colors\n*/\n/*\nColor schemes\n\nUse the following color scheme generators to produce color schemes for your data visualizations.\nFirst, choose the kind of scheme based on the type of your data, then customize the number of values\nusing the forms below. Finally, copy the colors array into your application and make it live!\n\nThe following schemes have been carefully crafted to be visually striking and easily understandable\nwhile remaining accessible to visually impaired and color blind users.\n\nStyleguide colors.schemes\n*/\n/*\nSequential color schemes\n\nSequential color schemes imply order and are best suited for representing data that\nranges from low-to-high values either on an ordinal or on a numerical scale.\n\nWeight: -1\n\n@react-docs SequentialSchemePalette\n\nStyleguide colors.schemes.sequential\n*/\n/*\nDiverging color schemes\n\nDiverging color schemes put equal emphasis on mid-range values and extremes\nat both ends of the data range.\n\n@react-docs DivergingSchemePalette\n\nStyleguide colors.schemes.diverging\n*/\n/*\nQualitative color schemes\n\nQualitative color schemes use a series of unrelated colors to create a\nscheme that does not imply order, merely difference in kind.\n\n@react-docs QualitativeSchemePalette\n\nStyleguide colors.schemes.qualitative\n*/\n/*\nColors\n\nHex values for these colors can be accessed in JavaScript. The global version of the module exposes\nthe `Blueprint.Colors` object. In CommonJS, you may `import { Colors } from \"@blueprintjs/core\"`.\n\nStyleguide colors\n*/\n/*\nGray scale\n\nBlack, white and everything in between. The gray scale should be used for\nthe main UI frame: containers, headers, sections, boxes, etc.\nIf you need to call attention to a particular element (buttons, icons, tooltips, etc.),\nuse one of the [core colors](#colors.core).\n\n@react-docs GrayscalePalette\n\nWeight: -1\n\nStyleguide colors.grays\n*/\n/*\nCore colors\n\nCore colors are reserved for user interface design. Use these to help call\nattention to specific UI elements, such as buttons, callouts, icons, etc.\nEach core color is mapped to what we call a __visual intent__. We use intents\nto convey the status of UI elements:\n\n- _Blue_ (intent: primary) elevates elements from the typical gray scale UI frame.\n- _Green_ (intent: success) indicates successful operations.\n- _Orange_ (intent: warning) indicates warnings and intermediate states.\n- _Red_ (intent: danger) indicates errors and potentially destructive operations.\n\nCore colors are also designed to:\n\n- go well together and be used alongside each other in any application.\n- adhere to [WCAG 2.0](https://www.w3.org/TR/WCAG20/) standards, and therefore are\n  highly accessible to visually impaired and color blind users.\n\n@react-docs CoreColorsPalette\n\nStyleguide colors.core\n*/\n/*\nExtended colors\n\nExtended colors should typically be reserved for data visualizations: any time\nyou need to represent data of some sort, you can use these.\nThese colors are less strict on [WCAG 2.0](https://www.w3.org/TR/WCAG20/)\naccessibility standards and should therefore not be used for typical user\ninterface design — take a look at [core colors](#colors.core) instead.\n\n@react-docs ExtendedColorsPalette\n\nStyleguide colors.extended\n*/\n/*\nColor aliases\n\nThese variables are semantic aliases of our [colors](#colors). They are used throughout Blueprint\nitself to ensure consistent color usage across components.\n\n<table class=pt-table>\n  <thead>\n    <tr>\n      <th></th>\n      <th>Variable</th>\n      <th>Description</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-intent-primary\"></div></td>\n      <td><code>$pt-intent-primary</code></td>\n      <td>Primary intent color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-intent-success\"></div></td>\n      <td><code>$pt-intent-success</code></td>\n      <td>Success intent color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-intent-warning\"></div></td>\n      <td><code>$pt-intent-warning</code></td>\n      <td>Warning intent color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-intent-danger\"></div></td>\n      <td><code>$pt-intent-danger</code></td>\n      <td>Danger intent color</td>\n    </tr>\n\n    <tr>\n      <td><div class=\"docs-color-bubble alias-app-background-color\"></div></td>\n      <td><code>$pt-app-background-color</code></td>\n      <td>Application background color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-app-background-color\"></div></td>\n      <td><code>$pt-dark-app-background-color</code></td>\n      <td>Dark theme application background color</td>\n    </tr>\n\n    <tr>\n      <td><div class=\"docs-color-bubble alias-text-color\"></div></td>\n      <td><code>$pt-text-color</code></td>\n      <td>Default text color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-text-color-muted\"></div></td>\n      <td><code>$pt-text-color-muted</code></td>\n      <td>Muted text color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-text-color-disabled\"></div></td>\n      <td><code>$pt-text-color-disabled</code></td>\n      <td>Disabled text color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-heading-color\"></div></td>\n      <td><code>$pt-heading-color</code></td>\n      <td>Text color for headers</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-link-color\"></div></td>\n      <td><code>$pt-link-color</code></td>\n      <td>Text color for links</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-text-color\"></div></td>\n      <td><code>$pt-dark-text-color</code></td>\n      <td>Dark theme default text color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-text-color-muted\"></div></td>\n      <td><code>$pt-dark-text-color-muted</code></td>\n      <td>Dark theme muted text color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-text-color-disabled\"></div></td>\n      <td><code>$pt-dark-text-color-disabled</code></td>\n      <td>Dark theme disabled text color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-heading-color\"></div></td>\n      <td><code>$pt-dark-heading-color</code></td>\n      <td>Dark theme text color for headers</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-link-color\"></div></td>\n      <td><code>$pt-dark-link-color</code></td>\n      <td>Dark theme text color for links</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-text-selection-color\"></div></td>\n      <td><code>$pt-text-selection-color</code></td>\n      <td>Text selection color</td>\n    </tr>\n\n    <tr>\n      <td><div class=\"docs-color-bubble alias-icon-color\"></div></td>\n      <td><code>$pt-icon-color</code></td>\n      <td>Default icon color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-icon-color-hover\"></div></td>\n      <td><code>$pt-icon-color-hover</code></td>\n      <td>Hovered icon color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-icon-color-disabled\"></div></td>\n      <td><code>$pt-icon-color-disabled</code></td>\n      <td>Disabled icon color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-icon-color-selected\"></div></td>\n      <td><code>$pt-icon-color-selected</code></td>\n      <td>Selected icon color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-icon-color\"></div></td>\n      <td><code>$pt-dark-icon-color</code></td>\n      <td>Dark theme default icon color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-icon-color-hover\"></div></td>\n      <td><code>$pt-dark-icon-color-hover</code></td>\n      <td>Dark theme hovered icon color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-icon-color-disabled\"></div></td>\n      <td><code>$pt-dark-icon-color-disabled</code></td>\n      <td>Dark theme disabled icon color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-icon-color-selected\"></div></td>\n      <td><code>$pt-dark-icon-color-selected</code></td>\n      <td>Dark theme selected icon color</td>\n    </tr>\n\n    <tr>\n      <td><div class=\"docs-color-bubble alias-divider-black\"></div></td>\n      <td><code>$pt-divider-black</code></td>\n      <td>Black divider color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-divider-black\"></div></td>\n      <td><code>$pt-dark-divider-black</code></td>\n      <td>Dark theme black divider color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-divider-white\"></div></td>\n      <td><code>$pt-dark-divider-white</code></td>\n      <td>Dark theme white divider color</td>\n    </tr>\n\n    <tr>\n      <td><div class=\"docs-color-bubble alias-code-text-color\"></div></td>\n      <td><code>$pt-code-text-color</code></td>\n      <td>Code text color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-code-background-color\"></div></td>\n      <td><code>$pt-code-background-color</code></td>\n      <td>Code background color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-code-text-color\"></div></td>\n      <td><code>$pt-dark-code-text-color</code></td>\n      <td>Dark theme code text color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-code-background-color\"></div></td>\n      <td><code>$pt-dark-code-background-color</code></td>\n      <td>Dark theme code background color</td>\n    </tr>\n  </tbody>\n</table>\n\nStyleguide variables.colors\n*/\n/*\nColor schemes\n\nUse the following color scheme generators to produce color schemes for your data visualizations.\nFirst, choose the kind of scheme based on the type of your data, then customize the number of values\nusing the forms below. Finally, copy the colors array into your application and make it live!\n\nThe following schemes have been carefully crafted to be visually striking and easily understandable\nwhile remaining accessible to visually impaired and color blind users.\n\nStyleguide colors.schemes\n*/\n/*\nSequential color schemes\n\nSequential color schemes imply order and are best suited for representing data that\nranges from low-to-high values either on an ordinal or on a numerical scale.\n\nWeight: -1\n\n@react-docs SequentialSchemePalette\n\nStyleguide colors.schemes.sequential\n*/\n/*\nDiverging color schemes\n\nDiverging color schemes put equal emphasis on mid-range values and extremes\nat both ends of the data range.\n\n@react-docs DivergingSchemePalette\n\nStyleguide colors.schemes.diverging\n*/\n/*\nQualitative color schemes\n\nQualitative color schemes use a series of unrelated colors to create a\nscheme that does not imply order, merely difference in kind.\n\n@react-docs QualitativeSchemePalette\n\nStyleguide colors.schemes.qualitative\n*/\n/*\nVariables\n\nAvailable for use with Sass and Less.\n\n```css.scss\n@import \"path/to/@blueprintjs/core/dist/variables\";\n```\n\nThe Sass `$` convention is used in this documentation for consistency with the original source code.\nEvery variable mentioned below is also available in `variables.less` with an `@` prefix instead of `$`.\n\nWeight: 4\n\nStyleguide variables\n*/\n/*\nFont variables\n\nTypically, correct typography styles should be achieved by using the proper HTML tag (`<p>` for\ntext, `<h*>` for headings, `<code>` for code, etc.). The following variables are provided for the\nrare cases where custom styling is necessary and should be used sparingly:\n\n- `$pt-font-family`\n- `$pt-font-family-monospace`\n- `$pt-font-size`\n- `$pt-font-size-small`\n- `$pt-font-size-large`\n- `$pt-line-height`\n\nSee the [Fonts section](#typography.fonts) for more information and usage guidelines.\n\nStyleguide variables.fonts\n*/\n/*\nIcon variables\n\nMost icons should be displayed using the `span.pt-icon-*` classes or via modifier classes on\ncomponents like `.pt-button`. In rare cases, you may need direct access to the content\nstring that generates each icon in the icon font. Blueprint provides these variables with\nstraightforward names (see the [Icons section](#icons) for the full list of identifiers):\n\n- `$pt-icon-style`\n- `$pt-icon-align-left`\n- `$pt-icon-align-center`\n- ...\n\nVariables are also provided for the two icon font families and their pixel sizes:\n\n- `@icons16-family`\n- `@icons20-family`\n- `$pt-icon-size-standard`\n- `$pt-icon-size-large`\n\nStyleguide variables.icons\n*/\n/*\nGrids & dimensions\n\nSizes of common components. Most sizing variables are based on `$pt-grid-size`, which has\na value of `10px`. Custom components should adhere to the relevant `height` variable.\n\n- `$pt-grid-size`\n- `$pt-border-radius`\n- `$pt-button-height`\n- `$pt-button-height-large`\n- `$pt-input-height`\n- `$pt-input-height-large`\n- `$pt-navbar-height`\n\nWeight: 1\n\nStyleguide variables.dimensions\n*/\n/*\nGrid system\n\nBlueprint doesn't provide a grid system. In general, you should try to use the `$pt-grid-size`\nvariable to generate layout & sizing style rules in your CSS codebase.\n\nIn lieu of a full grid system, you should try to use the __CSS flexible box layout model__ (a.k.a.\n\"flexbox\"). It's quite powerful on its own and allows you to build robust, responsive layouts\nwithout writing much CSS. Here are some resources for learning flexbox:\n   - [MDN guide](https://developer.mozilla.org/en-US/docs/Web/Guide/CSS/Flexible_boxes)\n   - [CSS Tricks guide](https://css-tricks.com/snippets/css/a-guide-to-flexbox/)\n\nStyleguide variables.dimensions.grid\n*/\n/*\nLayering\n\nBlueprint provides variables for three z-index layers. This should be enough for most use cases,\nespecially if you make correct use of [stacking context][MDN]. [Overlay](#components.overlay)\ncomponents such as dialogs and popovers use these z-index values to configure their stacking\ncontexts.\n\n- `$pt-z-index-base`\n- `$pt-z-index-content`\n- `$pt-z-index-overlay`\n\n[MDN]: https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Positioning/Understanding_z_index/The_stacking_context\n\nWeight: 1\n\nStyleguide variables.layering\n*/\n/*\nLight theme styles\n\nUse these when you need to build custom UI components that look similar to Blueprint's\nlight theme components.\n\n- `$pt-dialog-box-shadow`\n- `$pt-input-box-shadow`\n- `$pt-popover-box-shadow`\n- `$pt-tooltip-box-shadow`\n\nWeight: 2\n\nStyleguide variables.light\n*/\n/*\nDark theme styles\n\nUse these when you need to build custom UI components that look similar to Blueprint's\ndark theme components.\n\n- `$pt-dark-dialog-box-shadow`\n- `$pt-dark-input-box-shadow`\n- `$pt-dark-popover-box-shadow`\n- `$pt-dark-tooltip-box-shadow`\n\nWeight: 3\n\nStyleguide variables.dark\n*/\n/*\nColors\n\nHex values for these colors can be accessed in JavaScript. The global version of the module exposes\nthe `Blueprint.Colors` object. In CommonJS, you may `import { Colors } from \"@blueprintjs/core\"`.\n\nStyleguide colors\n*/\n/*\nGray scale\n\nBlack, white and everything in between. The gray scale should be used for\nthe main UI frame: containers, headers, sections, boxes, etc.\nIf you need to call attention to a particular element (buttons, icons, tooltips, etc.),\nuse one of the [core colors](#colors.core).\n\n@react-docs GrayscalePalette\n\nWeight: -1\n\nStyleguide colors.grays\n*/\n/*\nCore colors\n\nCore colors are reserved for user interface design. Use these to help call\nattention to specific UI elements, such as buttons, callouts, icons, etc.\nEach core color is mapped to what we call a __visual intent__. We use intents\nto convey the status of UI elements:\n\n- _Blue_ (intent: primary) elevates elements from the typical gray scale UI frame.\n- _Green_ (intent: success) indicates successful operations.\n- _Orange_ (intent: warning) indicates warnings and intermediate states.\n- _Red_ (intent: danger) indicates errors and potentially destructive operations.\n\nCore colors are also designed to:\n\n- go well together and be used alongside each other in any application.\n- adhere to [WCAG 2.0](https://www.w3.org/TR/WCAG20/) standards, and therefore are\n  highly accessible to visually impaired and color blind users.\n\n@react-docs CoreColorsPalette\n\nStyleguide colors.core\n*/\n/*\nExtended colors\n\nExtended colors should typically be reserved for data visualizations: any time\nyou need to represent data of some sort, you can use these.\nThese colors are less strict on [WCAG 2.0](https://www.w3.org/TR/WCAG20/)\naccessibility standards and should therefore not be used for typical user\ninterface design — take a look at [core colors](#colors.core) instead.\n\n@react-docs ExtendedColorsPalette\n\nStyleguide colors.extended\n*/\n/*\nColor aliases\n\nThese variables are semantic aliases of our [colors](#colors). They are used throughout Blueprint\nitself to ensure consistent color usage across components.\n\n<table class=pt-table>\n  <thead>\n    <tr>\n      <th></th>\n      <th>Variable</th>\n      <th>Description</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-intent-primary\"></div></td>\n      <td><code>$pt-intent-primary</code></td>\n      <td>Primary intent color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-intent-success\"></div></td>\n      <td><code>$pt-intent-success</code></td>\n      <td>Success intent color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-intent-warning\"></div></td>\n      <td><code>$pt-intent-warning</code></td>\n      <td>Warning intent color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-intent-danger\"></div></td>\n      <td><code>$pt-intent-danger</code></td>\n      <td>Danger intent color</td>\n    </tr>\n\n    <tr>\n      <td><div class=\"docs-color-bubble alias-app-background-color\"></div></td>\n      <td><code>$pt-app-background-color</code></td>\n      <td>Application background color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-app-background-color\"></div></td>\n      <td><code>$pt-dark-app-background-color</code></td>\n      <td>Dark theme application background color</td>\n    </tr>\n\n    <tr>\n      <td><div class=\"docs-color-bubble alias-text-color\"></div></td>\n      <td><code>$pt-text-color</code></td>\n      <td>Default text color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-text-color-muted\"></div></td>\n      <td><code>$pt-text-color-muted</code></td>\n      <td>Muted text color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-text-color-disabled\"></div></td>\n      <td><code>$pt-text-color-disabled</code></td>\n      <td>Disabled text color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-heading-color\"></div></td>\n      <td><code>$pt-heading-color</code></td>\n      <td>Text color for headers</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-link-color\"></div></td>\n      <td><code>$pt-link-color</code></td>\n      <td>Text color for links</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-text-color\"></div></td>\n      <td><code>$pt-dark-text-color</code></td>\n      <td>Dark theme default text color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-text-color-muted\"></div></td>\n      <td><code>$pt-dark-text-color-muted</code></td>\n      <td>Dark theme muted text color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-text-color-disabled\"></div></td>\n      <td><code>$pt-dark-text-color-disabled</code></td>\n      <td>Dark theme disabled text color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-heading-color\"></div></td>\n      <td><code>$pt-dark-heading-color</code></td>\n      <td>Dark theme text color for headers</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-link-color\"></div></td>\n      <td><code>$pt-dark-link-color</code></td>\n      <td>Dark theme text color for links</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-text-selection-color\"></div></td>\n      <td><code>$pt-text-selection-color</code></td>\n      <td>Text selection color</td>\n    </tr>\n\n    <tr>\n      <td><div class=\"docs-color-bubble alias-icon-color\"></div></td>\n      <td><code>$pt-icon-color</code></td>\n      <td>Default icon color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-icon-color-hover\"></div></td>\n      <td><code>$pt-icon-color-hover</code></td>\n      <td>Hovered icon color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-icon-color-disabled\"></div></td>\n      <td><code>$pt-icon-color-disabled</code></td>\n      <td>Disabled icon color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-icon-color-selected\"></div></td>\n      <td><code>$pt-icon-color-selected</code></td>\n      <td>Selected icon color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-icon-color\"></div></td>\n      <td><code>$pt-dark-icon-color</code></td>\n      <td>Dark theme default icon color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-icon-color-hover\"></div></td>\n      <td><code>$pt-dark-icon-color-hover</code></td>\n      <td>Dark theme hovered icon color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-icon-color-disabled\"></div></td>\n      <td><code>$pt-dark-icon-color-disabled</code></td>\n      <td>Dark theme disabled icon color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-icon-color-selected\"></div></td>\n      <td><code>$pt-dark-icon-color-selected</code></td>\n      <td>Dark theme selected icon color</td>\n    </tr>\n\n    <tr>\n      <td><div class=\"docs-color-bubble alias-divider-black\"></div></td>\n      <td><code>$pt-divider-black</code></td>\n      <td>Black divider color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-divider-black\"></div></td>\n      <td><code>$pt-dark-divider-black</code></td>\n      <td>Dark theme black divider color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-divider-white\"></div></td>\n      <td><code>$pt-dark-divider-white</code></td>\n      <td>Dark theme white divider color</td>\n    </tr>\n\n    <tr>\n      <td><div class=\"docs-color-bubble alias-code-text-color\"></div></td>\n      <td><code>$pt-code-text-color</code></td>\n      <td>Code text color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-code-background-color\"></div></td>\n      <td><code>$pt-code-background-color</code></td>\n      <td>Code background color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-code-text-color\"></div></td>\n      <td><code>$pt-dark-code-text-color</code></td>\n      <td>Dark theme code text color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-code-background-color\"></div></td>\n      <td><code>$pt-dark-code-background-color</code></td>\n      <td>Dark theme code background color</td>\n    </tr>\n  </tbody>\n</table>\n\nStyleguide variables.colors\n*/\n/*\nColor schemes\n\nUse the following color scheme generators to produce color schemes for your data visualizations.\nFirst, choose the kind of scheme based on the type of your data, then customize the number of values\nusing the forms below. Finally, copy the colors array into your application and make it live!\n\nThe following schemes have been carefully crafted to be visually striking and easily understandable\nwhile remaining accessible to visually impaired and color blind users.\n\nStyleguide colors.schemes\n*/\n/*\nSequential color schemes\n\nSequential color schemes imply order and are best suited for representing data that\nranges from low-to-high values either on an ordinal or on a numerical scale.\n\nWeight: -1\n\n@react-docs SequentialSchemePalette\n\nStyleguide colors.schemes.sequential\n*/\n/*\nDiverging color schemes\n\nDiverging color schemes put equal emphasis on mid-range values and extremes\nat both ends of the data range.\n\n@react-docs DivergingSchemePalette\n\nStyleguide colors.schemes.diverging\n*/\n/*\nQualitative color schemes\n\nQualitative color schemes use a series of unrelated colors to create a\nscheme that does not imply order, merely difference in kind.\n\n@react-docs QualitativeSchemePalette\n\nStyleguide colors.schemes.qualitative\n*/\n/*\nColors\n\nHex values for these colors can be accessed in JavaScript. The global version of the module exposes\nthe `Blueprint.Colors` object. In CommonJS, you may `import { Colors } from \"@blueprintjs/core\"`.\n\nStyleguide colors\n*/\n/*\nGray scale\n\nBlack, white and everything in between. The gray scale should be used for\nthe main UI frame: containers, headers, sections, boxes, etc.\nIf you need to call attention to a particular element (buttons, icons, tooltips, etc.),\nuse one of the [core colors](#colors.core).\n\n@react-docs GrayscalePalette\n\nWeight: -1\n\nStyleguide colors.grays\n*/\n/*\nCore colors\n\nCore colors are reserved for user interface design. Use these to help call\nattention to specific UI elements, such as buttons, callouts, icons, etc.\nEach core color is mapped to what we call a __visual intent__. We use intents\nto convey the status of UI elements:\n\n- _Blue_ (intent: primary) elevates elements from the typical gray scale UI frame.\n- _Green_ (intent: success) indicates successful operations.\n- _Orange_ (intent: warning) indicates warnings and intermediate states.\n- _Red_ (intent: danger) indicates errors and potentially destructive operations.\n\nCore colors are also designed to:\n\n- go well together and be used alongside each other in any application.\n- adhere to [WCAG 2.0](https://www.w3.org/TR/WCAG20/) standards, and therefore are\n  highly accessible to visually impaired and color blind users.\n\n@react-docs CoreColorsPalette\n\nStyleguide colors.core\n*/\n/*\nExtended colors\n\nExtended colors should typically be reserved for data visualizations: any time\nyou need to represent data of some sort, you can use these.\nThese colors are less strict on [WCAG 2.0](https://www.w3.org/TR/WCAG20/)\naccessibility standards and should therefore not be used for typical user\ninterface design — take a look at [core colors](#colors.core) instead.\n\n@react-docs ExtendedColorsPalette\n\nStyleguide colors.extended\n*/\n/*\nColor aliases\n\nThese variables are semantic aliases of our [colors](#colors). They are used throughout Blueprint\nitself to ensure consistent color usage across components.\n\n<table class=pt-table>\n  <thead>\n    <tr>\n      <th></th>\n      <th>Variable</th>\n      <th>Description</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-intent-primary\"></div></td>\n      <td><code>$pt-intent-primary</code></td>\n      <td>Primary intent color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-intent-success\"></div></td>\n      <td><code>$pt-intent-success</code></td>\n      <td>Success intent color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-intent-warning\"></div></td>\n      <td><code>$pt-intent-warning</code></td>\n      <td>Warning intent color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-intent-danger\"></div></td>\n      <td><code>$pt-intent-danger</code></td>\n      <td>Danger intent color</td>\n    </tr>\n\n    <tr>\n      <td><div class=\"docs-color-bubble alias-app-background-color\"></div></td>\n      <td><code>$pt-app-background-color</code></td>\n      <td>Application background color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-app-background-color\"></div></td>\n      <td><code>$pt-dark-app-background-color</code></td>\n      <td>Dark theme application background color</td>\n    </tr>\n\n    <tr>\n      <td><div class=\"docs-color-bubble alias-text-color\"></div></td>\n      <td><code>$pt-text-color</code></td>\n      <td>Default text color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-text-color-muted\"></div></td>\n      <td><code>$pt-text-color-muted</code></td>\n      <td>Muted text color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-text-color-disabled\"></div></td>\n      <td><code>$pt-text-color-disabled</code></td>\n      <td>Disabled text color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-heading-color\"></div></td>\n      <td><code>$pt-heading-color</code></td>\n      <td>Text color for headers</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-link-color\"></div></td>\n      <td><code>$pt-link-color</code></td>\n      <td>Text color for links</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-text-color\"></div></td>\n      <td><code>$pt-dark-text-color</code></td>\n      <td>Dark theme default text color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-text-color-muted\"></div></td>\n      <td><code>$pt-dark-text-color-muted</code></td>\n      <td>Dark theme muted text color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-text-color-disabled\"></div></td>\n      <td><code>$pt-dark-text-color-disabled</code></td>\n      <td>Dark theme disabled text color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-heading-color\"></div></td>\n      <td><code>$pt-dark-heading-color</code></td>\n      <td>Dark theme text color for headers</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-link-color\"></div></td>\n      <td><code>$pt-dark-link-color</code></td>\n      <td>Dark theme text color for links</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-text-selection-color\"></div></td>\n      <td><code>$pt-text-selection-color</code></td>\n      <td>Text selection color</td>\n    </tr>\n\n    <tr>\n      <td><div class=\"docs-color-bubble alias-icon-color\"></div></td>\n      <td><code>$pt-icon-color</code></td>\n      <td>Default icon color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-icon-color-hover\"></div></td>\n      <td><code>$pt-icon-color-hover</code></td>\n      <td>Hovered icon color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-icon-color-disabled\"></div></td>\n      <td><code>$pt-icon-color-disabled</code></td>\n      <td>Disabled icon color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-icon-color-selected\"></div></td>\n      <td><code>$pt-icon-color-selected</code></td>\n      <td>Selected icon color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-icon-color\"></div></td>\n      <td><code>$pt-dark-icon-color</code></td>\n      <td>Dark theme default icon color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-icon-color-hover\"></div></td>\n      <td><code>$pt-dark-icon-color-hover</code></td>\n      <td>Dark theme hovered icon color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-icon-color-disabled\"></div></td>\n      <td><code>$pt-dark-icon-color-disabled</code></td>\n      <td>Dark theme disabled icon color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-icon-color-selected\"></div></td>\n      <td><code>$pt-dark-icon-color-selected</code></td>\n      <td>Dark theme selected icon color</td>\n    </tr>\n\n    <tr>\n      <td><div class=\"docs-color-bubble alias-divider-black\"></div></td>\n      <td><code>$pt-divider-black</code></td>\n      <td>Black divider color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-divider-black\"></div></td>\n      <td><code>$pt-dark-divider-black</code></td>\n      <td>Dark theme black divider color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-divider-white\"></div></td>\n      <td><code>$pt-dark-divider-white</code></td>\n      <td>Dark theme white divider color</td>\n    </tr>\n\n    <tr>\n      <td><div class=\"docs-color-bubble alias-code-text-color\"></div></td>\n      <td><code>$pt-code-text-color</code></td>\n      <td>Code text color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-code-background-color\"></div></td>\n      <td><code>$pt-code-background-color</code></td>\n      <td>Code background color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-code-text-color\"></div></td>\n      <td><code>$pt-dark-code-text-color</code></td>\n      <td>Dark theme code text color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-code-background-color\"></div></td>\n      <td><code>$pt-dark-code-background-color</code></td>\n      <td>Dark theme code background color</td>\n    </tr>\n  </tbody>\n</table>\n\nStyleguide variables.colors\n*/\n/*\nColor schemes\n\nUse the following color scheme generators to produce color schemes for your data visualizations.\nFirst, choose the kind of scheme based on the type of your data, then customize the number of values\nusing the forms below. Finally, copy the colors array into your application and make it live!\n\nThe following schemes have been carefully crafted to be visually striking and easily understandable\nwhile remaining accessible to visually impaired and color blind users.\n\nStyleguide colors.schemes\n*/\n/*\nSequential color schemes\n\nSequential color schemes imply order and are best suited for representing data that\nranges from low-to-high values either on an ordinal or on a numerical scale.\n\nWeight: -1\n\n@react-docs SequentialSchemePalette\n\nStyleguide colors.schemes.sequential\n*/\n/*\nDiverging color schemes\n\nDiverging color schemes put equal emphasis on mid-range values and extremes\nat both ends of the data range.\n\n@react-docs DivergingSchemePalette\n\nStyleguide colors.schemes.diverging\n*/\n/*\nQualitative color schemes\n\nQualitative color schemes use a series of unrelated colors to create a\nscheme that does not imply order, merely difference in kind.\n\n@react-docs QualitativeSchemePalette\n\nStyleguide colors.schemes.qualitative\n*/\n/*\nVariables\n\nAvailable for use with Sass and Less.\n\n```css.scss\n@import \"path/to/@blueprintjs/core/dist/variables\";\n```\n\nThe Sass `$` convention is used in this documentation for consistency with the original source code.\nEvery variable mentioned below is also available in `variables.less` with an `@` prefix instead of `$`.\n\nWeight: 4\n\nStyleguide variables\n*/\n/*\nFont variables\n\nTypically, correct typography styles should be achieved by using the proper HTML tag (`<p>` for\ntext, `<h*>` for headings, `<code>` for code, etc.). The following variables are provided for the\nrare cases where custom styling is necessary and should be used sparingly:\n\n- `$pt-font-family`\n- `$pt-font-family-monospace`\n- `$pt-font-size`\n- `$pt-font-size-small`\n- `$pt-font-size-large`\n- `$pt-line-height`\n\nSee the [Fonts section](#typography.fonts) for more information and usage guidelines.\n\nStyleguide variables.fonts\n*/\n/*\nIcon variables\n\nMost icons should be displayed using the `span.pt-icon-*` classes or via modifier classes on\ncomponents like `.pt-button`. In rare cases, you may need direct access to the content\nstring that generates each icon in the icon font. Blueprint provides these variables with\nstraightforward names (see the [Icons section](#icons) for the full list of identifiers):\n\n- `$pt-icon-style`\n- `$pt-icon-align-left`\n- `$pt-icon-align-center`\n- ...\n\nVariables are also provided for the two icon font families and their pixel sizes:\n\n- `@icons16-family`\n- `@icons20-family`\n- `$pt-icon-size-standard`\n- `$pt-icon-size-large`\n\nStyleguide variables.icons\n*/\n/*\nGrids & dimensions\n\nSizes of common components. Most sizing variables are based on `$pt-grid-size`, which has\na value of `10px`. Custom components should adhere to the relevant `height` variable.\n\n- `$pt-grid-size`\n- `$pt-border-radius`\n- `$pt-button-height`\n- `$pt-button-height-large`\n- `$pt-input-height`\n- `$pt-input-height-large`\n- `$pt-navbar-height`\n\nWeight: 1\n\nStyleguide variables.dimensions\n*/\n/*\nGrid system\n\nBlueprint doesn't provide a grid system. In general, you should try to use the `$pt-grid-size`\nvariable to generate layout & sizing style rules in your CSS codebase.\n\nIn lieu of a full grid system, you should try to use the __CSS flexible box layout model__ (a.k.a.\n\"flexbox\"). It's quite powerful on its own and allows you to build robust, responsive layouts\nwithout writing much CSS. Here are some resources for learning flexbox:\n   - [MDN guide](https://developer.mozilla.org/en-US/docs/Web/Guide/CSS/Flexible_boxes)\n   - [CSS Tricks guide](https://css-tricks.com/snippets/css/a-guide-to-flexbox/)\n\nStyleguide variables.dimensions.grid\n*/\n/*\nLayering\n\nBlueprint provides variables for three z-index layers. This should be enough for most use cases,\nespecially if you make correct use of [stacking context][MDN]. [Overlay](#components.overlay)\ncomponents such as dialogs and popovers use these z-index values to configure their stacking\ncontexts.\n\n- `$pt-z-index-base`\n- `$pt-z-index-content`\n- `$pt-z-index-overlay`\n\n[MDN]: https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Positioning/Understanding_z_index/The_stacking_context\n\nWeight: 1\n\nStyleguide variables.layering\n*/\n/*\nLight theme styles\n\nUse these when you need to build custom UI components that look similar to Blueprint's\nlight theme components.\n\n- `$pt-dialog-box-shadow`\n- `$pt-input-box-shadow`\n- `$pt-popover-box-shadow`\n- `$pt-tooltip-box-shadow`\n\nWeight: 2\n\nStyleguide variables.light\n*/\n/*\nDark theme styles\n\nUse these when you need to build custom UI components that look similar to Blueprint's\ndark theme components.\n\n- `$pt-dark-dialog-box-shadow`\n- `$pt-dark-input-box-shadow`\n- `$pt-dark-popover-box-shadow`\n- `$pt-dark-tooltip-box-shadow`\n\nWeight: 3\n\nStyleguide variables.dark\n*/\n/*\nCSS `border` property issues:\n- An element can only have one border.\n- Borders can't stack with shadows.\n- Borders modify the size of the element they're applied to.\n- Border positioning requires the extra `box-sizing` property.\n\n`box-shadow` doesn't have these issues, we're using it instead of `border`.\n*/\n/*\nOverlay shadows are used for default buttons\nfloating on top of other elements. This way, the\nshadows blend with the colors beneath it.\nSwitches and slider handles both use these variables.\n*/\n/*\nDate range picker\n\nA `DateRangePicker` shows two month calendars and lets the user select a single range of\ndays.\n\nUse the `onChange` prop to listen for changes to the set date range. You can control the selected\ndate range by setting the `value` prop, or use the component in uncontrolled mode and specify an\ninitial date range by setting `defaultValue`.\n\n`DateRangePicker` uses the `DateRange` type across its API.\nThis is an alias for the tuple type `[Date, Date]`.\nSemantically:\n* `[null, null]` represents an empty selection\n* `[someDate, null]` represents a date range where a single day endpoint is known.\n* `[someDate, someOtherDate]` represents a full date range where both endpoints known.\n\n@react-example DateRangePickerExample\n\nStyleguide components.datetime.daterangepicker\n*/\n/*\nJavaScript API\n\nThe `DateRangePicker` component is available in the __@blueprintjs/datetime__ package.\nMake sure to review the [general usage docs for date & time components](#components.datetime).\n\n```\nimport { DateRangePicker } from \"@blueprintjs/datetime\";\n\n<DateRangePicker\n    value={[this.state.startDate, this.state.endDate]}\n    onChange={this.handleDateChange}\n/>\n```\n\n@interface IDateRangePickerProps\n\nWeight: -1\n\nStyleguide components.datetime.daterangepicker.js\n*/\n.pt-daterangepicker {\n  display: flex;\n  white-space: nowrap; }\n  .pt-daterangepicker .DayPicker:not(:last-child) {\n    margin-right: 10px; }\n  .pt-daterangepicker .pt-daterangepicker-shortcuts + .DayPicker {\n    border-left: 1px solid rgba(16, 22, 26, 0.15);\n    min-width: 220px;\n    padding-left: 10px; }\n  .pt-daterangepicker.pt-daterangepicker-contiguous .DayPicker {\n    min-width: 430px; }\n  .pt-daterangepicker.pt-daterangepicker-contiguous .pt-daterangepicker-shortcuts + .DayPicker {\n    min-width: 440px; }\n  .pt-daterangepicker.pt-daterangepicker-contiguous .DayPicker-Month:not(:last-child) {\n    margin-right: 10px; }\n  .pt-daterangepicker.pt-daterangepicker-single-month .DayPicker {\n    min-width: 210px; }\n  .pt-daterangepicker.pt-daterangepicker-single-month .pt-daterangepicker-shortcuts + .DayPicker {\n    min-width: 220px; }\n  .pt-daterangepicker .DayPicker-Day--outside {\n    visibility: hidden; }\n  .pt-daterangepicker .DayPicker-Day--hovered-range {\n    border-radius: 0; }\n    .pt-daterangepicker .DayPicker-Day--hovered-range:not(.DayPicker-Day--selected):not(.DayPicker-Day--selected-range):not(.DayPicker-Day--selected-range-start):not(.DayPicker-Day--selected-range-end) {\n      background-color: #ebf1f5; }\n  .pt-daterangepicker .DayPicker-Day--selected-range {\n    border-radius: 0;\n    background-color: #ebf1f5; }\n    .pt-daterangepicker .DayPicker-Day--selected-range:hover {\n      background-color: #ced9e0; }\n  .pt-daterangepicker .DayPicker-Day--selected-range-start:not(.DayPicker-Day--selected-range-end):not(.DayPicker-Day--hovered-range-end) {\n    border-top-right-radius: 0;\n    border-bottom-right-radius: 0; }\n  .pt-daterangepicker .DayPicker-Day--selected-range-end:not(.DayPicker-Day--selected-range-start):not(.DayPicker-Day--hovered-range-start) {\n    border-top-left-radius: 0;\n    border-bottom-left-radius: 0; }\n  .pt-daterangepicker .DayPicker-Day--hovered-range-start:not(.DayPicker-Day--hovered-range-end) {\n    border-top-right-radius: 0;\n    border-bottom-right-radius: 0; }\n  .pt-daterangepicker .DayPicker-Day--hovered-range-end:not(.DayPicker-Day--hovered-range-start) {\n    border-top-left-radius: 0;\n    border-bottom-left-radius: 0; }\n  .pt-dark .pt-daterangepicker .DayPicker-Day--hovered-range:not(.DayPicker-Day--selected):not(.DayPicker-Day--selected-range):not(.DayPicker-Day--selected-range-start):not(.DayPicker-Day--selected-range-end) {\n    background-color: #394b59; }\n  .pt-dark .pt-daterangepicker .DayPicker-Day--selected-range {\n    background-color: #394b59; }\n    .pt-dark .pt-daterangepicker .DayPicker-Day--selected-range:hover {\n      background-color: #5c7080; }\n\n.pt-menu.pt-daterangepicker-shortcuts {\n  display: inline-block;\n  margin-top: -5px;\n  margin-left: -5px;\n  min-width: 150px;\n  padding-top: 0;\n  padding-right: 5px;\n  padding-left: 0; }\n\n/*\nColors\n\nHex values for these colors can be accessed in JavaScript. The global version of the module exposes\nthe `Blueprint.Colors` object. In CommonJS, you may `import { Colors } from \"@blueprintjs/core\"`.\n\nStyleguide colors\n*/\n/*\nGray scale\n\nBlack, white and everything in between. The gray scale should be used for\nthe main UI frame: containers, headers, sections, boxes, etc.\nIf you need to call attention to a particular element (buttons, icons, tooltips, etc.),\nuse one of the [core colors](#colors.core).\n\n@react-docs GrayscalePalette\n\nWeight: -1\n\nStyleguide colors.grays\n*/\n/*\nCore colors\n\nCore colors are reserved for user interface design. Use these to help call\nattention to specific UI elements, such as buttons, callouts, icons, etc.\nEach core color is mapped to what we call a __visual intent__. We use intents\nto convey the status of UI elements:\n\n- _Blue_ (intent: primary) elevates elements from the typical gray scale UI frame.\n- _Green_ (intent: success) indicates successful operations.\n- _Orange_ (intent: warning) indicates warnings and intermediate states.\n- _Red_ (intent: danger) indicates errors and potentially destructive operations.\n\nCore colors are also designed to:\n\n- go well together and be used alongside each other in any application.\n- adhere to [WCAG 2.0](https://www.w3.org/TR/WCAG20/) standards, and therefore are\n  highly accessible to visually impaired and color blind users.\n\n@react-docs CoreColorsPalette\n\nStyleguide colors.core\n*/\n/*\nExtended colors\n\nExtended colors should typically be reserved for data visualizations: any time\nyou need to represent data of some sort, you can use these.\nThese colors are less strict on [WCAG 2.0](https://www.w3.org/TR/WCAG20/)\naccessibility standards and should therefore not be used for typical user\ninterface design — take a look at [core colors](#colors.core) instead.\n\n@react-docs ExtendedColorsPalette\n\nStyleguide colors.extended\n*/\n/*\nColor aliases\n\nThese variables are semantic aliases of our [colors](#colors). They are used throughout Blueprint\nitself to ensure consistent color usage across components.\n\n<table class=pt-table>\n  <thead>\n    <tr>\n      <th></th>\n      <th>Variable</th>\n      <th>Description</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-intent-primary\"></div></td>\n      <td><code>$pt-intent-primary</code></td>\n      <td>Primary intent color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-intent-success\"></div></td>\n      <td><code>$pt-intent-success</code></td>\n      <td>Success intent color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-intent-warning\"></div></td>\n      <td><code>$pt-intent-warning</code></td>\n      <td>Warning intent color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-intent-danger\"></div></td>\n      <td><code>$pt-intent-danger</code></td>\n      <td>Danger intent color</td>\n    </tr>\n\n    <tr>\n      <td><div class=\"docs-color-bubble alias-app-background-color\"></div></td>\n      <td><code>$pt-app-background-color</code></td>\n      <td>Application background color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-app-background-color\"></div></td>\n      <td><code>$pt-dark-app-background-color</code></td>\n      <td>Dark theme application background color</td>\n    </tr>\n\n    <tr>\n      <td><div class=\"docs-color-bubble alias-text-color\"></div></td>\n      <td><code>$pt-text-color</code></td>\n      <td>Default text color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-text-color-muted\"></div></td>\n      <td><code>$pt-text-color-muted</code></td>\n      <td>Muted text color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-text-color-disabled\"></div></td>\n      <td><code>$pt-text-color-disabled</code></td>\n      <td>Disabled text color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-heading-color\"></div></td>\n      <td><code>$pt-heading-color</code></td>\n      <td>Text color for headers</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-link-color\"></div></td>\n      <td><code>$pt-link-color</code></td>\n      <td>Text color for links</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-text-color\"></div></td>\n      <td><code>$pt-dark-text-color</code></td>\n      <td>Dark theme default text color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-text-color-muted\"></div></td>\n      <td><code>$pt-dark-text-color-muted</code></td>\n      <td>Dark theme muted text color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-text-color-disabled\"></div></td>\n      <td><code>$pt-dark-text-color-disabled</code></td>\n      <td>Dark theme disabled text color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-heading-color\"></div></td>\n      <td><code>$pt-dark-heading-color</code></td>\n      <td>Dark theme text color for headers</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-link-color\"></div></td>\n      <td><code>$pt-dark-link-color</code></td>\n      <td>Dark theme text color for links</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-text-selection-color\"></div></td>\n      <td><code>$pt-text-selection-color</code></td>\n      <td>Text selection color</td>\n    </tr>\n\n    <tr>\n      <td><div class=\"docs-color-bubble alias-icon-color\"></div></td>\n      <td><code>$pt-icon-color</code></td>\n      <td>Default icon color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-icon-color-hover\"></div></td>\n      <td><code>$pt-icon-color-hover</code></td>\n      <td>Hovered icon color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-icon-color-disabled\"></div></td>\n      <td><code>$pt-icon-color-disabled</code></td>\n      <td>Disabled icon color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-icon-color-selected\"></div></td>\n      <td><code>$pt-icon-color-selected</code></td>\n      <td>Selected icon color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-icon-color\"></div></td>\n      <td><code>$pt-dark-icon-color</code></td>\n      <td>Dark theme default icon color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-icon-color-hover\"></div></td>\n      <td><code>$pt-dark-icon-color-hover</code></td>\n      <td>Dark theme hovered icon color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-icon-color-disabled\"></div></td>\n      <td><code>$pt-dark-icon-color-disabled</code></td>\n      <td>Dark theme disabled icon color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-icon-color-selected\"></div></td>\n      <td><code>$pt-dark-icon-color-selected</code></td>\n      <td>Dark theme selected icon color</td>\n    </tr>\n\n    <tr>\n      <td><div class=\"docs-color-bubble alias-divider-black\"></div></td>\n      <td><code>$pt-divider-black</code></td>\n      <td>Black divider color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-divider-black\"></div></td>\n      <td><code>$pt-dark-divider-black</code></td>\n      <td>Dark theme black divider color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-divider-white\"></div></td>\n      <td><code>$pt-dark-divider-white</code></td>\n      <td>Dark theme white divider color</td>\n    </tr>\n\n    <tr>\n      <td><div class=\"docs-color-bubble alias-code-text-color\"></div></td>\n      <td><code>$pt-code-text-color</code></td>\n      <td>Code text color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-code-background-color\"></div></td>\n      <td><code>$pt-code-background-color</code></td>\n      <td>Code background color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-code-text-color\"></div></td>\n      <td><code>$pt-dark-code-text-color</code></td>\n      <td>Dark theme code text color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-code-background-color\"></div></td>\n      <td><code>$pt-dark-code-background-color</code></td>\n      <td>Dark theme code background color</td>\n    </tr>\n  </tbody>\n</table>\n\nStyleguide variables.colors\n*/\n/*\nColor schemes\n\nUse the following color scheme generators to produce color schemes for your data visualizations.\nFirst, choose the kind of scheme based on the type of your data, then customize the number of values\nusing the forms below. Finally, copy the colors array into your application and make it live!\n\nThe following schemes have been carefully crafted to be visually striking and easily understandable\nwhile remaining accessible to visually impaired and color blind users.\n\nStyleguide colors.schemes\n*/\n/*\nSequential color schemes\n\nSequential color schemes imply order and are best suited for representing data that\nranges from low-to-high values either on an ordinal or on a numerical scale.\n\nWeight: -1\n\n@react-docs SequentialSchemePalette\n\nStyleguide colors.schemes.sequential\n*/\n/*\nDiverging color schemes\n\nDiverging color schemes put equal emphasis on mid-range values and extremes\nat both ends of the data range.\n\n@react-docs DivergingSchemePalette\n\nStyleguide colors.schemes.diverging\n*/\n/*\nQualitative color schemes\n\nQualitative color schemes use a series of unrelated colors to create a\nscheme that does not imply order, merely difference in kind.\n\n@react-docs QualitativeSchemePalette\n\nStyleguide colors.schemes.qualitative\n*/\n/*\nColors\n\nHex values for these colors can be accessed in JavaScript. The global version of the module exposes\nthe `Blueprint.Colors` object. In CommonJS, you may `import { Colors } from \"@blueprintjs/core\"`.\n\nStyleguide colors\n*/\n/*\nGray scale\n\nBlack, white and everything in between. The gray scale should be used for\nthe main UI frame: containers, headers, sections, boxes, etc.\nIf you need to call attention to a particular element (buttons, icons, tooltips, etc.),\nuse one of the [core colors](#colors.core).\n\n@react-docs GrayscalePalette\n\nWeight: -1\n\nStyleguide colors.grays\n*/\n/*\nCore colors\n\nCore colors are reserved for user interface design. Use these to help call\nattention to specific UI elements, such as buttons, callouts, icons, etc.\nEach core color is mapped to what we call a __visual intent__. We use intents\nto convey the status of UI elements:\n\n- _Blue_ (intent: primary) elevates elements from the typical gray scale UI frame.\n- _Green_ (intent: success) indicates successful operations.\n- _Orange_ (intent: warning) indicates warnings and intermediate states.\n- _Red_ (intent: danger) indicates errors and potentially destructive operations.\n\nCore colors are also designed to:\n\n- go well together and be used alongside each other in any application.\n- adhere to [WCAG 2.0](https://www.w3.org/TR/WCAG20/) standards, and therefore are\n  highly accessible to visually impaired and color blind users.\n\n@react-docs CoreColorsPalette\n\nStyleguide colors.core\n*/\n/*\nExtended colors\n\nExtended colors should typically be reserved for data visualizations: any time\nyou need to represent data of some sort, you can use these.\nThese colors are less strict on [WCAG 2.0](https://www.w3.org/TR/WCAG20/)\naccessibility standards and should therefore not be used for typical user\ninterface design — take a look at [core colors](#colors.core) instead.\n\n@react-docs ExtendedColorsPalette\n\nStyleguide colors.extended\n*/\n/*\nColor aliases\n\nThese variables are semantic aliases of our [colors](#colors). They are used throughout Blueprint\nitself to ensure consistent color usage across components.\n\n<table class=pt-table>\n  <thead>\n    <tr>\n      <th></th>\n      <th>Variable</th>\n      <th>Description</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-intent-primary\"></div></td>\n      <td><code>$pt-intent-primary</code></td>\n      <td>Primary intent color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-intent-success\"></div></td>\n      <td><code>$pt-intent-success</code></td>\n      <td>Success intent color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-intent-warning\"></div></td>\n      <td><code>$pt-intent-warning</code></td>\n      <td>Warning intent color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-intent-danger\"></div></td>\n      <td><code>$pt-intent-danger</code></td>\n      <td>Danger intent color</td>\n    </tr>\n\n    <tr>\n      <td><div class=\"docs-color-bubble alias-app-background-color\"></div></td>\n      <td><code>$pt-app-background-color</code></td>\n      <td>Application background color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-app-background-color\"></div></td>\n      <td><code>$pt-dark-app-background-color</code></td>\n      <td>Dark theme application background color</td>\n    </tr>\n\n    <tr>\n      <td><div class=\"docs-color-bubble alias-text-color\"></div></td>\n      <td><code>$pt-text-color</code></td>\n      <td>Default text color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-text-color-muted\"></div></td>\n      <td><code>$pt-text-color-muted</code></td>\n      <td>Muted text color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-text-color-disabled\"></div></td>\n      <td><code>$pt-text-color-disabled</code></td>\n      <td>Disabled text color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-heading-color\"></div></td>\n      <td><code>$pt-heading-color</code></td>\n      <td>Text color for headers</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-link-color\"></div></td>\n      <td><code>$pt-link-color</code></td>\n      <td>Text color for links</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-text-color\"></div></td>\n      <td><code>$pt-dark-text-color</code></td>\n      <td>Dark theme default text color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-text-color-muted\"></div></td>\n      <td><code>$pt-dark-text-color-muted</code></td>\n      <td>Dark theme muted text color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-text-color-disabled\"></div></td>\n      <td><code>$pt-dark-text-color-disabled</code></td>\n      <td>Dark theme disabled text color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-heading-color\"></div></td>\n      <td><code>$pt-dark-heading-color</code></td>\n      <td>Dark theme text color for headers</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-link-color\"></div></td>\n      <td><code>$pt-dark-link-color</code></td>\n      <td>Dark theme text color for links</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-text-selection-color\"></div></td>\n      <td><code>$pt-text-selection-color</code></td>\n      <td>Text selection color</td>\n    </tr>\n\n    <tr>\n      <td><div class=\"docs-color-bubble alias-icon-color\"></div></td>\n      <td><code>$pt-icon-color</code></td>\n      <td>Default icon color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-icon-color-hover\"></div></td>\n      <td><code>$pt-icon-color-hover</code></td>\n      <td>Hovered icon color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-icon-color-disabled\"></div></td>\n      <td><code>$pt-icon-color-disabled</code></td>\n      <td>Disabled icon color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-icon-color-selected\"></div></td>\n      <td><code>$pt-icon-color-selected</code></td>\n      <td>Selected icon color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-icon-color\"></div></td>\n      <td><code>$pt-dark-icon-color</code></td>\n      <td>Dark theme default icon color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-icon-color-hover\"></div></td>\n      <td><code>$pt-dark-icon-color-hover</code></td>\n      <td>Dark theme hovered icon color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-icon-color-disabled\"></div></td>\n      <td><code>$pt-dark-icon-color-disabled</code></td>\n      <td>Dark theme disabled icon color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-icon-color-selected\"></div></td>\n      <td><code>$pt-dark-icon-color-selected</code></td>\n      <td>Dark theme selected icon color</td>\n    </tr>\n\n    <tr>\n      <td><div class=\"docs-color-bubble alias-divider-black\"></div></td>\n      <td><code>$pt-divider-black</code></td>\n      <td>Black divider color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-divider-black\"></div></td>\n      <td><code>$pt-dark-divider-black</code></td>\n      <td>Dark theme black divider color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-divider-white\"></div></td>\n      <td><code>$pt-dark-divider-white</code></td>\n      <td>Dark theme white divider color</td>\n    </tr>\n\n    <tr>\n      <td><div class=\"docs-color-bubble alias-code-text-color\"></div></td>\n      <td><code>$pt-code-text-color</code></td>\n      <td>Code text color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-code-background-color\"></div></td>\n      <td><code>$pt-code-background-color</code></td>\n      <td>Code background color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-code-text-color\"></div></td>\n      <td><code>$pt-dark-code-text-color</code></td>\n      <td>Dark theme code text color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-code-background-color\"></div></td>\n      <td><code>$pt-dark-code-background-color</code></td>\n      <td>Dark theme code background color</td>\n    </tr>\n  </tbody>\n</table>\n\nStyleguide variables.colors\n*/\n/*\nColor schemes\n\nUse the following color scheme generators to produce color schemes for your data visualizations.\nFirst, choose the kind of scheme based on the type of your data, then customize the number of values\nusing the forms below. Finally, copy the colors array into your application and make it live!\n\nThe following schemes have been carefully crafted to be visually striking and easily understandable\nwhile remaining accessible to visually impaired and color blind users.\n\nStyleguide colors.schemes\n*/\n/*\nSequential color schemes\n\nSequential color schemes imply order and are best suited for representing data that\nranges from low-to-high values either on an ordinal or on a numerical scale.\n\nWeight: -1\n\n@react-docs SequentialSchemePalette\n\nStyleguide colors.schemes.sequential\n*/\n/*\nDiverging color schemes\n\nDiverging color schemes put equal emphasis on mid-range values and extremes\nat both ends of the data range.\n\n@react-docs DivergingSchemePalette\n\nStyleguide colors.schemes.diverging\n*/\n/*\nQualitative color schemes\n\nQualitative color schemes use a series of unrelated colors to create a\nscheme that does not imply order, merely difference in kind.\n\n@react-docs QualitativeSchemePalette\n\nStyleguide colors.schemes.qualitative\n*/\n/*\nVariables\n\nAvailable for use with Sass and Less.\n\n```css.scss\n@import \"path/to/@blueprintjs/core/dist/variables\";\n```\n\nThe Sass `$` convention is used in this documentation for consistency with the original source code.\nEvery variable mentioned below is also available in `variables.less` with an `@` prefix instead of `$`.\n\nWeight: 4\n\nStyleguide variables\n*/\n/*\nFont variables\n\nTypically, correct typography styles should be achieved by using the proper HTML tag (`<p>` for\ntext, `<h*>` for headings, `<code>` for code, etc.). The following variables are provided for the\nrare cases where custom styling is necessary and should be used sparingly:\n\n- `$pt-font-family`\n- `$pt-font-family-monospace`\n- `$pt-font-size`\n- `$pt-font-size-small`\n- `$pt-font-size-large`\n- `$pt-line-height`\n\nSee the [Fonts section](#typography.fonts) for more information and usage guidelines.\n\nStyleguide variables.fonts\n*/\n/*\nIcon variables\n\nMost icons should be displayed using the `span.pt-icon-*` classes or via modifier classes on\ncomponents like `.pt-button`. In rare cases, you may need direct access to the content\nstring that generates each icon in the icon font. Blueprint provides these variables with\nstraightforward names (see the [Icons section](#icons) for the full list of identifiers):\n\n- `$pt-icon-style`\n- `$pt-icon-align-left`\n- `$pt-icon-align-center`\n- ...\n\nVariables are also provided for the two icon font families and their pixel sizes:\n\n- `@icons16-family`\n- `@icons20-family`\n- `$pt-icon-size-standard`\n- `$pt-icon-size-large`\n\nStyleguide variables.icons\n*/\n/*\nGrids & dimensions\n\nSizes of common components. Most sizing variables are based on `$pt-grid-size`, which has\na value of `10px`. Custom components should adhere to the relevant `height` variable.\n\n- `$pt-grid-size`\n- `$pt-border-radius`\n- `$pt-button-height`\n- `$pt-button-height-large`\n- `$pt-input-height`\n- `$pt-input-height-large`\n- `$pt-navbar-height`\n\nWeight: 1\n\nStyleguide variables.dimensions\n*/\n/*\nGrid system\n\nBlueprint doesn't provide a grid system. In general, you should try to use the `$pt-grid-size`\nvariable to generate layout & sizing style rules in your CSS codebase.\n\nIn lieu of a full grid system, you should try to use the __CSS flexible box layout model__ (a.k.a.\n\"flexbox\"). It's quite powerful on its own and allows you to build robust, responsive layouts\nwithout writing much CSS. Here are some resources for learning flexbox:\n   - [MDN guide](https://developer.mozilla.org/en-US/docs/Web/Guide/CSS/Flexible_boxes)\n   - [CSS Tricks guide](https://css-tricks.com/snippets/css/a-guide-to-flexbox/)\n\nStyleguide variables.dimensions.grid\n*/\n/*\nLayering\n\nBlueprint provides variables for three z-index layers. This should be enough for most use cases,\nespecially if you make correct use of [stacking context][MDN]. [Overlay](#components.overlay)\ncomponents such as dialogs and popovers use these z-index values to configure their stacking\ncontexts.\n\n- `$pt-z-index-base`\n- `$pt-z-index-content`\n- `$pt-z-index-overlay`\n\n[MDN]: https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Positioning/Understanding_z_index/The_stacking_context\n\nWeight: 1\n\nStyleguide variables.layering\n*/\n/*\nLight theme styles\n\nUse these when you need to build custom UI components that look similar to Blueprint's\nlight theme components.\n\n- `$pt-dialog-box-shadow`\n- `$pt-input-box-shadow`\n- `$pt-popover-box-shadow`\n- `$pt-tooltip-box-shadow`\n\nWeight: 2\n\nStyleguide variables.light\n*/\n/*\nDark theme styles\n\nUse these when you need to build custom UI components that look similar to Blueprint's\ndark theme components.\n\n- `$pt-dark-dialog-box-shadow`\n- `$pt-dark-input-box-shadow`\n- `$pt-dark-popover-box-shadow`\n- `$pt-dark-tooltip-box-shadow`\n\nWeight: 3\n\nStyleguide variables.dark\n*/\n/*\nColors\n\nHex values for these colors can be accessed in JavaScript. The global version of the module exposes\nthe `Blueprint.Colors` object. In CommonJS, you may `import { Colors } from \"@blueprintjs/core\"`.\n\nStyleguide colors\n*/\n/*\nGray scale\n\nBlack, white and everything in between. The gray scale should be used for\nthe main UI frame: containers, headers, sections, boxes, etc.\nIf you need to call attention to a particular element (buttons, icons, tooltips, etc.),\nuse one of the [core colors](#colors.core).\n\n@react-docs GrayscalePalette\n\nWeight: -1\n\nStyleguide colors.grays\n*/\n/*\nCore colors\n\nCore colors are reserved for user interface design. Use these to help call\nattention to specific UI elements, such as buttons, callouts, icons, etc.\nEach core color is mapped to what we call a __visual intent__. We use intents\nto convey the status of UI elements:\n\n- _Blue_ (intent: primary) elevates elements from the typical gray scale UI frame.\n- _Green_ (intent: success) indicates successful operations.\n- _Orange_ (intent: warning) indicates warnings and intermediate states.\n- _Red_ (intent: danger) indicates errors and potentially destructive operations.\n\nCore colors are also designed to:\n\n- go well together and be used alongside each other in any application.\n- adhere to [WCAG 2.0](https://www.w3.org/TR/WCAG20/) standards, and therefore are\n  highly accessible to visually impaired and color blind users.\n\n@react-docs CoreColorsPalette\n\nStyleguide colors.core\n*/\n/*\nExtended colors\n\nExtended colors should typically be reserved for data visualizations: any time\nyou need to represent data of some sort, you can use these.\nThese colors are less strict on [WCAG 2.0](https://www.w3.org/TR/WCAG20/)\naccessibility standards and should therefore not be used for typical user\ninterface design — take a look at [core colors](#colors.core) instead.\n\n@react-docs ExtendedColorsPalette\n\nStyleguide colors.extended\n*/\n/*\nColor aliases\n\nThese variables are semantic aliases of our [colors](#colors). They are used throughout Blueprint\nitself to ensure consistent color usage across components.\n\n<table class=pt-table>\n  <thead>\n    <tr>\n      <th></th>\n      <th>Variable</th>\n      <th>Description</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-intent-primary\"></div></td>\n      <td><code>$pt-intent-primary</code></td>\n      <td>Primary intent color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-intent-success\"></div></td>\n      <td><code>$pt-intent-success</code></td>\n      <td>Success intent color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-intent-warning\"></div></td>\n      <td><code>$pt-intent-warning</code></td>\n      <td>Warning intent color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-intent-danger\"></div></td>\n      <td><code>$pt-intent-danger</code></td>\n      <td>Danger intent color</td>\n    </tr>\n\n    <tr>\n      <td><div class=\"docs-color-bubble alias-app-background-color\"></div></td>\n      <td><code>$pt-app-background-color</code></td>\n      <td>Application background color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-app-background-color\"></div></td>\n      <td><code>$pt-dark-app-background-color</code></td>\n      <td>Dark theme application background color</td>\n    </tr>\n\n    <tr>\n      <td><div class=\"docs-color-bubble alias-text-color\"></div></td>\n      <td><code>$pt-text-color</code></td>\n      <td>Default text color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-text-color-muted\"></div></td>\n      <td><code>$pt-text-color-muted</code></td>\n      <td>Muted text color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-text-color-disabled\"></div></td>\n      <td><code>$pt-text-color-disabled</code></td>\n      <td>Disabled text color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-heading-color\"></div></td>\n      <td><code>$pt-heading-color</code></td>\n      <td>Text color for headers</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-link-color\"></div></td>\n      <td><code>$pt-link-color</code></td>\n      <td>Text color for links</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-text-color\"></div></td>\n      <td><code>$pt-dark-text-color</code></td>\n      <td>Dark theme default text color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-text-color-muted\"></div></td>\n      <td><code>$pt-dark-text-color-muted</code></td>\n      <td>Dark theme muted text color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-text-color-disabled\"></div></td>\n      <td><code>$pt-dark-text-color-disabled</code></td>\n      <td>Dark theme disabled text color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-heading-color\"></div></td>\n      <td><code>$pt-dark-heading-color</code></td>\n      <td>Dark theme text color for headers</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-link-color\"></div></td>\n      <td><code>$pt-dark-link-color</code></td>\n      <td>Dark theme text color for links</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-text-selection-color\"></div></td>\n      <td><code>$pt-text-selection-color</code></td>\n      <td>Text selection color</td>\n    </tr>\n\n    <tr>\n      <td><div class=\"docs-color-bubble alias-icon-color\"></div></td>\n      <td><code>$pt-icon-color</code></td>\n      <td>Default icon color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-icon-color-hover\"></div></td>\n      <td><code>$pt-icon-color-hover</code></td>\n      <td>Hovered icon color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-icon-color-disabled\"></div></td>\n      <td><code>$pt-icon-color-disabled</code></td>\n      <td>Disabled icon color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-icon-color-selected\"></div></td>\n      <td><code>$pt-icon-color-selected</code></td>\n      <td>Selected icon color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-icon-color\"></div></td>\n      <td><code>$pt-dark-icon-color</code></td>\n      <td>Dark theme default icon color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-icon-color-hover\"></div></td>\n      <td><code>$pt-dark-icon-color-hover</code></td>\n      <td>Dark theme hovered icon color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-icon-color-disabled\"></div></td>\n      <td><code>$pt-dark-icon-color-disabled</code></td>\n      <td>Dark theme disabled icon color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-icon-color-selected\"></div></td>\n      <td><code>$pt-dark-icon-color-selected</code></td>\n      <td>Dark theme selected icon color</td>\n    </tr>\n\n    <tr>\n      <td><div class=\"docs-color-bubble alias-divider-black\"></div></td>\n      <td><code>$pt-divider-black</code></td>\n      <td>Black divider color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-divider-black\"></div></td>\n      <td><code>$pt-dark-divider-black</code></td>\n      <td>Dark theme black divider color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-divider-white\"></div></td>\n      <td><code>$pt-dark-divider-white</code></td>\n      <td>Dark theme white divider color</td>\n    </tr>\n\n    <tr>\n      <td><div class=\"docs-color-bubble alias-code-text-color\"></div></td>\n      <td><code>$pt-code-text-color</code></td>\n      <td>Code text color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-code-background-color\"></div></td>\n      <td><code>$pt-code-background-color</code></td>\n      <td>Code background color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-code-text-color\"></div></td>\n      <td><code>$pt-dark-code-text-color</code></td>\n      <td>Dark theme code text color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-code-background-color\"></div></td>\n      <td><code>$pt-dark-code-background-color</code></td>\n      <td>Dark theme code background color</td>\n    </tr>\n  </tbody>\n</table>\n\nStyleguide variables.colors\n*/\n/*\nColor schemes\n\nUse the following color scheme generators to produce color schemes for your data visualizations.\nFirst, choose the kind of scheme based on the type of your data, then customize the number of values\nusing the forms below. Finally, copy the colors array into your application and make it live!\n\nThe following schemes have been carefully crafted to be visually striking and easily understandable\nwhile remaining accessible to visually impaired and color blind users.\n\nStyleguide colors.schemes\n*/\n/*\nSequential color schemes\n\nSequential color schemes imply order and are best suited for representing data that\nranges from low-to-high values either on an ordinal or on a numerical scale.\n\nWeight: -1\n\n@react-docs SequentialSchemePalette\n\nStyleguide colors.schemes.sequential\n*/\n/*\nDiverging color schemes\n\nDiverging color schemes put equal emphasis on mid-range values and extremes\nat both ends of the data range.\n\n@react-docs DivergingSchemePalette\n\nStyleguide colors.schemes.diverging\n*/\n/*\nQualitative color schemes\n\nQualitative color schemes use a series of unrelated colors to create a\nscheme that does not imply order, merely difference in kind.\n\n@react-docs QualitativeSchemePalette\n\nStyleguide colors.schemes.qualitative\n*/\n/*\nColors\n\nHex values for these colors can be accessed in JavaScript. The global version of the module exposes\nthe `Blueprint.Colors` object. In CommonJS, you may `import { Colors } from \"@blueprintjs/core\"`.\n\nStyleguide colors\n*/\n/*\nGray scale\n\nBlack, white and everything in between. The gray scale should be used for\nthe main UI frame: containers, headers, sections, boxes, etc.\nIf you need to call attention to a particular element (buttons, icons, tooltips, etc.),\nuse one of the [core colors](#colors.core).\n\n@react-docs GrayscalePalette\n\nWeight: -1\n\nStyleguide colors.grays\n*/\n/*\nCore colors\n\nCore colors are reserved for user interface design. Use these to help call\nattention to specific UI elements, such as buttons, callouts, icons, etc.\nEach core color is mapped to what we call a __visual intent__. We use intents\nto convey the status of UI elements:\n\n- _Blue_ (intent: primary) elevates elements from the typical gray scale UI frame.\n- _Green_ (intent: success) indicates successful operations.\n- _Orange_ (intent: warning) indicates warnings and intermediate states.\n- _Red_ (intent: danger) indicates errors and potentially destructive operations.\n\nCore colors are also designed to:\n\n- go well together and be used alongside each other in any application.\n- adhere to [WCAG 2.0](https://www.w3.org/TR/WCAG20/) standards, and therefore are\n  highly accessible to visually impaired and color blind users.\n\n@react-docs CoreColorsPalette\n\nStyleguide colors.core\n*/\n/*\nExtended colors\n\nExtended colors should typically be reserved for data visualizations: any time\nyou need to represent data of some sort, you can use these.\nThese colors are less strict on [WCAG 2.0](https://www.w3.org/TR/WCAG20/)\naccessibility standards and should therefore not be used for typical user\ninterface design — take a look at [core colors](#colors.core) instead.\n\n@react-docs ExtendedColorsPalette\n\nStyleguide colors.extended\n*/\n/*\nColor aliases\n\nThese variables are semantic aliases of our [colors](#colors). They are used throughout Blueprint\nitself to ensure consistent color usage across components.\n\n<table class=pt-table>\n  <thead>\n    <tr>\n      <th></th>\n      <th>Variable</th>\n      <th>Description</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-intent-primary\"></div></td>\n      <td><code>$pt-intent-primary</code></td>\n      <td>Primary intent color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-intent-success\"></div></td>\n      <td><code>$pt-intent-success</code></td>\n      <td>Success intent color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-intent-warning\"></div></td>\n      <td><code>$pt-intent-warning</code></td>\n      <td>Warning intent color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-intent-danger\"></div></td>\n      <td><code>$pt-intent-danger</code></td>\n      <td>Danger intent color</td>\n    </tr>\n\n    <tr>\n      <td><div class=\"docs-color-bubble alias-app-background-color\"></div></td>\n      <td><code>$pt-app-background-color</code></td>\n      <td>Application background color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-app-background-color\"></div></td>\n      <td><code>$pt-dark-app-background-color</code></td>\n      <td>Dark theme application background color</td>\n    </tr>\n\n    <tr>\n      <td><div class=\"docs-color-bubble alias-text-color\"></div></td>\n      <td><code>$pt-text-color</code></td>\n      <td>Default text color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-text-color-muted\"></div></td>\n      <td><code>$pt-text-color-muted</code></td>\n      <td>Muted text color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-text-color-disabled\"></div></td>\n      <td><code>$pt-text-color-disabled</code></td>\n      <td>Disabled text color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-heading-color\"></div></td>\n      <td><code>$pt-heading-color</code></td>\n      <td>Text color for headers</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-link-color\"></div></td>\n      <td><code>$pt-link-color</code></td>\n      <td>Text color for links</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-text-color\"></div></td>\n      <td><code>$pt-dark-text-color</code></td>\n      <td>Dark theme default text color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-text-color-muted\"></div></td>\n      <td><code>$pt-dark-text-color-muted</code></td>\n      <td>Dark theme muted text color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-text-color-disabled\"></div></td>\n      <td><code>$pt-dark-text-color-disabled</code></td>\n      <td>Dark theme disabled text color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-heading-color\"></div></td>\n      <td><code>$pt-dark-heading-color</code></td>\n      <td>Dark theme text color for headers</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-link-color\"></div></td>\n      <td><code>$pt-dark-link-color</code></td>\n      <td>Dark theme text color for links</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-text-selection-color\"></div></td>\n      <td><code>$pt-text-selection-color</code></td>\n      <td>Text selection color</td>\n    </tr>\n\n    <tr>\n      <td><div class=\"docs-color-bubble alias-icon-color\"></div></td>\n      <td><code>$pt-icon-color</code></td>\n      <td>Default icon color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-icon-color-hover\"></div></td>\n      <td><code>$pt-icon-color-hover</code></td>\n      <td>Hovered icon color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-icon-color-disabled\"></div></td>\n      <td><code>$pt-icon-color-disabled</code></td>\n      <td>Disabled icon color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-icon-color-selected\"></div></td>\n      <td><code>$pt-icon-color-selected</code></td>\n      <td>Selected icon color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-icon-color\"></div></td>\n      <td><code>$pt-dark-icon-color</code></td>\n      <td>Dark theme default icon color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-icon-color-hover\"></div></td>\n      <td><code>$pt-dark-icon-color-hover</code></td>\n      <td>Dark theme hovered icon color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-icon-color-disabled\"></div></td>\n      <td><code>$pt-dark-icon-color-disabled</code></td>\n      <td>Dark theme disabled icon color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-icon-color-selected\"></div></td>\n      <td><code>$pt-dark-icon-color-selected</code></td>\n      <td>Dark theme selected icon color</td>\n    </tr>\n\n    <tr>\n      <td><div class=\"docs-color-bubble alias-divider-black\"></div></td>\n      <td><code>$pt-divider-black</code></td>\n      <td>Black divider color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-divider-black\"></div></td>\n      <td><code>$pt-dark-divider-black</code></td>\n      <td>Dark theme black divider color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-divider-white\"></div></td>\n      <td><code>$pt-dark-divider-white</code></td>\n      <td>Dark theme white divider color</td>\n    </tr>\n\n    <tr>\n      <td><div class=\"docs-color-bubble alias-code-text-color\"></div></td>\n      <td><code>$pt-code-text-color</code></td>\n      <td>Code text color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-code-background-color\"></div></td>\n      <td><code>$pt-code-background-color</code></td>\n      <td>Code background color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-code-text-color\"></div></td>\n      <td><code>$pt-dark-code-text-color</code></td>\n      <td>Dark theme code text color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-code-background-color\"></div></td>\n      <td><code>$pt-dark-code-background-color</code></td>\n      <td>Dark theme code background color</td>\n    </tr>\n  </tbody>\n</table>\n\nStyleguide variables.colors\n*/\n/*\nColor schemes\n\nUse the following color scheme generators to produce color schemes for your data visualizations.\nFirst, choose the kind of scheme based on the type of your data, then customize the number of values\nusing the forms below. Finally, copy the colors array into your application and make it live!\n\nThe following schemes have been carefully crafted to be visually striking and easily understandable\nwhile remaining accessible to visually impaired and color blind users.\n\nStyleguide colors.schemes\n*/\n/*\nSequential color schemes\n\nSequential color schemes imply order and are best suited for representing data that\nranges from low-to-high values either on an ordinal or on a numerical scale.\n\nWeight: -1\n\n@react-docs SequentialSchemePalette\n\nStyleguide colors.schemes.sequential\n*/\n/*\nDiverging color schemes\n\nDiverging color schemes put equal emphasis on mid-range values and extremes\nat both ends of the data range.\n\n@react-docs DivergingSchemePalette\n\nStyleguide colors.schemes.diverging\n*/\n/*\nQualitative color schemes\n\nQualitative color schemes use a series of unrelated colors to create a\nscheme that does not imply order, merely difference in kind.\n\n@react-docs QualitativeSchemePalette\n\nStyleguide colors.schemes.qualitative\n*/\n/*\nVariables\n\nAvailable for use with Sass and Less.\n\n```css.scss\n@import \"path/to/@blueprintjs/core/dist/variables\";\n```\n\nThe Sass `$` convention is used in this documentation for consistency with the original source code.\nEvery variable mentioned below is also available in `variables.less` with an `@` prefix instead of `$`.\n\nWeight: 4\n\nStyleguide variables\n*/\n/*\nFont variables\n\nTypically, correct typography styles should be achieved by using the proper HTML tag (`<p>` for\ntext, `<h*>` for headings, `<code>` for code, etc.). The following variables are provided for the\nrare cases where custom styling is necessary and should be used sparingly:\n\n- `$pt-font-family`\n- `$pt-font-family-monospace`\n- `$pt-font-size`\n- `$pt-font-size-small`\n- `$pt-font-size-large`\n- `$pt-line-height`\n\nSee the [Fonts section](#typography.fonts) for more information and usage guidelines.\n\nStyleguide variables.fonts\n*/\n/*\nIcon variables\n\nMost icons should be displayed using the `span.pt-icon-*` classes or via modifier classes on\ncomponents like `.pt-button`. In rare cases, you may need direct access to the content\nstring that generates each icon in the icon font. Blueprint provides these variables with\nstraightforward names (see the [Icons section](#icons) for the full list of identifiers):\n\n- `$pt-icon-style`\n- `$pt-icon-align-left`\n- `$pt-icon-align-center`\n- ...\n\nVariables are also provided for the two icon font families and their pixel sizes:\n\n- `@icons16-family`\n- `@icons20-family`\n- `$pt-icon-size-standard`\n- `$pt-icon-size-large`\n\nStyleguide variables.icons\n*/\n/*\nGrids & dimensions\n\nSizes of common components. Most sizing variables are based on `$pt-grid-size`, which has\na value of `10px`. Custom components should adhere to the relevant `height` variable.\n\n- `$pt-grid-size`\n- `$pt-border-radius`\n- `$pt-button-height`\n- `$pt-button-height-large`\n- `$pt-input-height`\n- `$pt-input-height-large`\n- `$pt-navbar-height`\n\nWeight: 1\n\nStyleguide variables.dimensions\n*/\n/*\nGrid system\n\nBlueprint doesn't provide a grid system. In general, you should try to use the `$pt-grid-size`\nvariable to generate layout & sizing style rules in your CSS codebase.\n\nIn lieu of a full grid system, you should try to use the __CSS flexible box layout model__ (a.k.a.\n\"flexbox\"). It's quite powerful on its own and allows you to build robust, responsive layouts\nwithout writing much CSS. Here are some resources for learning flexbox:\n   - [MDN guide](https://developer.mozilla.org/en-US/docs/Web/Guide/CSS/Flexible_boxes)\n   - [CSS Tricks guide](https://css-tricks.com/snippets/css/a-guide-to-flexbox/)\n\nStyleguide variables.dimensions.grid\n*/\n/*\nLayering\n\nBlueprint provides variables for three z-index layers. This should be enough for most use cases,\nespecially if you make correct use of [stacking context][MDN]. [Overlay](#components.overlay)\ncomponents such as dialogs and popovers use these z-index values to configure their stacking\ncontexts.\n\n- `$pt-z-index-base`\n- `$pt-z-index-content`\n- `$pt-z-index-overlay`\n\n[MDN]: https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Positioning/Understanding_z_index/The_stacking_context\n\nWeight: 1\n\nStyleguide variables.layering\n*/\n/*\nLight theme styles\n\nUse these when you need to build custom UI components that look similar to Blueprint's\nlight theme components.\n\n- `$pt-dialog-box-shadow`\n- `$pt-input-box-shadow`\n- `$pt-popover-box-shadow`\n- `$pt-tooltip-box-shadow`\n\nWeight: 2\n\nStyleguide variables.light\n*/\n/*\nDark theme styles\n\nUse these when you need to build custom UI components that look similar to Blueprint's\ndark theme components.\n\n- `$pt-dark-dialog-box-shadow`\n- `$pt-dark-input-box-shadow`\n- `$pt-dark-popover-box-shadow`\n- `$pt-dark-tooltip-box-shadow`\n\nWeight: 3\n\nStyleguide variables.dark\n*/\n/*\nColors\n\nHex values for these colors can be accessed in JavaScript. The global version of the module exposes\nthe `Blueprint.Colors` object. In CommonJS, you may `import { Colors } from \"@blueprintjs/core\"`.\n\nStyleguide colors\n*/\n/*\nGray scale\n\nBlack, white and everything in between. The gray scale should be used for\nthe main UI frame: containers, headers, sections, boxes, etc.\nIf you need to call attention to a particular element (buttons, icons, tooltips, etc.),\nuse one of the [core colors](#colors.core).\n\n@react-docs GrayscalePalette\n\nWeight: -1\n\nStyleguide colors.grays\n*/\n/*\nCore colors\n\nCore colors are reserved for user interface design. Use these to help call\nattention to specific UI elements, such as buttons, callouts, icons, etc.\nEach core color is mapped to what we call a __visual intent__. We use intents\nto convey the status of UI elements:\n\n- _Blue_ (intent: primary) elevates elements from the typical gray scale UI frame.\n- _Green_ (intent: success) indicates successful operations.\n- _Orange_ (intent: warning) indicates warnings and intermediate states.\n- _Red_ (intent: danger) indicates errors and potentially destructive operations.\n\nCore colors are also designed to:\n\n- go well together and be used alongside each other in any application.\n- adhere to [WCAG 2.0](https://www.w3.org/TR/WCAG20/) standards, and therefore are\n  highly accessible to visually impaired and color blind users.\n\n@react-docs CoreColorsPalette\n\nStyleguide colors.core\n*/\n/*\nExtended colors\n\nExtended colors should typically be reserved for data visualizations: any time\nyou need to represent data of some sort, you can use these.\nThese colors are less strict on [WCAG 2.0](https://www.w3.org/TR/WCAG20/)\naccessibility standards and should therefore not be used for typical user\ninterface design — take a look at [core colors](#colors.core) instead.\n\n@react-docs ExtendedColorsPalette\n\nStyleguide colors.extended\n*/\n/*\nColor aliases\n\nThese variables are semantic aliases of our [colors](#colors). They are used throughout Blueprint\nitself to ensure consistent color usage across components.\n\n<table class=pt-table>\n  <thead>\n    <tr>\n      <th></th>\n      <th>Variable</th>\n      <th>Description</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-intent-primary\"></div></td>\n      <td><code>$pt-intent-primary</code></td>\n      <td>Primary intent color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-intent-success\"></div></td>\n      <td><code>$pt-intent-success</code></td>\n      <td>Success intent color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-intent-warning\"></div></td>\n      <td><code>$pt-intent-warning</code></td>\n      <td>Warning intent color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-intent-danger\"></div></td>\n      <td><code>$pt-intent-danger</code></td>\n      <td>Danger intent color</td>\n    </tr>\n\n    <tr>\n      <td><div class=\"docs-color-bubble alias-app-background-color\"></div></td>\n      <td><code>$pt-app-background-color</code></td>\n      <td>Application background color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-app-background-color\"></div></td>\n      <td><code>$pt-dark-app-background-color</code></td>\n      <td>Dark theme application background color</td>\n    </tr>\n\n    <tr>\n      <td><div class=\"docs-color-bubble alias-text-color\"></div></td>\n      <td><code>$pt-text-color</code></td>\n      <td>Default text color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-text-color-muted\"></div></td>\n      <td><code>$pt-text-color-muted</code></td>\n      <td>Muted text color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-text-color-disabled\"></div></td>\n      <td><code>$pt-text-color-disabled</code></td>\n      <td>Disabled text color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-heading-color\"></div></td>\n      <td><code>$pt-heading-color</code></td>\n      <td>Text color for headers</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-link-color\"></div></td>\n      <td><code>$pt-link-color</code></td>\n      <td>Text color for links</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-text-color\"></div></td>\n      <td><code>$pt-dark-text-color</code></td>\n      <td>Dark theme default text color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-text-color-muted\"></div></td>\n      <td><code>$pt-dark-text-color-muted</code></td>\n      <td>Dark theme muted text color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-text-color-disabled\"></div></td>\n      <td><code>$pt-dark-text-color-disabled</code></td>\n      <td>Dark theme disabled text color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-heading-color\"></div></td>\n      <td><code>$pt-dark-heading-color</code></td>\n      <td>Dark theme text color for headers</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-link-color\"></div></td>\n      <td><code>$pt-dark-link-color</code></td>\n      <td>Dark theme text color for links</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-text-selection-color\"></div></td>\n      <td><code>$pt-text-selection-color</code></td>\n      <td>Text selection color</td>\n    </tr>\n\n    <tr>\n      <td><div class=\"docs-color-bubble alias-icon-color\"></div></td>\n      <td><code>$pt-icon-color</code></td>\n      <td>Default icon color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-icon-color-hover\"></div></td>\n      <td><code>$pt-icon-color-hover</code></td>\n      <td>Hovered icon color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-icon-color-disabled\"></div></td>\n      <td><code>$pt-icon-color-disabled</code></td>\n      <td>Disabled icon color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-icon-color-selected\"></div></td>\n      <td><code>$pt-icon-color-selected</code></td>\n      <td>Selected icon color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-icon-color\"></div></td>\n      <td><code>$pt-dark-icon-color</code></td>\n      <td>Dark theme default icon color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-icon-color-hover\"></div></td>\n      <td><code>$pt-dark-icon-color-hover</code></td>\n      <td>Dark theme hovered icon color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-icon-color-disabled\"></div></td>\n      <td><code>$pt-dark-icon-color-disabled</code></td>\n      <td>Dark theme disabled icon color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-icon-color-selected\"></div></td>\n      <td><code>$pt-dark-icon-color-selected</code></td>\n      <td>Dark theme selected icon color</td>\n    </tr>\n\n    <tr>\n      <td><div class=\"docs-color-bubble alias-divider-black\"></div></td>\n      <td><code>$pt-divider-black</code></td>\n      <td>Black divider color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-divider-black\"></div></td>\n      <td><code>$pt-dark-divider-black</code></td>\n      <td>Dark theme black divider color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-divider-white\"></div></td>\n      <td><code>$pt-dark-divider-white</code></td>\n      <td>Dark theme white divider color</td>\n    </tr>\n\n    <tr>\n      <td><div class=\"docs-color-bubble alias-code-text-color\"></div></td>\n      <td><code>$pt-code-text-color</code></td>\n      <td>Code text color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-code-background-color\"></div></td>\n      <td><code>$pt-code-background-color</code></td>\n      <td>Code background color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-code-text-color\"></div></td>\n      <td><code>$pt-dark-code-text-color</code></td>\n      <td>Dark theme code text color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-code-background-color\"></div></td>\n      <td><code>$pt-dark-code-background-color</code></td>\n      <td>Dark theme code background color</td>\n    </tr>\n  </tbody>\n</table>\n\nStyleguide variables.colors\n*/\n/*\nColor schemes\n\nUse the following color scheme generators to produce color schemes for your data visualizations.\nFirst, choose the kind of scheme based on the type of your data, then customize the number of values\nusing the forms below. Finally, copy the colors array into your application and make it live!\n\nThe following schemes have been carefully crafted to be visually striking and easily understandable\nwhile remaining accessible to visually impaired and color blind users.\n\nStyleguide colors.schemes\n*/\n/*\nSequential color schemes\n\nSequential color schemes imply order and are best suited for representing data that\nranges from low-to-high values either on an ordinal or on a numerical scale.\n\nWeight: -1\n\n@react-docs SequentialSchemePalette\n\nStyleguide colors.schemes.sequential\n*/\n/*\nDiverging color schemes\n\nDiverging color schemes put equal emphasis on mid-range values and extremes\nat both ends of the data range.\n\n@react-docs DivergingSchemePalette\n\nStyleguide colors.schemes.diverging\n*/\n/*\nQualitative color schemes\n\nQualitative color schemes use a series of unrelated colors to create a\nscheme that does not imply order, merely difference in kind.\n\n@react-docs QualitativeSchemePalette\n\nStyleguide colors.schemes.qualitative\n*/\n/*\nColors\n\nHex values for these colors can be accessed in JavaScript. The global version of the module exposes\nthe `Blueprint.Colors` object. In CommonJS, you may `import { Colors } from \"@blueprintjs/core\"`.\n\nStyleguide colors\n*/\n/*\nGray scale\n\nBlack, white and everything in between. The gray scale should be used for\nthe main UI frame: containers, headers, sections, boxes, etc.\nIf you need to call attention to a particular element (buttons, icons, tooltips, etc.),\nuse one of the [core colors](#colors.core).\n\n@react-docs GrayscalePalette\n\nWeight: -1\n\nStyleguide colors.grays\n*/\n/*\nCore colors\n\nCore colors are reserved for user interface design. Use these to help call\nattention to specific UI elements, such as buttons, callouts, icons, etc.\nEach core color is mapped to what we call a __visual intent__. We use intents\nto convey the status of UI elements:\n\n- _Blue_ (intent: primary) elevates elements from the typical gray scale UI frame.\n- _Green_ (intent: success) indicates successful operations.\n- _Orange_ (intent: warning) indicates warnings and intermediate states.\n- _Red_ (intent: danger) indicates errors and potentially destructive operations.\n\nCore colors are also designed to:\n\n- go well together and be used alongside each other in any application.\n- adhere to [WCAG 2.0](https://www.w3.org/TR/WCAG20/) standards, and therefore are\n  highly accessible to visually impaired and color blind users.\n\n@react-docs CoreColorsPalette\n\nStyleguide colors.core\n*/\n/*\nExtended colors\n\nExtended colors should typically be reserved for data visualizations: any time\nyou need to represent data of some sort, you can use these.\nThese colors are less strict on [WCAG 2.0](https://www.w3.org/TR/WCAG20/)\naccessibility standards and should therefore not be used for typical user\ninterface design — take a look at [core colors](#colors.core) instead.\n\n@react-docs ExtendedColorsPalette\n\nStyleguide colors.extended\n*/\n/*\nColor aliases\n\nThese variables are semantic aliases of our [colors](#colors). They are used throughout Blueprint\nitself to ensure consistent color usage across components.\n\n<table class=pt-table>\n  <thead>\n    <tr>\n      <th></th>\n      <th>Variable</th>\n      <th>Description</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-intent-primary\"></div></td>\n      <td><code>$pt-intent-primary</code></td>\n      <td>Primary intent color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-intent-success\"></div></td>\n      <td><code>$pt-intent-success</code></td>\n      <td>Success intent color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-intent-warning\"></div></td>\n      <td><code>$pt-intent-warning</code></td>\n      <td>Warning intent color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-intent-danger\"></div></td>\n      <td><code>$pt-intent-danger</code></td>\n      <td>Danger intent color</td>\n    </tr>\n\n    <tr>\n      <td><div class=\"docs-color-bubble alias-app-background-color\"></div></td>\n      <td><code>$pt-app-background-color</code></td>\n      <td>Application background color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-app-background-color\"></div></td>\n      <td><code>$pt-dark-app-background-color</code></td>\n      <td>Dark theme application background color</td>\n    </tr>\n\n    <tr>\n      <td><div class=\"docs-color-bubble alias-text-color\"></div></td>\n      <td><code>$pt-text-color</code></td>\n      <td>Default text color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-text-color-muted\"></div></td>\n      <td><code>$pt-text-color-muted</code></td>\n      <td>Muted text color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-text-color-disabled\"></div></td>\n      <td><code>$pt-text-color-disabled</code></td>\n      <td>Disabled text color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-heading-color\"></div></td>\n      <td><code>$pt-heading-color</code></td>\n      <td>Text color for headers</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-link-color\"></div></td>\n      <td><code>$pt-link-color</code></td>\n      <td>Text color for links</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-text-color\"></div></td>\n      <td><code>$pt-dark-text-color</code></td>\n      <td>Dark theme default text color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-text-color-muted\"></div></td>\n      <td><code>$pt-dark-text-color-muted</code></td>\n      <td>Dark theme muted text color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-text-color-disabled\"></div></td>\n      <td><code>$pt-dark-text-color-disabled</code></td>\n      <td>Dark theme disabled text color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-heading-color\"></div></td>\n      <td><code>$pt-dark-heading-color</code></td>\n      <td>Dark theme text color for headers</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-link-color\"></div></td>\n      <td><code>$pt-dark-link-color</code></td>\n      <td>Dark theme text color for links</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-text-selection-color\"></div></td>\n      <td><code>$pt-text-selection-color</code></td>\n      <td>Text selection color</td>\n    </tr>\n\n    <tr>\n      <td><div class=\"docs-color-bubble alias-icon-color\"></div></td>\n      <td><code>$pt-icon-color</code></td>\n      <td>Default icon color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-icon-color-hover\"></div></td>\n      <td><code>$pt-icon-color-hover</code></td>\n      <td>Hovered icon color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-icon-color-disabled\"></div></td>\n      <td><code>$pt-icon-color-disabled</code></td>\n      <td>Disabled icon color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-icon-color-selected\"></div></td>\n      <td><code>$pt-icon-color-selected</code></td>\n      <td>Selected icon color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-icon-color\"></div></td>\n      <td><code>$pt-dark-icon-color</code></td>\n      <td>Dark theme default icon color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-icon-color-hover\"></div></td>\n      <td><code>$pt-dark-icon-color-hover</code></td>\n      <td>Dark theme hovered icon color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-icon-color-disabled\"></div></td>\n      <td><code>$pt-dark-icon-color-disabled</code></td>\n      <td>Dark theme disabled icon color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-icon-color-selected\"></div></td>\n      <td><code>$pt-dark-icon-color-selected</code></td>\n      <td>Dark theme selected icon color</td>\n    </tr>\n\n    <tr>\n      <td><div class=\"docs-color-bubble alias-divider-black\"></div></td>\n      <td><code>$pt-divider-black</code></td>\n      <td>Black divider color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-divider-black\"></div></td>\n      <td><code>$pt-dark-divider-black</code></td>\n      <td>Dark theme black divider color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-divider-white\"></div></td>\n      <td><code>$pt-dark-divider-white</code></td>\n      <td>Dark theme white divider color</td>\n    </tr>\n\n    <tr>\n      <td><div class=\"docs-color-bubble alias-code-text-color\"></div></td>\n      <td><code>$pt-code-text-color</code></td>\n      <td>Code text color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-code-background-color\"></div></td>\n      <td><code>$pt-code-background-color</code></td>\n      <td>Code background color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-code-text-color\"></div></td>\n      <td><code>$pt-dark-code-text-color</code></td>\n      <td>Dark theme code text color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-code-background-color\"></div></td>\n      <td><code>$pt-dark-code-background-color</code></td>\n      <td>Dark theme code background color</td>\n    </tr>\n  </tbody>\n</table>\n\nStyleguide variables.colors\n*/\n/*\nColor schemes\n\nUse the following color scheme generators to produce color schemes for your data visualizations.\nFirst, choose the kind of scheme based on the type of your data, then customize the number of values\nusing the forms below. Finally, copy the colors array into your application and make it live!\n\nThe following schemes have been carefully crafted to be visually striking and easily understandable\nwhile remaining accessible to visually impaired and color blind users.\n\nStyleguide colors.schemes\n*/\n/*\nSequential color schemes\n\nSequential color schemes imply order and are best suited for representing data that\nranges from low-to-high values either on an ordinal or on a numerical scale.\n\nWeight: -1\n\n@react-docs SequentialSchemePalette\n\nStyleguide colors.schemes.sequential\n*/\n/*\nDiverging color schemes\n\nDiverging color schemes put equal emphasis on mid-range values and extremes\nat both ends of the data range.\n\n@react-docs DivergingSchemePalette\n\nStyleguide colors.schemes.diverging\n*/\n/*\nQualitative color schemes\n\nQualitative color schemes use a series of unrelated colors to create a\nscheme that does not imply order, merely difference in kind.\n\n@react-docs QualitativeSchemePalette\n\nStyleguide colors.schemes.qualitative\n*/\n/*\nVariables\n\nAvailable for use with Sass and Less.\n\n```css.scss\n@import \"path/to/@blueprintjs/core/dist/variables\";\n```\n\nThe Sass `$` convention is used in this documentation for consistency with the original source code.\nEvery variable mentioned below is also available in `variables.less` with an `@` prefix instead of `$`.\n\nWeight: 4\n\nStyleguide variables\n*/\n/*\nFont variables\n\nTypically, correct typography styles should be achieved by using the proper HTML tag (`<p>` for\ntext, `<h*>` for headings, `<code>` for code, etc.). The following variables are provided for the\nrare cases where custom styling is necessary and should be used sparingly:\n\n- `$pt-font-family`\n- `$pt-font-family-monospace`\n- `$pt-font-size`\n- `$pt-font-size-small`\n- `$pt-font-size-large`\n- `$pt-line-height`\n\nSee the [Fonts section](#typography.fonts) for more information and usage guidelines.\n\nStyleguide variables.fonts\n*/\n/*\nIcon variables\n\nMost icons should be displayed using the `span.pt-icon-*` classes or via modifier classes on\ncomponents like `.pt-button`. In rare cases, you may need direct access to the content\nstring that generates each icon in the icon font. Blueprint provides these variables with\nstraightforward names (see the [Icons section](#icons) for the full list of identifiers):\n\n- `$pt-icon-style`\n- `$pt-icon-align-left`\n- `$pt-icon-align-center`\n- ...\n\nVariables are also provided for the two icon font families and their pixel sizes:\n\n- `@icons16-family`\n- `@icons20-family`\n- `$pt-icon-size-standard`\n- `$pt-icon-size-large`\n\nStyleguide variables.icons\n*/\n/*\nGrids & dimensions\n\nSizes of common components. Most sizing variables are based on `$pt-grid-size`, which has\na value of `10px`. Custom components should adhere to the relevant `height` variable.\n\n- `$pt-grid-size`\n- `$pt-border-radius`\n- `$pt-button-height`\n- `$pt-button-height-large`\n- `$pt-input-height`\n- `$pt-input-height-large`\n- `$pt-navbar-height`\n\nWeight: 1\n\nStyleguide variables.dimensions\n*/\n/*\nGrid system\n\nBlueprint doesn't provide a grid system. In general, you should try to use the `$pt-grid-size`\nvariable to generate layout & sizing style rules in your CSS codebase.\n\nIn lieu of a full grid system, you should try to use the __CSS flexible box layout model__ (a.k.a.\n\"flexbox\"). It's quite powerful on its own and allows you to build robust, responsive layouts\nwithout writing much CSS. Here are some resources for learning flexbox:\n   - [MDN guide](https://developer.mozilla.org/en-US/docs/Web/Guide/CSS/Flexible_boxes)\n   - [CSS Tricks guide](https://css-tricks.com/snippets/css/a-guide-to-flexbox/)\n\nStyleguide variables.dimensions.grid\n*/\n/*\nLayering\n\nBlueprint provides variables for three z-index layers. This should be enough for most use cases,\nespecially if you make correct use of [stacking context][MDN]. [Overlay](#components.overlay)\ncomponents such as dialogs and popovers use these z-index values to configure their stacking\ncontexts.\n\n- `$pt-z-index-base`\n- `$pt-z-index-content`\n- `$pt-z-index-overlay`\n\n[MDN]: https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Positioning/Understanding_z_index/The_stacking_context\n\nWeight: 1\n\nStyleguide variables.layering\n*/\n/*\nLight theme styles\n\nUse these when you need to build custom UI components that look similar to Blueprint's\nlight theme components.\n\n- `$pt-dialog-box-shadow`\n- `$pt-input-box-shadow`\n- `$pt-popover-box-shadow`\n- `$pt-tooltip-box-shadow`\n\nWeight: 2\n\nStyleguide variables.light\n*/\n/*\nDark theme styles\n\nUse these when you need to build custom UI components that look similar to Blueprint's\ndark theme components.\n\n- `$pt-dark-dialog-box-shadow`\n- `$pt-dark-input-box-shadow`\n- `$pt-dark-popover-box-shadow`\n- `$pt-dark-tooltip-box-shadow`\n\nWeight: 3\n\nStyleguide variables.dark\n*/\n/*\nColors\n\nHex values for these colors can be accessed in JavaScript. The global version of the module exposes\nthe `Blueprint.Colors` object. In CommonJS, you may `import { Colors } from \"@blueprintjs/core\"`.\n\nStyleguide colors\n*/\n/*\nGray scale\n\nBlack, white and everything in between. The gray scale should be used for\nthe main UI frame: containers, headers, sections, boxes, etc.\nIf you need to call attention to a particular element (buttons, icons, tooltips, etc.),\nuse one of the [core colors](#colors.core).\n\n@react-docs GrayscalePalette\n\nWeight: -1\n\nStyleguide colors.grays\n*/\n/*\nCore colors\n\nCore colors are reserved for user interface design. Use these to help call\nattention to specific UI elements, such as buttons, callouts, icons, etc.\nEach core color is mapped to what we call a __visual intent__. We use intents\nto convey the status of UI elements:\n\n- _Blue_ (intent: primary) elevates elements from the typical gray scale UI frame.\n- _Green_ (intent: success) indicates successful operations.\n- _Orange_ (intent: warning) indicates warnings and intermediate states.\n- _Red_ (intent: danger) indicates errors and potentially destructive operations.\n\nCore colors are also designed to:\n\n- go well together and be used alongside each other in any application.\n- adhere to [WCAG 2.0](https://www.w3.org/TR/WCAG20/) standards, and therefore are\n  highly accessible to visually impaired and color blind users.\n\n@react-docs CoreColorsPalette\n\nStyleguide colors.core\n*/\n/*\nExtended colors\n\nExtended colors should typically be reserved for data visualizations: any time\nyou need to represent data of some sort, you can use these.\nThese colors are less strict on [WCAG 2.0](https://www.w3.org/TR/WCAG20/)\naccessibility standards and should therefore not be used for typical user\ninterface design — take a look at [core colors](#colors.core) instead.\n\n@react-docs ExtendedColorsPalette\n\nStyleguide colors.extended\n*/\n/*\nColor aliases\n\nThese variables are semantic aliases of our [colors](#colors). They are used throughout Blueprint\nitself to ensure consistent color usage across components.\n\n<table class=pt-table>\n  <thead>\n    <tr>\n      <th></th>\n      <th>Variable</th>\n      <th>Description</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-intent-primary\"></div></td>\n      <td><code>$pt-intent-primary</code></td>\n      <td>Primary intent color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-intent-success\"></div></td>\n      <td><code>$pt-intent-success</code></td>\n      <td>Success intent color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-intent-warning\"></div></td>\n      <td><code>$pt-intent-warning</code></td>\n      <td>Warning intent color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-intent-danger\"></div></td>\n      <td><code>$pt-intent-danger</code></td>\n      <td>Danger intent color</td>\n    </tr>\n\n    <tr>\n      <td><div class=\"docs-color-bubble alias-app-background-color\"></div></td>\n      <td><code>$pt-app-background-color</code></td>\n      <td>Application background color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-app-background-color\"></div></td>\n      <td><code>$pt-dark-app-background-color</code></td>\n      <td>Dark theme application background color</td>\n    </tr>\n\n    <tr>\n      <td><div class=\"docs-color-bubble alias-text-color\"></div></td>\n      <td><code>$pt-text-color</code></td>\n      <td>Default text color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-text-color-muted\"></div></td>\n      <td><code>$pt-text-color-muted</code></td>\n      <td>Muted text color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-text-color-disabled\"></div></td>\n      <td><code>$pt-text-color-disabled</code></td>\n      <td>Disabled text color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-heading-color\"></div></td>\n      <td><code>$pt-heading-color</code></td>\n      <td>Text color for headers</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-link-color\"></div></td>\n      <td><code>$pt-link-color</code></td>\n      <td>Text color for links</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-text-color\"></div></td>\n      <td><code>$pt-dark-text-color</code></td>\n      <td>Dark theme default text color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-text-color-muted\"></div></td>\n      <td><code>$pt-dark-text-color-muted</code></td>\n      <td>Dark theme muted text color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-text-color-disabled\"></div></td>\n      <td><code>$pt-dark-text-color-disabled</code></td>\n      <td>Dark theme disabled text color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-heading-color\"></div></td>\n      <td><code>$pt-dark-heading-color</code></td>\n      <td>Dark theme text color for headers</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-link-color\"></div></td>\n      <td><code>$pt-dark-link-color</code></td>\n      <td>Dark theme text color for links</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-text-selection-color\"></div></td>\n      <td><code>$pt-text-selection-color</code></td>\n      <td>Text selection color</td>\n    </tr>\n\n    <tr>\n      <td><div class=\"docs-color-bubble alias-icon-color\"></div></td>\n      <td><code>$pt-icon-color</code></td>\n      <td>Default icon color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-icon-color-hover\"></div></td>\n      <td><code>$pt-icon-color-hover</code></td>\n      <td>Hovered icon color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-icon-color-disabled\"></div></td>\n      <td><code>$pt-icon-color-disabled</code></td>\n      <td>Disabled icon color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-icon-color-selected\"></div></td>\n      <td><code>$pt-icon-color-selected</code></td>\n      <td>Selected icon color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-icon-color\"></div></td>\n      <td><code>$pt-dark-icon-color</code></td>\n      <td>Dark theme default icon color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-icon-color-hover\"></div></td>\n      <td><code>$pt-dark-icon-color-hover</code></td>\n      <td>Dark theme hovered icon color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-icon-color-disabled\"></div></td>\n      <td><code>$pt-dark-icon-color-disabled</code></td>\n      <td>Dark theme disabled icon color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-icon-color-selected\"></div></td>\n      <td><code>$pt-dark-icon-color-selected</code></td>\n      <td>Dark theme selected icon color</td>\n    </tr>\n\n    <tr>\n      <td><div class=\"docs-color-bubble alias-divider-black\"></div></td>\n      <td><code>$pt-divider-black</code></td>\n      <td>Black divider color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-divider-black\"></div></td>\n      <td><code>$pt-dark-divider-black</code></td>\n      <td>Dark theme black divider color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-divider-white\"></div></td>\n      <td><code>$pt-dark-divider-white</code></td>\n      <td>Dark theme white divider color</td>\n    </tr>\n\n    <tr>\n      <td><div class=\"docs-color-bubble alias-code-text-color\"></div></td>\n      <td><code>$pt-code-text-color</code></td>\n      <td>Code text color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-code-background-color\"></div></td>\n      <td><code>$pt-code-background-color</code></td>\n      <td>Code background color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-code-text-color\"></div></td>\n      <td><code>$pt-dark-code-text-color</code></td>\n      <td>Dark theme code text color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-code-background-color\"></div></td>\n      <td><code>$pt-dark-code-background-color</code></td>\n      <td>Dark theme code background color</td>\n    </tr>\n  </tbody>\n</table>\n\nStyleguide variables.colors\n*/\n/*\nColor schemes\n\nUse the following color scheme generators to produce color schemes for your data visualizations.\nFirst, choose the kind of scheme based on the type of your data, then customize the number of values\nusing the forms below. Finally, copy the colors array into your application and make it live!\n\nThe following schemes have been carefully crafted to be visually striking and easily understandable\nwhile remaining accessible to visually impaired and color blind users.\n\nStyleguide colors.schemes\n*/\n/*\nSequential color schemes\n\nSequential color schemes imply order and are best suited for representing data that\nranges from low-to-high values either on an ordinal or on a numerical scale.\n\nWeight: -1\n\n@react-docs SequentialSchemePalette\n\nStyleguide colors.schemes.sequential\n*/\n/*\nDiverging color schemes\n\nDiverging color schemes put equal emphasis on mid-range values and extremes\nat both ends of the data range.\n\n@react-docs DivergingSchemePalette\n\nStyleguide colors.schemes.diverging\n*/\n/*\nQualitative color schemes\n\nQualitative color schemes use a series of unrelated colors to create a\nscheme that does not imply order, merely difference in kind.\n\n@react-docs QualitativeSchemePalette\n\nStyleguide colors.schemes.qualitative\n*/\n/*\nColors\n\nHex values for these colors can be accessed in JavaScript. The global version of the module exposes\nthe `Blueprint.Colors` object. In CommonJS, you may `import { Colors } from \"@blueprintjs/core\"`.\n\nStyleguide colors\n*/\n/*\nGray scale\n\nBlack, white and everything in between. The gray scale should be used for\nthe main UI frame: containers, headers, sections, boxes, etc.\nIf you need to call attention to a particular element (buttons, icons, tooltips, etc.),\nuse one of the [core colors](#colors.core).\n\n@react-docs GrayscalePalette\n\nWeight: -1\n\nStyleguide colors.grays\n*/\n/*\nCore colors\n\nCore colors are reserved for user interface design. Use these to help call\nattention to specific UI elements, such as buttons, callouts, icons, etc.\nEach core color is mapped to what we call a __visual intent__. We use intents\nto convey the status of UI elements:\n\n- _Blue_ (intent: primary) elevates elements from the typical gray scale UI frame.\n- _Green_ (intent: success) indicates successful operations.\n- _Orange_ (intent: warning) indicates warnings and intermediate states.\n- _Red_ (intent: danger) indicates errors and potentially destructive operations.\n\nCore colors are also designed to:\n\n- go well together and be used alongside each other in any application.\n- adhere to [WCAG 2.0](https://www.w3.org/TR/WCAG20/) standards, and therefore are\n  highly accessible to visually impaired and color blind users.\n\n@react-docs CoreColorsPalette\n\nStyleguide colors.core\n*/\n/*\nExtended colors\n\nExtended colors should typically be reserved for data visualizations: any time\nyou need to represent data of some sort, you can use these.\nThese colors are less strict on [WCAG 2.0](https://www.w3.org/TR/WCAG20/)\naccessibility standards and should therefore not be used for typical user\ninterface design — take a look at [core colors](#colors.core) instead.\n\n@react-docs ExtendedColorsPalette\n\nStyleguide colors.extended\n*/\n/*\nColor aliases\n\nThese variables are semantic aliases of our [colors](#colors). They are used throughout Blueprint\nitself to ensure consistent color usage across components.\n\n<table class=pt-table>\n  <thead>\n    <tr>\n      <th></th>\n      <th>Variable</th>\n      <th>Description</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-intent-primary\"></div></td>\n      <td><code>$pt-intent-primary</code></td>\n      <td>Primary intent color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-intent-success\"></div></td>\n      <td><code>$pt-intent-success</code></td>\n      <td>Success intent color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-intent-warning\"></div></td>\n      <td><code>$pt-intent-warning</code></td>\n      <td>Warning intent color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-intent-danger\"></div></td>\n      <td><code>$pt-intent-danger</code></td>\n      <td>Danger intent color</td>\n    </tr>\n\n    <tr>\n      <td><div class=\"docs-color-bubble alias-app-background-color\"></div></td>\n      <td><code>$pt-app-background-color</code></td>\n      <td>Application background color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-app-background-color\"></div></td>\n      <td><code>$pt-dark-app-background-color</code></td>\n      <td>Dark theme application background color</td>\n    </tr>\n\n    <tr>\n      <td><div class=\"docs-color-bubble alias-text-color\"></div></td>\n      <td><code>$pt-text-color</code></td>\n      <td>Default text color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-text-color-muted\"></div></td>\n      <td><code>$pt-text-color-muted</code></td>\n      <td>Muted text color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-text-color-disabled\"></div></td>\n      <td><code>$pt-text-color-disabled</code></td>\n      <td>Disabled text color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-heading-color\"></div></td>\n      <td><code>$pt-heading-color</code></td>\n      <td>Text color for headers</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-link-color\"></div></td>\n      <td><code>$pt-link-color</code></td>\n      <td>Text color for links</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-text-color\"></div></td>\n      <td><code>$pt-dark-text-color</code></td>\n      <td>Dark theme default text color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-text-color-muted\"></div></td>\n      <td><code>$pt-dark-text-color-muted</code></td>\n      <td>Dark theme muted text color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-text-color-disabled\"></div></td>\n      <td><code>$pt-dark-text-color-disabled</code></td>\n      <td>Dark theme disabled text color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-heading-color\"></div></td>\n      <td><code>$pt-dark-heading-color</code></td>\n      <td>Dark theme text color for headers</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-link-color\"></div></td>\n      <td><code>$pt-dark-link-color</code></td>\n      <td>Dark theme text color for links</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-text-selection-color\"></div></td>\n      <td><code>$pt-text-selection-color</code></td>\n      <td>Text selection color</td>\n    </tr>\n\n    <tr>\n      <td><div class=\"docs-color-bubble alias-icon-color\"></div></td>\n      <td><code>$pt-icon-color</code></td>\n      <td>Default icon color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-icon-color-hover\"></div></td>\n      <td><code>$pt-icon-color-hover</code></td>\n      <td>Hovered icon color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-icon-color-disabled\"></div></td>\n      <td><code>$pt-icon-color-disabled</code></td>\n      <td>Disabled icon color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-icon-color-selected\"></div></td>\n      <td><code>$pt-icon-color-selected</code></td>\n      <td>Selected icon color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-icon-color\"></div></td>\n      <td><code>$pt-dark-icon-color</code></td>\n      <td>Dark theme default icon color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-icon-color-hover\"></div></td>\n      <td><code>$pt-dark-icon-color-hover</code></td>\n      <td>Dark theme hovered icon color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-icon-color-disabled\"></div></td>\n      <td><code>$pt-dark-icon-color-disabled</code></td>\n      <td>Dark theme disabled icon color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-icon-color-selected\"></div></td>\n      <td><code>$pt-dark-icon-color-selected</code></td>\n      <td>Dark theme selected icon color</td>\n    </tr>\n\n    <tr>\n      <td><div class=\"docs-color-bubble alias-divider-black\"></div></td>\n      <td><code>$pt-divider-black</code></td>\n      <td>Black divider color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-divider-black\"></div></td>\n      <td><code>$pt-dark-divider-black</code></td>\n      <td>Dark theme black divider color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-divider-white\"></div></td>\n      <td><code>$pt-dark-divider-white</code></td>\n      <td>Dark theme white divider color</td>\n    </tr>\n\n    <tr>\n      <td><div class=\"docs-color-bubble alias-code-text-color\"></div></td>\n      <td><code>$pt-code-text-color</code></td>\n      <td>Code text color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-code-background-color\"></div></td>\n      <td><code>$pt-code-background-color</code></td>\n      <td>Code background color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-code-text-color\"></div></td>\n      <td><code>$pt-dark-code-text-color</code></td>\n      <td>Dark theme code text color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-code-background-color\"></div></td>\n      <td><code>$pt-dark-code-background-color</code></td>\n      <td>Dark theme code background color</td>\n    </tr>\n  </tbody>\n</table>\n\nStyleguide variables.colors\n*/\n/*\nColor schemes\n\nUse the following color scheme generators to produce color schemes for your data visualizations.\nFirst, choose the kind of scheme based on the type of your data, then customize the number of values\nusing the forms below. Finally, copy the colors array into your application and make it live!\n\nThe following schemes have been carefully crafted to be visually striking and easily understandable\nwhile remaining accessible to visually impaired and color blind users.\n\nStyleguide colors.schemes\n*/\n/*\nSequential color schemes\n\nSequential color schemes imply order and are best suited for representing data that\nranges from low-to-high values either on an ordinal or on a numerical scale.\n\nWeight: -1\n\n@react-docs SequentialSchemePalette\n\nStyleguide colors.schemes.sequential\n*/\n/*\nDiverging color schemes\n\nDiverging color schemes put equal emphasis on mid-range values and extremes\nat both ends of the data range.\n\n@react-docs DivergingSchemePalette\n\nStyleguide colors.schemes.diverging\n*/\n/*\nQualitative color schemes\n\nQualitative color schemes use a series of unrelated colors to create a\nscheme that does not imply order, merely difference in kind.\n\n@react-docs QualitativeSchemePalette\n\nStyleguide colors.schemes.qualitative\n*/\n/*\nColors\n\nHex values for these colors can be accessed in JavaScript. The global version of the module exposes\nthe `Blueprint.Colors` object. In CommonJS, you may `import { Colors } from \"@blueprintjs/core\"`.\n\nStyleguide colors\n*/\n/*\nGray scale\n\nBlack, white and everything in between. The gray scale should be used for\nthe main UI frame: containers, headers, sections, boxes, etc.\nIf you need to call attention to a particular element (buttons, icons, tooltips, etc.),\nuse one of the [core colors](#colors.core).\n\n@react-docs GrayscalePalette\n\nWeight: -1\n\nStyleguide colors.grays\n*/\n/*\nCore colors\n\nCore colors are reserved for user interface design. Use these to help call\nattention to specific UI elements, such as buttons, callouts, icons, etc.\nEach core color is mapped to what we call a __visual intent__. We use intents\nto convey the status of UI elements:\n\n- _Blue_ (intent: primary) elevates elements from the typical gray scale UI frame.\n- _Green_ (intent: success) indicates successful operations.\n- _Orange_ (intent: warning) indicates warnings and intermediate states.\n- _Red_ (intent: danger) indicates errors and potentially destructive operations.\n\nCore colors are also designed to:\n\n- go well together and be used alongside each other in any application.\n- adhere to [WCAG 2.0](https://www.w3.org/TR/WCAG20/) standards, and therefore are\n  highly accessible to visually impaired and color blind users.\n\n@react-docs CoreColorsPalette\n\nStyleguide colors.core\n*/\n/*\nExtended colors\n\nExtended colors should typically be reserved for data visualizations: any time\nyou need to represent data of some sort, you can use these.\nThese colors are less strict on [WCAG 2.0](https://www.w3.org/TR/WCAG20/)\naccessibility standards and should therefore not be used for typical user\ninterface design — take a look at [core colors](#colors.core) instead.\n\n@react-docs ExtendedColorsPalette\n\nStyleguide colors.extended\n*/\n/*\nColor aliases\n\nThese variables are semantic aliases of our [colors](#colors). They are used throughout Blueprint\nitself to ensure consistent color usage across components.\n\n<table class=pt-table>\n  <thead>\n    <tr>\n      <th></th>\n      <th>Variable</th>\n      <th>Description</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-intent-primary\"></div></td>\n      <td><code>$pt-intent-primary</code></td>\n      <td>Primary intent color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-intent-success\"></div></td>\n      <td><code>$pt-intent-success</code></td>\n      <td>Success intent color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-intent-warning\"></div></td>\n      <td><code>$pt-intent-warning</code></td>\n      <td>Warning intent color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-intent-danger\"></div></td>\n      <td><code>$pt-intent-danger</code></td>\n      <td>Danger intent color</td>\n    </tr>\n\n    <tr>\n      <td><div class=\"docs-color-bubble alias-app-background-color\"></div></td>\n      <td><code>$pt-app-background-color</code></td>\n      <td>Application background color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-app-background-color\"></div></td>\n      <td><code>$pt-dark-app-background-color</code></td>\n      <td>Dark theme application background color</td>\n    </tr>\n\n    <tr>\n      <td><div class=\"docs-color-bubble alias-text-color\"></div></td>\n      <td><code>$pt-text-color</code></td>\n      <td>Default text color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-text-color-muted\"></div></td>\n      <td><code>$pt-text-color-muted</code></td>\n      <td>Muted text color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-text-color-disabled\"></div></td>\n      <td><code>$pt-text-color-disabled</code></td>\n      <td>Disabled text color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-heading-color\"></div></td>\n      <td><code>$pt-heading-color</code></td>\n      <td>Text color for headers</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-link-color\"></div></td>\n      <td><code>$pt-link-color</code></td>\n      <td>Text color for links</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-text-color\"></div></td>\n      <td><code>$pt-dark-text-color</code></td>\n      <td>Dark theme default text color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-text-color-muted\"></div></td>\n      <td><code>$pt-dark-text-color-muted</code></td>\n      <td>Dark theme muted text color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-text-color-disabled\"></div></td>\n      <td><code>$pt-dark-text-color-disabled</code></td>\n      <td>Dark theme disabled text color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-heading-color\"></div></td>\n      <td><code>$pt-dark-heading-color</code></td>\n      <td>Dark theme text color for headers</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-link-color\"></div></td>\n      <td><code>$pt-dark-link-color</code></td>\n      <td>Dark theme text color for links</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-text-selection-color\"></div></td>\n      <td><code>$pt-text-selection-color</code></td>\n      <td>Text selection color</td>\n    </tr>\n\n    <tr>\n      <td><div class=\"docs-color-bubble alias-icon-color\"></div></td>\n      <td><code>$pt-icon-color</code></td>\n      <td>Default icon color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-icon-color-hover\"></div></td>\n      <td><code>$pt-icon-color-hover</code></td>\n      <td>Hovered icon color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-icon-color-disabled\"></div></td>\n      <td><code>$pt-icon-color-disabled</code></td>\n      <td>Disabled icon color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-icon-color-selected\"></div></td>\n      <td><code>$pt-icon-color-selected</code></td>\n      <td>Selected icon color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-icon-color\"></div></td>\n      <td><code>$pt-dark-icon-color</code></td>\n      <td>Dark theme default icon color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-icon-color-hover\"></div></td>\n      <td><code>$pt-dark-icon-color-hover</code></td>\n      <td>Dark theme hovered icon color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-icon-color-disabled\"></div></td>\n      <td><code>$pt-dark-icon-color-disabled</code></td>\n      <td>Dark theme disabled icon color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-icon-color-selected\"></div></td>\n      <td><code>$pt-dark-icon-color-selected</code></td>\n      <td>Dark theme selected icon color</td>\n    </tr>\n\n    <tr>\n      <td><div class=\"docs-color-bubble alias-divider-black\"></div></td>\n      <td><code>$pt-divider-black</code></td>\n      <td>Black divider color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-divider-black\"></div></td>\n      <td><code>$pt-dark-divider-black</code></td>\n      <td>Dark theme black divider color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-divider-white\"></div></td>\n      <td><code>$pt-dark-divider-white</code></td>\n      <td>Dark theme white divider color</td>\n    </tr>\n\n    <tr>\n      <td><div class=\"docs-color-bubble alias-code-text-color\"></div></td>\n      <td><code>$pt-code-text-color</code></td>\n      <td>Code text color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-code-background-color\"></div></td>\n      <td><code>$pt-code-background-color</code></td>\n      <td>Code background color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-code-text-color\"></div></td>\n      <td><code>$pt-dark-code-text-color</code></td>\n      <td>Dark theme code text color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-code-background-color\"></div></td>\n      <td><code>$pt-dark-code-background-color</code></td>\n      <td>Dark theme code background color</td>\n    </tr>\n  </tbody>\n</table>\n\nStyleguide variables.colors\n*/\n/*\nColor schemes\n\nUse the following color scheme generators to produce color schemes for your data visualizations.\nFirst, choose the kind of scheme based on the type of your data, then customize the number of values\nusing the forms below. Finally, copy the colors array into your application and make it live!\n\nThe following schemes have been carefully crafted to be visually striking and easily understandable\nwhile remaining accessible to visually impaired and color blind users.\n\nStyleguide colors.schemes\n*/\n/*\nSequential color schemes\n\nSequential color schemes imply order and are best suited for representing data that\nranges from low-to-high values either on an ordinal or on a numerical scale.\n\nWeight: -1\n\n@react-docs SequentialSchemePalette\n\nStyleguide colors.schemes.sequential\n*/\n/*\nDiverging color schemes\n\nDiverging color schemes put equal emphasis on mid-range values and extremes\nat both ends of the data range.\n\n@react-docs DivergingSchemePalette\n\nStyleguide colors.schemes.diverging\n*/\n/*\nQualitative color schemes\n\nQualitative color schemes use a series of unrelated colors to create a\nscheme that does not imply order, merely difference in kind.\n\n@react-docs QualitativeSchemePalette\n\nStyleguide colors.schemes.qualitative\n*/\n/*\nVariables\n\nAvailable for use with Sass and Less.\n\n```css.scss\n@import \"path/to/@blueprintjs/core/dist/variables\";\n```\n\nThe Sass `$` convention is used in this documentation for consistency with the original source code.\nEvery variable mentioned below is also available in `variables.less` with an `@` prefix instead of `$`.\n\nWeight: 4\n\nStyleguide variables\n*/\n/*\nFont variables\n\nTypically, correct typography styles should be achieved by using the proper HTML tag (`<p>` for\ntext, `<h*>` for headings, `<code>` for code, etc.). The following variables are provided for the\nrare cases where custom styling is necessary and should be used sparingly:\n\n- `$pt-font-family`\n- `$pt-font-family-monospace`\n- `$pt-font-size`\n- `$pt-font-size-small`\n- `$pt-font-size-large`\n- `$pt-line-height`\n\nSee the [Fonts section](#typography.fonts) for more information and usage guidelines.\n\nStyleguide variables.fonts\n*/\n/*\nIcon variables\n\nMost icons should be displayed using the `span.pt-icon-*` classes or via modifier classes on\ncomponents like `.pt-button`. In rare cases, you may need direct access to the content\nstring that generates each icon in the icon font. Blueprint provides these variables with\nstraightforward names (see the [Icons section](#icons) for the full list of identifiers):\n\n- `$pt-icon-style`\n- `$pt-icon-align-left`\n- `$pt-icon-align-center`\n- ...\n\nVariables are also provided for the two icon font families and their pixel sizes:\n\n- `@icons16-family`\n- `@icons20-family`\n- `$pt-icon-size-standard`\n- `$pt-icon-size-large`\n\nStyleguide variables.icons\n*/\n/*\nGrids & dimensions\n\nSizes of common components. Most sizing variables are based on `$pt-grid-size`, which has\na value of `10px`. Custom components should adhere to the relevant `height` variable.\n\n- `$pt-grid-size`\n- `$pt-border-radius`\n- `$pt-button-height`\n- `$pt-button-height-large`\n- `$pt-input-height`\n- `$pt-input-height-large`\n- `$pt-navbar-height`\n\nWeight: 1\n\nStyleguide variables.dimensions\n*/\n/*\nGrid system\n\nBlueprint doesn't provide a grid system. In general, you should try to use the `$pt-grid-size`\nvariable to generate layout & sizing style rules in your CSS codebase.\n\nIn lieu of a full grid system, you should try to use the __CSS flexible box layout model__ (a.k.a.\n\"flexbox\"). It's quite powerful on its own and allows you to build robust, responsive layouts\nwithout writing much CSS. Here are some resources for learning flexbox:\n   - [MDN guide](https://developer.mozilla.org/en-US/docs/Web/Guide/CSS/Flexible_boxes)\n   - [CSS Tricks guide](https://css-tricks.com/snippets/css/a-guide-to-flexbox/)\n\nStyleguide variables.dimensions.grid\n*/\n/*\nLayering\n\nBlueprint provides variables for three z-index layers. This should be enough for most use cases,\nespecially if you make correct use of [stacking context][MDN]. [Overlay](#components.overlay)\ncomponents such as dialogs and popovers use these z-index values to configure their stacking\ncontexts.\n\n- `$pt-z-index-base`\n- `$pt-z-index-content`\n- `$pt-z-index-overlay`\n\n[MDN]: https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Positioning/Understanding_z_index/The_stacking_context\n\nWeight: 1\n\nStyleguide variables.layering\n*/\n/*\nLight theme styles\n\nUse these when you need to build custom UI components that look similar to Blueprint's\nlight theme components.\n\n- `$pt-dialog-box-shadow`\n- `$pt-input-box-shadow`\n- `$pt-popover-box-shadow`\n- `$pt-tooltip-box-shadow`\n\nWeight: 2\n\nStyleguide variables.light\n*/\n/*\nDark theme styles\n\nUse these when you need to build custom UI components that look similar to Blueprint's\ndark theme components.\n\n- `$pt-dark-dialog-box-shadow`\n- `$pt-dark-input-box-shadow`\n- `$pt-dark-popover-box-shadow`\n- `$pt-dark-tooltip-box-shadow`\n\nWeight: 3\n\nStyleguide variables.dark\n*/\n/*\nColors\n\nHex values for these colors can be accessed in JavaScript. The global version of the module exposes\nthe `Blueprint.Colors` object. In CommonJS, you may `import { Colors } from \"@blueprintjs/core\"`.\n\nStyleguide colors\n*/\n/*\nGray scale\n\nBlack, white and everything in between. The gray scale should be used for\nthe main UI frame: containers, headers, sections, boxes, etc.\nIf you need to call attention to a particular element (buttons, icons, tooltips, etc.),\nuse one of the [core colors](#colors.core).\n\n@react-docs GrayscalePalette\n\nWeight: -1\n\nStyleguide colors.grays\n*/\n/*\nCore colors\n\nCore colors are reserved for user interface design. Use these to help call\nattention to specific UI elements, such as buttons, callouts, icons, etc.\nEach core color is mapped to what we call a __visual intent__. We use intents\nto convey the status of UI elements:\n\n- _Blue_ (intent: primary) elevates elements from the typical gray scale UI frame.\n- _Green_ (intent: success) indicates successful operations.\n- _Orange_ (intent: warning) indicates warnings and intermediate states.\n- _Red_ (intent: danger) indicates errors and potentially destructive operations.\n\nCore colors are also designed to:\n\n- go well together and be used alongside each other in any application.\n- adhere to [WCAG 2.0](https://www.w3.org/TR/WCAG20/) standards, and therefore are\n  highly accessible to visually impaired and color blind users.\n\n@react-docs CoreColorsPalette\n\nStyleguide colors.core\n*/\n/*\nExtended colors\n\nExtended colors should typically be reserved for data visualizations: any time\nyou need to represent data of some sort, you can use these.\nThese colors are less strict on [WCAG 2.0](https://www.w3.org/TR/WCAG20/)\naccessibility standards and should therefore not be used for typical user\ninterface design — take a look at [core colors](#colors.core) instead.\n\n@react-docs ExtendedColorsPalette\n\nStyleguide colors.extended\n*/\n/*\nColor aliases\n\nThese variables are semantic aliases of our [colors](#colors). They are used throughout Blueprint\nitself to ensure consistent color usage across components.\n\n<table class=pt-table>\n  <thead>\n    <tr>\n      <th></th>\n      <th>Variable</th>\n      <th>Description</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-intent-primary\"></div></td>\n      <td><code>$pt-intent-primary</code></td>\n      <td>Primary intent color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-intent-success\"></div></td>\n      <td><code>$pt-intent-success</code></td>\n      <td>Success intent color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-intent-warning\"></div></td>\n      <td><code>$pt-intent-warning</code></td>\n      <td>Warning intent color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-intent-danger\"></div></td>\n      <td><code>$pt-intent-danger</code></td>\n      <td>Danger intent color</td>\n    </tr>\n\n    <tr>\n      <td><div class=\"docs-color-bubble alias-app-background-color\"></div></td>\n      <td><code>$pt-app-background-color</code></td>\n      <td>Application background color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-app-background-color\"></div></td>\n      <td><code>$pt-dark-app-background-color</code></td>\n      <td>Dark theme application background color</td>\n    </tr>\n\n    <tr>\n      <td><div class=\"docs-color-bubble alias-text-color\"></div></td>\n      <td><code>$pt-text-color</code></td>\n      <td>Default text color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-text-color-muted\"></div></td>\n      <td><code>$pt-text-color-muted</code></td>\n      <td>Muted text color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-text-color-disabled\"></div></td>\n      <td><code>$pt-text-color-disabled</code></td>\n      <td>Disabled text color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-heading-color\"></div></td>\n      <td><code>$pt-heading-color</code></td>\n      <td>Text color for headers</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-link-color\"></div></td>\n      <td><code>$pt-link-color</code></td>\n      <td>Text color for links</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-text-color\"></div></td>\n      <td><code>$pt-dark-text-color</code></td>\n      <td>Dark theme default text color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-text-color-muted\"></div></td>\n      <td><code>$pt-dark-text-color-muted</code></td>\n      <td>Dark theme muted text color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-text-color-disabled\"></div></td>\n      <td><code>$pt-dark-text-color-disabled</code></td>\n      <td>Dark theme disabled text color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-heading-color\"></div></td>\n      <td><code>$pt-dark-heading-color</code></td>\n      <td>Dark theme text color for headers</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-link-color\"></div></td>\n      <td><code>$pt-dark-link-color</code></td>\n      <td>Dark theme text color for links</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-text-selection-color\"></div></td>\n      <td><code>$pt-text-selection-color</code></td>\n      <td>Text selection color</td>\n    </tr>\n\n    <tr>\n      <td><div class=\"docs-color-bubble alias-icon-color\"></div></td>\n      <td><code>$pt-icon-color</code></td>\n      <td>Default icon color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-icon-color-hover\"></div></td>\n      <td><code>$pt-icon-color-hover</code></td>\n      <td>Hovered icon color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-icon-color-disabled\"></div></td>\n      <td><code>$pt-icon-color-disabled</code></td>\n      <td>Disabled icon color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-icon-color-selected\"></div></td>\n      <td><code>$pt-icon-color-selected</code></td>\n      <td>Selected icon color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-icon-color\"></div></td>\n      <td><code>$pt-dark-icon-color</code></td>\n      <td>Dark theme default icon color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-icon-color-hover\"></div></td>\n      <td><code>$pt-dark-icon-color-hover</code></td>\n      <td>Dark theme hovered icon color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-icon-color-disabled\"></div></td>\n      <td><code>$pt-dark-icon-color-disabled</code></td>\n      <td>Dark theme disabled icon color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-icon-color-selected\"></div></td>\n      <td><code>$pt-dark-icon-color-selected</code></td>\n      <td>Dark theme selected icon color</td>\n    </tr>\n\n    <tr>\n      <td><div class=\"docs-color-bubble alias-divider-black\"></div></td>\n      <td><code>$pt-divider-black</code></td>\n      <td>Black divider color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-divider-black\"></div></td>\n      <td><code>$pt-dark-divider-black</code></td>\n      <td>Dark theme black divider color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-divider-white\"></div></td>\n      <td><code>$pt-dark-divider-white</code></td>\n      <td>Dark theme white divider color</td>\n    </tr>\n\n    <tr>\n      <td><div class=\"docs-color-bubble alias-code-text-color\"></div></td>\n      <td><code>$pt-code-text-color</code></td>\n      <td>Code text color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-code-background-color\"></div></td>\n      <td><code>$pt-code-background-color</code></td>\n      <td>Code background color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-code-text-color\"></div></td>\n      <td><code>$pt-dark-code-text-color</code></td>\n      <td>Dark theme code text color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-code-background-color\"></div></td>\n      <td><code>$pt-dark-code-background-color</code></td>\n      <td>Dark theme code background color</td>\n    </tr>\n  </tbody>\n</table>\n\nStyleguide variables.colors\n*/\n/*\nColor schemes\n\nUse the following color scheme generators to produce color schemes for your data visualizations.\nFirst, choose the kind of scheme based on the type of your data, then customize the number of values\nusing the forms below. Finally, copy the colors array into your application and make it live!\n\nThe following schemes have been carefully crafted to be visually striking and easily understandable\nwhile remaining accessible to visually impaired and color blind users.\n\nStyleguide colors.schemes\n*/\n/*\nSequential color schemes\n\nSequential color schemes imply order and are best suited for representing data that\nranges from low-to-high values either on an ordinal or on a numerical scale.\n\nWeight: -1\n\n@react-docs SequentialSchemePalette\n\nStyleguide colors.schemes.sequential\n*/\n/*\nDiverging color schemes\n\nDiverging color schemes put equal emphasis on mid-range values and extremes\nat both ends of the data range.\n\n@react-docs DivergingSchemePalette\n\nStyleguide colors.schemes.diverging\n*/\n/*\nQualitative color schemes\n\nQualitative color schemes use a series of unrelated colors to create a\nscheme that does not imply order, merely difference in kind.\n\n@react-docs QualitativeSchemePalette\n\nStyleguide colors.schemes.qualitative\n*/\n/*\nColors\n\nHex values for these colors can be accessed in JavaScript. The global version of the module exposes\nthe `Blueprint.Colors` object. In CommonJS, you may `import { Colors } from \"@blueprintjs/core\"`.\n\nStyleguide colors\n*/\n/*\nGray scale\n\nBlack, white and everything in between. The gray scale should be used for\nthe main UI frame: containers, headers, sections, boxes, etc.\nIf you need to call attention to a particular element (buttons, icons, tooltips, etc.),\nuse one of the [core colors](#colors.core).\n\n@react-docs GrayscalePalette\n\nWeight: -1\n\nStyleguide colors.grays\n*/\n/*\nCore colors\n\nCore colors are reserved for user interface design. Use these to help call\nattention to specific UI elements, such as buttons, callouts, icons, etc.\nEach core color is mapped to what we call a __visual intent__. We use intents\nto convey the status of UI elements:\n\n- _Blue_ (intent: primary) elevates elements from the typical gray scale UI frame.\n- _Green_ (intent: success) indicates successful operations.\n- _Orange_ (intent: warning) indicates warnings and intermediate states.\n- _Red_ (intent: danger) indicates errors and potentially destructive operations.\n\nCore colors are also designed to:\n\n- go well together and be used alongside each other in any application.\n- adhere to [WCAG 2.0](https://www.w3.org/TR/WCAG20/) standards, and therefore are\n  highly accessible to visually impaired and color blind users.\n\n@react-docs CoreColorsPalette\n\nStyleguide colors.core\n*/\n/*\nExtended colors\n\nExtended colors should typically be reserved for data visualizations: any time\nyou need to represent data of some sort, you can use these.\nThese colors are less strict on [WCAG 2.0](https://www.w3.org/TR/WCAG20/)\naccessibility standards and should therefore not be used for typical user\ninterface design — take a look at [core colors](#colors.core) instead.\n\n@react-docs ExtendedColorsPalette\n\nStyleguide colors.extended\n*/\n/*\nColor aliases\n\nThese variables are semantic aliases of our [colors](#colors). They are used throughout Blueprint\nitself to ensure consistent color usage across components.\n\n<table class=pt-table>\n  <thead>\n    <tr>\n      <th></th>\n      <th>Variable</th>\n      <th>Description</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-intent-primary\"></div></td>\n      <td><code>$pt-intent-primary</code></td>\n      <td>Primary intent color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-intent-success\"></div></td>\n      <td><code>$pt-intent-success</code></td>\n      <td>Success intent color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-intent-warning\"></div></td>\n      <td><code>$pt-intent-warning</code></td>\n      <td>Warning intent color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-intent-danger\"></div></td>\n      <td><code>$pt-intent-danger</code></td>\n      <td>Danger intent color</td>\n    </tr>\n\n    <tr>\n      <td><div class=\"docs-color-bubble alias-app-background-color\"></div></td>\n      <td><code>$pt-app-background-color</code></td>\n      <td>Application background color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-app-background-color\"></div></td>\n      <td><code>$pt-dark-app-background-color</code></td>\n      <td>Dark theme application background color</td>\n    </tr>\n\n    <tr>\n      <td><div class=\"docs-color-bubble alias-text-color\"></div></td>\n      <td><code>$pt-text-color</code></td>\n      <td>Default text color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-text-color-muted\"></div></td>\n      <td><code>$pt-text-color-muted</code></td>\n      <td>Muted text color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-text-color-disabled\"></div></td>\n      <td><code>$pt-text-color-disabled</code></td>\n      <td>Disabled text color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-heading-color\"></div></td>\n      <td><code>$pt-heading-color</code></td>\n      <td>Text color for headers</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-link-color\"></div></td>\n      <td><code>$pt-link-color</code></td>\n      <td>Text color for links</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-text-color\"></div></td>\n      <td><code>$pt-dark-text-color</code></td>\n      <td>Dark theme default text color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-text-color-muted\"></div></td>\n      <td><code>$pt-dark-text-color-muted</code></td>\n      <td>Dark theme muted text color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-text-color-disabled\"></div></td>\n      <td><code>$pt-dark-text-color-disabled</code></td>\n      <td>Dark theme disabled text color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-heading-color\"></div></td>\n      <td><code>$pt-dark-heading-color</code></td>\n      <td>Dark theme text color for headers</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-link-color\"></div></td>\n      <td><code>$pt-dark-link-color</code></td>\n      <td>Dark theme text color for links</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-text-selection-color\"></div></td>\n      <td><code>$pt-text-selection-color</code></td>\n      <td>Text selection color</td>\n    </tr>\n\n    <tr>\n      <td><div class=\"docs-color-bubble alias-icon-color\"></div></td>\n      <td><code>$pt-icon-color</code></td>\n      <td>Default icon color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-icon-color-hover\"></div></td>\n      <td><code>$pt-icon-color-hover</code></td>\n      <td>Hovered icon color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-icon-color-disabled\"></div></td>\n      <td><code>$pt-icon-color-disabled</code></td>\n      <td>Disabled icon color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-icon-color-selected\"></div></td>\n      <td><code>$pt-icon-color-selected</code></td>\n      <td>Selected icon color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-icon-color\"></div></td>\n      <td><code>$pt-dark-icon-color</code></td>\n      <td>Dark theme default icon color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-icon-color-hover\"></div></td>\n      <td><code>$pt-dark-icon-color-hover</code></td>\n      <td>Dark theme hovered icon color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-icon-color-disabled\"></div></td>\n      <td><code>$pt-dark-icon-color-disabled</code></td>\n      <td>Dark theme disabled icon color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-icon-color-selected\"></div></td>\n      <td><code>$pt-dark-icon-color-selected</code></td>\n      <td>Dark theme selected icon color</td>\n    </tr>\n\n    <tr>\n      <td><div class=\"docs-color-bubble alias-divider-black\"></div></td>\n      <td><code>$pt-divider-black</code></td>\n      <td>Black divider color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-divider-black\"></div></td>\n      <td><code>$pt-dark-divider-black</code></td>\n      <td>Dark theme black divider color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-divider-white\"></div></td>\n      <td><code>$pt-dark-divider-white</code></td>\n      <td>Dark theme white divider color</td>\n    </tr>\n\n    <tr>\n      <td><div class=\"docs-color-bubble alias-code-text-color\"></div></td>\n      <td><code>$pt-code-text-color</code></td>\n      <td>Code text color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-code-background-color\"></div></td>\n      <td><code>$pt-code-background-color</code></td>\n      <td>Code background color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-code-text-color\"></div></td>\n      <td><code>$pt-dark-code-text-color</code></td>\n      <td>Dark theme code text color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-code-background-color\"></div></td>\n      <td><code>$pt-dark-code-background-color</code></td>\n      <td>Dark theme code background color</td>\n    </tr>\n  </tbody>\n</table>\n\nStyleguide variables.colors\n*/\n/*\nColor schemes\n\nUse the following color scheme generators to produce color schemes for your data visualizations.\nFirst, choose the kind of scheme based on the type of your data, then customize the number of values\nusing the forms below. Finally, copy the colors array into your application and make it live!\n\nThe following schemes have been carefully crafted to be visually striking and easily understandable\nwhile remaining accessible to visually impaired and color blind users.\n\nStyleguide colors.schemes\n*/\n/*\nSequential color schemes\n\nSequential color schemes imply order and are best suited for representing data that\nranges from low-to-high values either on an ordinal or on a numerical scale.\n\nWeight: -1\n\n@react-docs SequentialSchemePalette\n\nStyleguide colors.schemes.sequential\n*/\n/*\nDiverging color schemes\n\nDiverging color schemes put equal emphasis on mid-range values and extremes\nat both ends of the data range.\n\n@react-docs DivergingSchemePalette\n\nStyleguide colors.schemes.diverging\n*/\n/*\nQualitative color schemes\n\nQualitative color schemes use a series of unrelated colors to create a\nscheme that does not imply order, merely difference in kind.\n\n@react-docs QualitativeSchemePalette\n\nStyleguide colors.schemes.qualitative\n*/\n/*\nVariables\n\nAvailable for use with Sass and Less.\n\n```css.scss\n@import \"path/to/@blueprintjs/core/dist/variables\";\n```\n\nThe Sass `$` convention is used in this documentation for consistency with the original source code.\nEvery variable mentioned below is also available in `variables.less` with an `@` prefix instead of `$`.\n\nWeight: 4\n\nStyleguide variables\n*/\n/*\nFont variables\n\nTypically, correct typography styles should be achieved by using the proper HTML tag (`<p>` for\ntext, `<h*>` for headings, `<code>` for code, etc.). The following variables are provided for the\nrare cases where custom styling is necessary and should be used sparingly:\n\n- `$pt-font-family`\n- `$pt-font-family-monospace`\n- `$pt-font-size`\n- `$pt-font-size-small`\n- `$pt-font-size-large`\n- `$pt-line-height`\n\nSee the [Fonts section](#typography.fonts) for more information and usage guidelines.\n\nStyleguide variables.fonts\n*/\n/*\nIcon variables\n\nMost icons should be displayed using the `span.pt-icon-*` classes or via modifier classes on\ncomponents like `.pt-button`. In rare cases, you may need direct access to the content\nstring that generates each icon in the icon font. Blueprint provides these variables with\nstraightforward names (see the [Icons section](#icons) for the full list of identifiers):\n\n- `$pt-icon-style`\n- `$pt-icon-align-left`\n- `$pt-icon-align-center`\n- ...\n\nVariables are also provided for the two icon font families and their pixel sizes:\n\n- `@icons16-family`\n- `@icons20-family`\n- `$pt-icon-size-standard`\n- `$pt-icon-size-large`\n\nStyleguide variables.icons\n*/\n/*\nGrids & dimensions\n\nSizes of common components. Most sizing variables are based on `$pt-grid-size`, which has\na value of `10px`. Custom components should adhere to the relevant `height` variable.\n\n- `$pt-grid-size`\n- `$pt-border-radius`\n- `$pt-button-height`\n- `$pt-button-height-large`\n- `$pt-input-height`\n- `$pt-input-height-large`\n- `$pt-navbar-height`\n\nWeight: 1\n\nStyleguide variables.dimensions\n*/\n/*\nGrid system\n\nBlueprint doesn't provide a grid system. In general, you should try to use the `$pt-grid-size`\nvariable to generate layout & sizing style rules in your CSS codebase.\n\nIn lieu of a full grid system, you should try to use the __CSS flexible box layout model__ (a.k.a.\n\"flexbox\"). It's quite powerful on its own and allows you to build robust, responsive layouts\nwithout writing much CSS. Here are some resources for learning flexbox:\n   - [MDN guide](https://developer.mozilla.org/en-US/docs/Web/Guide/CSS/Flexible_boxes)\n   - [CSS Tricks guide](https://css-tricks.com/snippets/css/a-guide-to-flexbox/)\n\nStyleguide variables.dimensions.grid\n*/\n/*\nLayering\n\nBlueprint provides variables for three z-index layers. This should be enough for most use cases,\nespecially if you make correct use of [stacking context][MDN]. [Overlay](#components.overlay)\ncomponents such as dialogs and popovers use these z-index values to configure their stacking\ncontexts.\n\n- `$pt-z-index-base`\n- `$pt-z-index-content`\n- `$pt-z-index-overlay`\n\n[MDN]: https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Positioning/Understanding_z_index/The_stacking_context\n\nWeight: 1\n\nStyleguide variables.layering\n*/\n/*\nLight theme styles\n\nUse these when you need to build custom UI components that look similar to Blueprint's\nlight theme components.\n\n- `$pt-dialog-box-shadow`\n- `$pt-input-box-shadow`\n- `$pt-popover-box-shadow`\n- `$pt-tooltip-box-shadow`\n\nWeight: 2\n\nStyleguide variables.light\n*/\n/*\nDark theme styles\n\nUse these when you need to build custom UI components that look similar to Blueprint's\ndark theme components.\n\n- `$pt-dark-dialog-box-shadow`\n- `$pt-dark-input-box-shadow`\n- `$pt-dark-popover-box-shadow`\n- `$pt-dark-tooltip-box-shadow`\n\nWeight: 3\n\nStyleguide variables.dark\n*/\n/*\nCSS `border` property issues:\n- An element can only have one border.\n- Borders can't stack with shadows.\n- Borders modify the size of the element they're applied to.\n- Border positioning requires the extra `box-sizing` property.\n\n`box-shadow` doesn't have these issues, we're using it instead of `border`.\n*/\n/*\nOverlay shadows are used for default buttons\nfloating on top of other elements. This way, the\nshadows blend with the colors beneath it.\nSwitches and slider handles both use these variables.\n*/\n/*\nTime picker\n\nA `TimePicker` allows the user to specify a time.\n\n`TimePicker`s behave similarly to standard [React form inputs](https://facebook.github.io/react/docs/forms.html).\n\nUse the `onChange` prop to listen for changes to the set time. You can control the selected time by\nsetting the `value` prop, or use the component in uncontrolled mode and specify an initial time by\nsetting `defaultValue`.\n\n`TimePicker` has no direct localization support. You should handle localization directly in your\napplication if needed.\n\n`TimePicker` uses `Date` objects across its API but ignores their year, month, and day fields.\n\n@react-example TimePickerExample\n\nStyleguide components.datetime.timepicker\n*/\n/*\nJavaScript API\n\nThe `TimePicker` component is available in the __@blueprintjs/datetime__ package.\nMake sure to review the [general usage docs for date & time components](#components.datetime).\n\n@interface ITimePickerProps\n\nWeight: -1\n\nStyleguide components.datetime.timepicker.js\n*/\n.pt-timepicker {\n  display: inline-block;\n  padding: 0 10px;\n  white-space: nowrap; }\n  .pt-timepicker .pt-timepicker-arrow-row {\n    padding: 0 1px; }\n  .pt-timepicker .pt-timepicker-arrow-button {\n    color: #5c7080;\n    width: 33px;\n    padding: 4px 0;\n    text-align: center; }\n    .pt-timepicker .pt-timepicker-arrow-button:hover {\n      color: #182026; }\n    .pt-dark .pt-timepicker .pt-timepicker-arrow-button {\n      color: #bfccd6; }\n      .pt-dark .pt-timepicker .pt-timepicker-arrow-button:hover {\n        color: #f5f8fa; }\n    .pt-timepicker .pt-timepicker-arrow-button + .pt-timepicker-arrow-button {\n      margin-left: 11px; }\n    .pt-timepicker .pt-timepicker-arrow-button:hover {\n      cursor: pointer; }\n  .pt-timepicker .pt-timepicker-input-row {\n    display: inline-block;\n    border-radius: 3px;\n    box-shadow: inset 0 0 0 1px rgba(16, 22, 26, 0.15), inset 0 1px 1px rgba(16, 22, 26, 0.2);\n    background: #ffffff;\n    height: 30px;\n    padding: 0 1px;\n    line-height: 28px; }\n  .pt-timepicker .pt-timepicker-divider-text {\n    display: inline-block;\n    width: 11px;\n    text-align: center;\n    color: #5c7080;\n    font-size: 16px; }\n  .pt-timepicker .pt-timepicker-input {\n    outline: 0;\n    border: 0;\n    border-radius: 3px;\n    box-shadow: 0 0 0 0 rgba(19, 124, 189, 0), 0 0 0 0 rgba(19, 124, 189, 0);\n    background: transparent;\n    width: 33px;\n    height: 28px;\n    padding: 0;\n    text-align: center;\n    color: #182026;\n    transition: box-shadow 100ms cubic-bezier(0.4, 1, 0.75, 0.9); }\n    .pt-timepicker .pt-timepicker-input:focus {\n      box-shadow: 0 0 0 1px #137cbd, 0 0 0 3px rgba(19, 124, 189, 0.3); }\n\n.pt-dark .pt-timepicker .pt-timepicker-input-row {\n  box-shadow: inset 0 0 0 1px rgba(16, 22, 26, 0.3), inset 0 1px 1px rgba(16, 22, 26, 0.4);\n  background: rgba(16, 22, 26, 0.3); }\n\n.pt-dark .pt-timepicker .pt-timepicker-divider-text {\n  color: #bfccd6; }\n\n.pt-dark .pt-timepicker .pt-timepicker-input {\n  color: #f5f8fa; }\n\n/*\nColors\n\nHex values for these colors can be accessed in JavaScript. The global version of the module exposes\nthe `Blueprint.Colors` object. In CommonJS, you may `import { Colors } from \"@blueprintjs/core\"`.\n\nStyleguide colors\n*/\n/*\nGray scale\n\nBlack, white and everything in between. The gray scale should be used for\nthe main UI frame: containers, headers, sections, boxes, etc.\nIf you need to call attention to a particular element (buttons, icons, tooltips, etc.),\nuse one of the [core colors](#colors.core).\n\n@react-docs GrayscalePalette\n\nWeight: -1\n\nStyleguide colors.grays\n*/\n/*\nCore colors\n\nCore colors are reserved for user interface design. Use these to help call\nattention to specific UI elements, such as buttons, callouts, icons, etc.\nEach core color is mapped to what we call a __visual intent__. We use intents\nto convey the status of UI elements:\n\n- _Blue_ (intent: primary) elevates elements from the typical gray scale UI frame.\n- _Green_ (intent: success) indicates successful operations.\n- _Orange_ (intent: warning) indicates warnings and intermediate states.\n- _Red_ (intent: danger) indicates errors and potentially destructive operations.\n\nCore colors are also designed to:\n\n- go well together and be used alongside each other in any application.\n- adhere to [WCAG 2.0](https://www.w3.org/TR/WCAG20/) standards, and therefore are\n  highly accessible to visually impaired and color blind users.\n\n@react-docs CoreColorsPalette\n\nStyleguide colors.core\n*/\n/*\nExtended colors\n\nExtended colors should typically be reserved for data visualizations: any time\nyou need to represent data of some sort, you can use these.\nThese colors are less strict on [WCAG 2.0](https://www.w3.org/TR/WCAG20/)\naccessibility standards and should therefore not be used for typical user\ninterface design — take a look at [core colors](#colors.core) instead.\n\n@react-docs ExtendedColorsPalette\n\nStyleguide colors.extended\n*/\n/*\nColor aliases\n\nThese variables are semantic aliases of our [colors](#colors). They are used throughout Blueprint\nitself to ensure consistent color usage across components.\n\n<table class=pt-table>\n  <thead>\n    <tr>\n      <th></th>\n      <th>Variable</th>\n      <th>Description</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-intent-primary\"></div></td>\n      <td><code>$pt-intent-primary</code></td>\n      <td>Primary intent color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-intent-success\"></div></td>\n      <td><code>$pt-intent-success</code></td>\n      <td>Success intent color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-intent-warning\"></div></td>\n      <td><code>$pt-intent-warning</code></td>\n      <td>Warning intent color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-intent-danger\"></div></td>\n      <td><code>$pt-intent-danger</code></td>\n      <td>Danger intent color</td>\n    </tr>\n\n    <tr>\n      <td><div class=\"docs-color-bubble alias-app-background-color\"></div></td>\n      <td><code>$pt-app-background-color</code></td>\n      <td>Application background color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-app-background-color\"></div></td>\n      <td><code>$pt-dark-app-background-color</code></td>\n      <td>Dark theme application background color</td>\n    </tr>\n\n    <tr>\n      <td><div class=\"docs-color-bubble alias-text-color\"></div></td>\n      <td><code>$pt-text-color</code></td>\n      <td>Default text color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-text-color-muted\"></div></td>\n      <td><code>$pt-text-color-muted</code></td>\n      <td>Muted text color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-text-color-disabled\"></div></td>\n      <td><code>$pt-text-color-disabled</code></td>\n      <td>Disabled text color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-heading-color\"></div></td>\n      <td><code>$pt-heading-color</code></td>\n      <td>Text color for headers</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-link-color\"></div></td>\n      <td><code>$pt-link-color</code></td>\n      <td>Text color for links</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-text-color\"></div></td>\n      <td><code>$pt-dark-text-color</code></td>\n      <td>Dark theme default text color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-text-color-muted\"></div></td>\n      <td><code>$pt-dark-text-color-muted</code></td>\n      <td>Dark theme muted text color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-text-color-disabled\"></div></td>\n      <td><code>$pt-dark-text-color-disabled</code></td>\n      <td>Dark theme disabled text color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-heading-color\"></div></td>\n      <td><code>$pt-dark-heading-color</code></td>\n      <td>Dark theme text color for headers</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-link-color\"></div></td>\n      <td><code>$pt-dark-link-color</code></td>\n      <td>Dark theme text color for links</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-text-selection-color\"></div></td>\n      <td><code>$pt-text-selection-color</code></td>\n      <td>Text selection color</td>\n    </tr>\n\n    <tr>\n      <td><div class=\"docs-color-bubble alias-icon-color\"></div></td>\n      <td><code>$pt-icon-color</code></td>\n      <td>Default icon color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-icon-color-hover\"></div></td>\n      <td><code>$pt-icon-color-hover</code></td>\n      <td>Hovered icon color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-icon-color-disabled\"></div></td>\n      <td><code>$pt-icon-color-disabled</code></td>\n      <td>Disabled icon color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-icon-color-selected\"></div></td>\n      <td><code>$pt-icon-color-selected</code></td>\n      <td>Selected icon color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-icon-color\"></div></td>\n      <td><code>$pt-dark-icon-color</code></td>\n      <td>Dark theme default icon color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-icon-color-hover\"></div></td>\n      <td><code>$pt-dark-icon-color-hover</code></td>\n      <td>Dark theme hovered icon color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-icon-color-disabled\"></div></td>\n      <td><code>$pt-dark-icon-color-disabled</code></td>\n      <td>Dark theme disabled icon color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-icon-color-selected\"></div></td>\n      <td><code>$pt-dark-icon-color-selected</code></td>\n      <td>Dark theme selected icon color</td>\n    </tr>\n\n    <tr>\n      <td><div class=\"docs-color-bubble alias-divider-black\"></div></td>\n      <td><code>$pt-divider-black</code></td>\n      <td>Black divider color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-divider-black\"></div></td>\n      <td><code>$pt-dark-divider-black</code></td>\n      <td>Dark theme black divider color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-divider-white\"></div></td>\n      <td><code>$pt-dark-divider-white</code></td>\n      <td>Dark theme white divider color</td>\n    </tr>\n\n    <tr>\n      <td><div class=\"docs-color-bubble alias-code-text-color\"></div></td>\n      <td><code>$pt-code-text-color</code></td>\n      <td>Code text color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-code-background-color\"></div></td>\n      <td><code>$pt-code-background-color</code></td>\n      <td>Code background color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-code-text-color\"></div></td>\n      <td><code>$pt-dark-code-text-color</code></td>\n      <td>Dark theme code text color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-code-background-color\"></div></td>\n      <td><code>$pt-dark-code-background-color</code></td>\n      <td>Dark theme code background color</td>\n    </tr>\n  </tbody>\n</table>\n\nStyleguide variables.colors\n*/\n/*\nColor schemes\n\nUse the following color scheme generators to produce color schemes for your data visualizations.\nFirst, choose the kind of scheme based on the type of your data, then customize the number of values\nusing the forms below. Finally, copy the colors array into your application and make it live!\n\nThe following schemes have been carefully crafted to be visually striking and easily understandable\nwhile remaining accessible to visually impaired and color blind users.\n\nStyleguide colors.schemes\n*/\n/*\nSequential color schemes\n\nSequential color schemes imply order and are best suited for representing data that\nranges from low-to-high values either on an ordinal or on a numerical scale.\n\nWeight: -1\n\n@react-docs SequentialSchemePalette\n\nStyleguide colors.schemes.sequential\n*/\n/*\nDiverging color schemes\n\nDiverging color schemes put equal emphasis on mid-range values and extremes\nat both ends of the data range.\n\n@react-docs DivergingSchemePalette\n\nStyleguide colors.schemes.diverging\n*/\n/*\nQualitative color schemes\n\nQualitative color schemes use a series of unrelated colors to create a\nscheme that does not imply order, merely difference in kind.\n\n@react-docs QualitativeSchemePalette\n\nStyleguide colors.schemes.qualitative\n*/\n/*\nColors\n\nHex values for these colors can be accessed in JavaScript. The global version of the module exposes\nthe `Blueprint.Colors` object. In CommonJS, you may `import { Colors } from \"@blueprintjs/core\"`.\n\nStyleguide colors\n*/\n/*\nGray scale\n\nBlack, white and everything in between. The gray scale should be used for\nthe main UI frame: containers, headers, sections, boxes, etc.\nIf you need to call attention to a particular element (buttons, icons, tooltips, etc.),\nuse one of the [core colors](#colors.core).\n\n@react-docs GrayscalePalette\n\nWeight: -1\n\nStyleguide colors.grays\n*/\n/*\nCore colors\n\nCore colors are reserved for user interface design. Use these to help call\nattention to specific UI elements, such as buttons, callouts, icons, etc.\nEach core color is mapped to what we call a __visual intent__. We use intents\nto convey the status of UI elements:\n\n- _Blue_ (intent: primary) elevates elements from the typical gray scale UI frame.\n- _Green_ (intent: success) indicates successful operations.\n- _Orange_ (intent: warning) indicates warnings and intermediate states.\n- _Red_ (intent: danger) indicates errors and potentially destructive operations.\n\nCore colors are also designed to:\n\n- go well together and be used alongside each other in any application.\n- adhere to [WCAG 2.0](https://www.w3.org/TR/WCAG20/) standards, and therefore are\n  highly accessible to visually impaired and color blind users.\n\n@react-docs CoreColorsPalette\n\nStyleguide colors.core\n*/\n/*\nExtended colors\n\nExtended colors should typically be reserved for data visualizations: any time\nyou need to represent data of some sort, you can use these.\nThese colors are less strict on [WCAG 2.0](https://www.w3.org/TR/WCAG20/)\naccessibility standards and should therefore not be used for typical user\ninterface design — take a look at [core colors](#colors.core) instead.\n\n@react-docs ExtendedColorsPalette\n\nStyleguide colors.extended\n*/\n/*\nColor aliases\n\nThese variables are semantic aliases of our [colors](#colors). They are used throughout Blueprint\nitself to ensure consistent color usage across components.\n\n<table class=pt-table>\n  <thead>\n    <tr>\n      <th></th>\n      <th>Variable</th>\n      <th>Description</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-intent-primary\"></div></td>\n      <td><code>$pt-intent-primary</code></td>\n      <td>Primary intent color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-intent-success\"></div></td>\n      <td><code>$pt-intent-success</code></td>\n      <td>Success intent color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-intent-warning\"></div></td>\n      <td><code>$pt-intent-warning</code></td>\n      <td>Warning intent color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-intent-danger\"></div></td>\n      <td><code>$pt-intent-danger</code></td>\n      <td>Danger intent color</td>\n    </tr>\n\n    <tr>\n      <td><div class=\"docs-color-bubble alias-app-background-color\"></div></td>\n      <td><code>$pt-app-background-color</code></td>\n      <td>Application background color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-app-background-color\"></div></td>\n      <td><code>$pt-dark-app-background-color</code></td>\n      <td>Dark theme application background color</td>\n    </tr>\n\n    <tr>\n      <td><div class=\"docs-color-bubble alias-text-color\"></div></td>\n      <td><code>$pt-text-color</code></td>\n      <td>Default text color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-text-color-muted\"></div></td>\n      <td><code>$pt-text-color-muted</code></td>\n      <td>Muted text color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-text-color-disabled\"></div></td>\n      <td><code>$pt-text-color-disabled</code></td>\n      <td>Disabled text color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-heading-color\"></div></td>\n      <td><code>$pt-heading-color</code></td>\n      <td>Text color for headers</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-link-color\"></div></td>\n      <td><code>$pt-link-color</code></td>\n      <td>Text color for links</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-text-color\"></div></td>\n      <td><code>$pt-dark-text-color</code></td>\n      <td>Dark theme default text color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-text-color-muted\"></div></td>\n      <td><code>$pt-dark-text-color-muted</code></td>\n      <td>Dark theme muted text color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-text-color-disabled\"></div></td>\n      <td><code>$pt-dark-text-color-disabled</code></td>\n      <td>Dark theme disabled text color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-heading-color\"></div></td>\n      <td><code>$pt-dark-heading-color</code></td>\n      <td>Dark theme text color for headers</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-link-color\"></div></td>\n      <td><code>$pt-dark-link-color</code></td>\n      <td>Dark theme text color for links</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-text-selection-color\"></div></td>\n      <td><code>$pt-text-selection-color</code></td>\n      <td>Text selection color</td>\n    </tr>\n\n    <tr>\n      <td><div class=\"docs-color-bubble alias-icon-color\"></div></td>\n      <td><code>$pt-icon-color</code></td>\n      <td>Default icon color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-icon-color-hover\"></div></td>\n      <td><code>$pt-icon-color-hover</code></td>\n      <td>Hovered icon color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-icon-color-disabled\"></div></td>\n      <td><code>$pt-icon-color-disabled</code></td>\n      <td>Disabled icon color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-icon-color-selected\"></div></td>\n      <td><code>$pt-icon-color-selected</code></td>\n      <td>Selected icon color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-icon-color\"></div></td>\n      <td><code>$pt-dark-icon-color</code></td>\n      <td>Dark theme default icon color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-icon-color-hover\"></div></td>\n      <td><code>$pt-dark-icon-color-hover</code></td>\n      <td>Dark theme hovered icon color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-icon-color-disabled\"></div></td>\n      <td><code>$pt-dark-icon-color-disabled</code></td>\n      <td>Dark theme disabled icon color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-icon-color-selected\"></div></td>\n      <td><code>$pt-dark-icon-color-selected</code></td>\n      <td>Dark theme selected icon color</td>\n    </tr>\n\n    <tr>\n      <td><div class=\"docs-color-bubble alias-divider-black\"></div></td>\n      <td><code>$pt-divider-black</code></td>\n      <td>Black divider color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-divider-black\"></div></td>\n      <td><code>$pt-dark-divider-black</code></td>\n      <td>Dark theme black divider color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-divider-white\"></div></td>\n      <td><code>$pt-dark-divider-white</code></td>\n      <td>Dark theme white divider color</td>\n    </tr>\n\n    <tr>\n      <td><div class=\"docs-color-bubble alias-code-text-color\"></div></td>\n      <td><code>$pt-code-text-color</code></td>\n      <td>Code text color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-code-background-color\"></div></td>\n      <td><code>$pt-code-background-color</code></td>\n      <td>Code background color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-code-text-color\"></div></td>\n      <td><code>$pt-dark-code-text-color</code></td>\n      <td>Dark theme code text color</td>\n    </tr>\n    <tr>\n      <td><div class=\"docs-color-bubble alias-dark-code-background-color\"></div></td>\n      <td><code>$pt-dark-code-background-color</code></td>\n      <td>Dark theme code background color</td>\n    </tr>\n  </tbody>\n</table>\n\nStyleguide variables.colors\n*/\n/*\nColor schemes\n\nUse the following color scheme generators to produce color schemes for your data visualizations.\nFirst, choose the kind of scheme based on the type of your data, then customize the number of values\nusing the forms below. Finally, copy the colors array into your application and make it live!\n\nThe following schemes have been carefully crafted to be visually striking and easily understandable\nwhile remaining accessible to visually impaired and color blind users.\n\nStyleguide colors.schemes\n*/\n/*\nSequential color schemes\n\nSequential color schemes imply order and are best suited for representing data that\nranges from low-to-high values either on an ordinal or on a numerical scale.\n\nWeight: -1\n\n@react-docs SequentialSchemePalette\n\nStyleguide colors.schemes.sequential\n*/\n/*\nDiverging color schemes\n\nDiverging color schemes put equal emphasis on mid-range values and extremes\nat both ends of the data range.\n\n@react-docs DivergingSchemePalette\n\nStyleguide colors.schemes.diverging\n*/\n/*\nQualitative color schemes\n\nQualitative color schemes use a series of unrelated colors to create a\nscheme that does not imply order, merely difference in kind.\n\n@react-docs QualitativeSchemePalette\n\nStyleguide colors.schemes.qualitative\n*/\n/*\nVariables\n\nAvailable for use with Sass and Less.\n\n```css.scss\n@import \"path/to/@blueprintjs/core/dist/variables\";\n```\n\nThe Sass `$` convention is used in this documentation for consistency with the original source code.\nEvery variable mentioned below is also available in `variables.less` with an `@` prefix instead of `$`.\n\nWeight: 4\n\nStyleguide variables\n*/\n/*\nFont variables\n\nTypically, correct typography styles should be achieved by using the proper HTML tag (`<p>` for\ntext, `<h*>` for headings, `<code>` for code, etc.). The following variables are provided for the\nrare cases where custom styling is necessary and should be used sparingly:\n\n- `$pt-font-family`\n- `$pt-font-family-monospace`\n- `$pt-font-size`\n- `$pt-font-size-small`\n- `$pt-font-size-large`\n- `$pt-line-height`\n\nSee the [Fonts section](#typography.fonts) for more information and usage guidelines.\n\nStyleguide variables.fonts\n*/\n/*\nIcon variables\n\nMost icons should be displayed using the `span.pt-icon-*` classes or via modifier classes on\ncomponents like `.pt-button`. In rare cases, you may need direct access to the content\nstring that generates each icon in the icon font. Blueprint provides these variables with\nstraightforward names (see the [Icons section](#icons) for the full list of identifiers):\n\n- `$pt-icon-style`\n- `$pt-icon-align-left`\n- `$pt-icon-align-center`\n- ...\n\nVariables are also provided for the two icon font families and their pixel sizes:\n\n- `@icons16-family`\n- `@icons20-family`\n- `$pt-icon-size-standard`\n- `$pt-icon-size-large`\n\nStyleguide variables.icons\n*/\n/*\nGrids & dimensions\n\nSizes of common components. Most sizing variables are based on `$pt-grid-size`, which has\na value of `10px`. Custom components should adhere to the relevant `height` variable.\n\n- `$pt-grid-size`\n- `$pt-border-radius`\n- `$pt-button-height`\n- `$pt-button-height-large`\n- `$pt-input-height`\n- `$pt-input-height-large`\n- `$pt-navbar-height`\n\nWeight: 1\n\nStyleguide variables.dimensions\n*/\n/*\nGrid system\n\nBlueprint doesn't provide a grid system. In general, you should try to use the `$pt-grid-size`\nvariable to generate layout & sizing style rules in your CSS codebase.\n\nIn lieu of a full grid system, you should try to use the __CSS flexible box layout model__ (a.k.a.\n\"flexbox\"). It's quite powerful on its own and allows you to build robust, responsive layouts\nwithout writing much CSS. Here are some resources for learning flexbox:\n   - [MDN guide](https://developer.mozilla.org/en-US/docs/Web/Guide/CSS/Flexible_boxes)\n   - [CSS Tricks guide](https://css-tricks.com/snippets/css/a-guide-to-flexbox/)\n\nStyleguide variables.dimensions.grid\n*/\n/*\nLayering\n\nBlueprint provides variables for three z-index layers. This should be enough for most use cases,\nespecially if you make correct use of [stacking context][MDN]. [Overlay](#components.overlay)\ncomponents such as dialogs and popovers use these z-index values to configure their stacking\ncontexts.\n\n- `$pt-z-index-base`\n- `$pt-z-index-content`\n- `$pt-z-index-overlay`\n\n[MDN]: https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Positioning/Understanding_z_index/The_stacking_context\n\nWeight: 1\n\nStyleguide variables.layering\n*/\n/*\nLight theme styles\n\nUse these when you need to build custom UI components that look similar to Blueprint's\nlight theme components.\n\n- `$pt-dialog-box-shadow`\n- `$pt-input-box-shadow`\n- `$pt-popover-box-shadow`\n- `$pt-tooltip-box-shadow`\n\nWeight: 2\n\nStyleguide variables.light\n*/\n/*\nDark theme styles\n\nUse these when you need to build custom UI components that look similar to Blueprint's\ndark theme components.\n\n- `$pt-dark-dialog-box-shadow`\n- `$pt-dark-input-box-shadow`\n- `$pt-dark-popover-box-shadow`\n- `$pt-dark-tooltip-box-shadow`\n\nWeight: 3\n\nStyleguide variables.dark\n*/\n/*\nDate time picker\n\nA combined component consisting of a [`DatePicker`](#components.datetime.datepicker)\nand a [`TimePicker`](#components.datetime.timepicker).\n\nUse the `onChange` prop to listen for changes to the selected date and time. You can control the\nselected date and time by setting the `value` prop, or use the component in uncontrolled\nmode and specify an initial day by setting `defaultValue`. (If `defaultValue` is not set,\nthe current date and time is used as the default.)\n\nYou can pass props to the inner `DatePicker` and `TimePicker` components using\n`datePickerProps` and `timePickerProps`, respectively.\n\n@react-example DateTimePickerExample\n\nWeight: 1\n\nStyleguide components.datetime.datetimepicker\n*/\n/*\nJavaScript API\n\nThe `DateTimePicker` component is available in the __@blueprintjs/datetime__ package.\nMake sure to review the [general usage docs for date & time components](#components.datetime).\n\n```\nimport { DateTimePicker } from \"@blueprintjs/datetime\";\n\n<DateTimePicker value={this.state.date} onChange={this.handleDateChange} />\n```\n\n@interface IDateTimePickerProps\n\nStyleguide components.datetime.datetimepicker.js\n*/\n.pt-datetimepicker {\n  border-radius: 3px;\n  background-color: #ffffff;\n  padding: 10px;\n  text-align: center; }\n  .pt-dark .pt-datetimepicker {\n    background: #30404d; }\n    .pt-dark .pt-datetimepicker .pt-datepicker {\n      border-bottom: 1px solid rgba(16, 22, 26, 0.4); }\n  .pt-datetimepicker .pt-datepicker {\n    border-bottom: 1px solid rgba(16, 22, 26, 0.15);\n    padding: 0 0 10px; }\n  .pt-datetimepicker .pt-timepicker {\n    padding: 10px 0 0; }\n\n/*\nDate input\n\nThe `DateInput` component is an [input group](#components.forms.input-group) with a calendar button\nthat shows a [`DatePicker`](#components.datetime.datepicker) in a [`Popover`](#components.popover).\n\nUse the `onChange` function to listen for changes to the selected date. Use `onError` to listen for\ninvalid entered dates.\n\nYou can control the selected date by setting the `value` prop, or use the component in uncontrolled\nmode and specify an initial date by setting `defaultValue`.\n\nUse this component in forms where the user must enter a date.\n\n@react-example DateInputExample\n\nWeight: 2\n\nStyleguide components.datetime.dateinput\n*/\n/*\nJavaScript API\n\nThe `DateInput` component is available in the __@blueprintjs/datetime__ package.\nMake sure to review the [general usage docs for date & time components](#components.datetime).\n\n```\nimport { DateInput } from \"@blueprintjs/datetime\";\n\n<DateInput value={this.state.date} onChange={this.handleDateChange} />\n```\n\n@interface IDateInputProps\n\nStyleguide components.datetime.dateinput.js\n*/\n.pt-dateinput-popover {\n  padding: 0; }\n"]}